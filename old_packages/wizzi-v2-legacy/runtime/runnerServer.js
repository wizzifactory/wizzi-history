/*
    artifact generator: /wizzi/lib/artifacts/js/module/gen/main.js
    primary source IttfDocument: C:\My\wizzi\v2\sources\wizzi-2-boot\ittf\runtime\runnerServer.js.ittf
    utc time: Tue, 11 Jul 2017 18:49:57 GMT
*/
'use strict';
// generated by js.module.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _ = require('lodash');
var chalk = require('chalk');
var errors = require('./errors');
var acl = require('../lib/acl');
var ProductionManager = require('../lib/production/manager');
var repository = require('../lib/services/repository');
var filefinder = require('../lib/services/filefinder');
var RunnerServer = (function () {
    function RunnerServer(cwd,wizziModule) {
        _classCallCheck(this, RunnerServer);
        this.cwd = cwd;
        this.initReposiory(wizziModule);
        this.initApis();
    }
    RunnerServer.prototype.initReposiory = function(wizziModule) {
        this.repository = new repository();
        this.registerPackage(wizziModule);
    }
    RunnerServer.prototype.initApis = function() {
        this.apis = {};
    }
    RunnerServer.prototype.registerPackage = function(pkg) {
        if (typeof (pkg) === 'string') {
            pkg = this.searchPackage(pkg);
        }
        else if (typeof (pkg) === 'function') {
            pkg = pkg();
        }
        if (typeof(pkg) === 'object') {
            console.log(chalk.yellow('WIZZI RunnerServer. Registered WizziFactoryPackage: ' + pkg.name));
            this.repository.registerWizziFactoryPackage(pkg);
        }
        else {
            throw new errors.RunnerServerError('Error registering package. The paramater "pkg" is not of type ovject');
        }
    }
    RunnerServer.prototype.searchPackage = function(packageName) {
        var packagePath = filefinder.findNodePackage(packageName, this.cwd, true)
        ;
        return packagePath;
    }
    RunnerServer.prototype.loadWizziModel = function(wizzischema,ittfDocumentUri,context,callback) {
        context = Object.assign({}, context, {
            __productionManager: this.createProductionManager('stefi', 'admin', {})
            
        })
        ;
        this.repository.loadWizziModel(wizzischema, ittfDocumentUri, context, callback);
    }
    RunnerServer.prototype.transformModel = function(transformName,model,context,callback) {
        context = Object.assign({}, context, {
            __productionManager: this.createProductionManager('stefi', 'admin', {})
            
        })
        ;
        this.repository.transformModel(transformName, model, context, callback);
    }
    RunnerServer.prototype.loadWizziSchema = function(wfpackageuri,wizzischema,formatOptions,callback) {
        this.repository.loadWizziSchema(wfpackageuri, wizzischema, formatOptions, callback);
    }
    RunnerServer.prototype.registerApi = function(apiName,apiFunction) {
        if (_.isFunction(apiFunction)) {
            this.apis[apiName] = apiFunction;
            console.log(chalk.yellow('WIZZI RunnerServer. Registered Api: ' + apiName));
        }
        else {
            throw new errors.RunnerServerError('Error registering api "' + apiName + '", the parameter "apiFunction" is not a function');
        }
    }
    RunnerServer.prototype.callApi = function(apiName) {
        var apiFunction = this.apis[apiName];
        if (_.isFunction(apiFunction) == false) {
            return this.error('apiName: "' + apiName + '" is not a function', 'callApi')
            ;
        }
        var args = Array.prototype.slice.call(arguments, 1);
        try {
            return apiFunction.apply(this, args);
        } catch (ex) {
            return this.error('apiName "' + apiName + '" exception: ' + ex.message + ', stack: ' + ex.stack, 'callApi')
            ;
        }
    }
    RunnerServer.prototype.createProductionManager = function(user,subscription,globalContext) {
        var pman = new ProductionManager({});
        pman.aclStat(new acl.AclStat(user, subscription));
        pman.globalContext(globalContext);
        return pman;
    }
    RunnerServer.prototype.error = function(message,method) {
        return {
                message: 'RunnerServer error: ' + message, 
                method: 'runtime/runnerServer/' + method
            };
    }
    return RunnerServer;
})();


module.exports = {
    instance: null, 
    init: function(cwd,wizziModule) {
        this.instance = new RunnerServer(cwd, wizziModule);
    }
};
