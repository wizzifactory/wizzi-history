/*
    artifact generator: /wizzi/lib/artifacts/js/module/gen/main.js
    primary source IttfDocument: C:\My\wizzi\v2\packages\wizzi\lib\artifacts\wizzischema\model\gen\ittf\wizzischema-model.js.ittf
    utc time: Tue, 11 Jul 2017 18:43:44 GMT
*/
'use strict';
// generated by js.module.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');

var md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row,col,sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();


md.wzSourceLineInfo = wzSourceLineInfo;
var cssBase = (function () {
    function cssBase(name,sourceLineInfo) {
        _classCallCheck(this, cssBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    cssBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    cssBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadContext.getIttfDocumentUri(sourceKey);
    }
    cssBase.prototype.wzVerify = function() {
    }
    cssBase.prototype.wzInitialize = function() {
    }
    cssBase.prototype.wzInitializeAsync = function(ctx,callback) {
        callback(null);
    }
    cssBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    cssBase.prototype.wzLoadToChildColl = function(child,type,coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    cssBase.prototype.wzLoadToChildren = function(child,type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    cssBase.prototype.wzLoadOneToOne = function(child,type,fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    cssBase.prototype.error = function(message,node) {
        throw new md.cssException(message, node, this);
    }
    return cssBase;
})();


md.cssBase = cssBase;

/**
    element css
     The root element
*/
var css = (function (cssBase) {
    _inherits(css, cssBase);
    function css(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(css.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, css);
        this.wzElement = "css";
        // relation resource
        this.resources = [];
        // relation rule
        this.rules = [];
        // relation comment
        this.comments = [];
    }
    css.prototype.addResource = function(name,sourceLineInfo) {
        var retval = new md.resource(name, sourceLineInfo);
        retval.wzParent = this;
        this.resources.push(retval);
        return retval;
    }
    css.prototype.getResource = function(name) {
        var found = null;
        this.resources.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    css.prototype.getRule = function(name) {
        var found = null;
        this.rules.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    css.prototype.addComment = function(name,sourceLineInfo) {
        var retval = new md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    css.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    css.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, md.idRule, this.rules);
            }
        }
        if (_l == 1 && _ch == '-') {
            if (name === '-') {
                return this.wzLoadToChildColl(child, md.comment, this.rules);
            }
            else if (name === '-') {
                return this.wzLoadToChildColl(child, md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, md.classRule, this.rules);
            }
        }
        if (_l == 1 && _ch == '<') {
            if (name === '<') {
                return this.wzLoadToChildColl(child, md.elementRule, this.rules);
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'media') {
                return this.wzLoadToChildColl(child, md.media, this.rules);
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'import') {
                return this.wzLoadToChildColl(child, md.ximport, this.rules);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'include') {
                return this.wzLoadToChildColl(child, md.include, this.rules);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'fontface') {
                return this.wzLoadToChildColl(child, md.fontface, this.rules);
            }
        }
        if (_l == 8 && _ch == 'k') {
            if (name === 'keyframe') {
                return this.wzLoadToChildColl(child, md.keyframe, this.rules);
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'resource') {
                return this.wzLoadToChildColl(child, md.resource, this.resources);
            }
        }
        if (_l == 9 && _ch == 'f') {
            if (name === 'font-face') {
                return this.wzLoadToChildColl(child, md.fontface, this.rules);
            }
        }
        if (_l == 9 && _ch == 'k') {
            if (name === 'keyframes') {
                return this.wzLoadToChildColl(child, md.keyframes, this.rules);
            }
        }
        return ok;
    }
    css.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    css.prototype.wzVerify = function(ctx) {
        var i, i_len=this.resources.length, item;
        for (i=0; i<i_len; i++) {
            item = this.resources[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.rules.length, item;
        for (i=0; i<i_len; i++) {
            item = this.rules[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        md.cssBase.prototype.wzVerify.call(this, ctx);
    }
    css.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.resources.length, item;
        for (i=0; i<i_len; i++) {
            item = this.resources[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.rules.length, item;
        for (i=0; i<i_len; i++) {
            item = this.rules[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        md.cssBase.prototype.wzInitialize.call(this, ctx);
    }
    return css;
})(cssBase);


md.css = css;
/**
    element resource
     A known resource (a fragment of a stylesheet), stored in a repository,
     that must be included in the generated artifact.
*/
var resource = (function (cssBase) {
    _inherits(resource, cssBase);
    function resource(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(resource.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, resource);
        this.wzElement = "resource";
    }
    return resource;
})(cssBase);


md.resource = resource;
/**
    element rule
     The base abstract rule.
     It has a child relation (one-to-many) with itself so one
     can declare a tree with unlimited deep.
*/
var rule = (function (cssBase) {
    _inherits(rule, cssBase);
    function rule(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(rule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, rule);
        this.wzElement = "rule";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this._webkit__ = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this._ms__ = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this._o__ = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this._moz__ = null
        // relation otherRuleSelector
        this.otherRuleSelectors = [];
        // relation property
        this.properties = [];
        // relation rule
        this.rules = [];
    }
    rule.prototype.addOtherRuleSelector = function(name,sourceLineInfo) {
        var retval = new md.otherRuleSelector(name, sourceLineInfo);
        retval.wzParent = this;
        this.otherRuleSelectors.push(retval);
        return retval;
    }
    rule.prototype.getOtherRuleSelector = function(name) {
        var found = null;
        this.otherRuleSelectors.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    rule.prototype.addProperty = function(name,sourceLineInfo) {
        var retval = new md.property(name, sourceLineInfo);
        retval.wzParent = this;
        this.properties.push(retval);
        return retval;
    }
    rule.prototype.getProperty = function(name) {
        var found = null;
        this.properties.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    rule.prototype.getRule = function(name) {
        var found = null;
        this.rules.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    rule.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, md.idRule, this.rules);
            }
        }
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, md.otherRuleSelector, this.otherRuleSelectors);
            }
        }
        if (_l == 1 && _ch == '-') {
            if (name === '-') {
                return this.wzLoadToChildColl(child, md.comment, this.rules);
            }
        }
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, md.classRule, this.rules);
            }
        }
        if (_l == 1 && _ch == '<') {
            if (name === '<') {
                return this.wzLoadToChildColl(child, md.elementRule, this.rules);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, md.property, this.properties);
            }
        }
        if (_l == 3 && _ch == 'c') {
            if (name === 'cue') {
                return this.wzLoadToChildColl(child, md.cue, this.properties);
            }
        }
        if (_l == 3 && _ch == 't') {
            if (name === 'top') {
                return this.wzLoadToChildColl(child, md.top, this.properties);
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'clip') {
                return this.wzLoadToChildColl(child, md.clip, this.properties);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'flex') {
                return this.wzLoadToChildColl(child, md.flex, this.properties);
            }
            else if (name === 'font') {
                return this.wzLoadToChildColl(child, md.font, this.properties);
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'left') {
                return this.wzLoadToChildColl(child, md.left, this.properties);
            }
        }
        if (_l == 4 && _ch == 'z') {
            if (name === 'zoom') {
                return this.wzLoadToChildColl(child, md.zoom, this.properties);
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'clear') {
                return this.wzLoadToChildColl(child, md.clear, this.properties);
            }
            else if (name === 'color') {
                return this.wzLoadToChildColl(child, md.color, this.properties);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, md.xfloat, this.properties);
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'media') {
                return this.wzLoadToChildColl(child, md.media, this.rules);
            }
        }
        if (_l == 5 && _ch == 'n') {
            if (name === 'navup') {
                return this.wzLoadToChildColl(child, md.nav_up, this.properties);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'order') {
                return this.wzLoadToChildColl(child, md.order, this.properties);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'pause') {
                return this.wzLoadToChildColl(child, md.pause, this.properties);
            }
            else if (name === 'pitch') {
                return this.wzLoadToChildColl(child, md.pitch, this.properties);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'right') {
                return this.wzLoadToChildColl(child, md.right, this.properties);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'speak') {
                return this.wzLoadToChildColl(child, md.speak, this.properties);
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'width') {
                return this.wzLoadToChildColl(child, md.width, this.properties);
            }
        }
        if (_l == 6 && _ch == 'b') {
            if (name === 'border') {
                return this.wzLoadToChildColl(child, md.border, this.properties);
            }
            else if (name === 'bottom') {
                return this.wzLoadToChildColl(child, md.bottom, this.properties);
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'cursor') {
                return this.wzLoadToChildColl(child, md.cursor, this.properties);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'filter') {
                return this.wzLoadToChildColl(child, md.filter, this.properties);
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'height') {
                return this.wzLoadToChildColl(child, md.height, this.properties);
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'import') {
                return this.wzLoadToChildColl(child, md.ximport, this.rules);
            }
        }
        if (_l == 6 && _ch == 'm') {
            if (name === 'margin') {
                return this.wzLoadToChildColl(child, md.margin, this.properties);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'nav-up') {
                return this.wzLoadToChildColl(child, md.nav_up, this.properties);
            }
        }
        if (_l == 6 && _ch == 'q') {
            if (name === 'quotes') {
                return this.wzLoadToChildColl(child, md.quotes, this.properties);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'resize') {
                return this.wzLoadToChildColl(child, md.resize, this.properties);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'stress') {
                return this.wzLoadToChildColl(child, md.stress, this.properties);
            }
        }
        if (_l == 6 && _ch == 'v') {
            if (name === 'volume') {
                return this.wzLoadToChildColl(child, md.volume, this.properties);
            }
        }
        if (_l == 6 && _ch == 'w') {
            if (name === 'widows') {
                return this.wzLoadToChildColl(child, md.widows, this.properties);
            }
        }
        if (_l == 6 && _ch == 'z') {
            if (name === 'zindex') {
                return this.wzLoadToChildColl(child, md.z_index, this.properties);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'azimuth') {
                return this.wzLoadToChildColl(child, md.azimuth, this.properties);
            }
        }
        if (_l == 7 && _ch == 'c') {
            if (name === 'columns') {
                return this.wzLoadToChildColl(child, md.columns, this.properties);
            }
            else if (name === 'content') {
                return this.wzLoadToChildColl(child, md.content, this.properties);
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'display') {
                return this.wzLoadToChildColl(child, md.display, this.properties);
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'hyphens') {
                return this.wzLoadToChildColl(child, md.hyphens, this.properties);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'include') {
                return this.wzLoadToChildColl(child, md.include, this.rules);
            }
        }
        if (_l == 7 && _ch == 'n') {
            if (name === 'navdown') {
                return this.wzLoadToChildColl(child, md.nav_down, this.properties);
            }
            else if (name === 'navleft') {
                return this.wzLoadToChildColl(child, md.nav_left, this.properties);
            }
        }
        if (_l == 7 && _ch == 'o') {
            if (name === 'opacity') {
                return this.wzLoadToChildColl(child, md.opacity, this.properties);
            }
            else if (name === 'orphans') {
                return this.wzLoadToChildColl(child, md.orphans, this.properties);
            }
            else if (name === 'outline') {
                return this.wzLoadToChildColl(child, md.outline, this.properties);
            }
        }
        if (_l == 7 && _ch == 'p') {
            if (name === 'padding') {
                return this.wzLoadToChildColl(child, md.padding, this.properties);
            }
        }
        if (_l == 7 && _ch == 't') {
            if (name === 'tabsize') {
                return this.wzLoadToChildColl(child, md.tab_size, this.properties);
            }
        }
        if (_l == 7 && _ch == 'z') {
            if (name === 'z-index') {
                return this.wzLoadToChildColl(child, md.z_index, this.properties);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'cueafter') {
                return this.wzLoadToChildColl(child, md.cue_after, this.properties);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'flexflow') {
                return this.wzLoadToChildColl(child, md.flex_flow, this.properties);
            }
            else if (name === 'flexgrow') {
                return this.wzLoadToChildColl(child, md.flex_grow, this.properties);
            }
            else if (name === 'flexwrap') {
                return this.wzLoadToChildColl(child, md.flex_wrap, this.properties);
            }
            else if (name === 'fontsize') {
                return this.wzLoadToChildColl(child, md.font_size, this.properties);
            }
            else if (name === 'fontface') {
                return this.wzLoadToChildColl(child, md.fontface, this.rules);
            }
        }
        if (_l == 8 && _ch == 'k') {
            if (name === 'keyframe') {
                return this.wzLoadToChildColl(child, md.keyframe, this.rules);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'maxwidth') {
                return this.wzLoadToChildColl(child, md.max_width, this.properties);
            }
            else if (name === 'minwidth') {
                return this.wzLoadToChildColl(child, md.min_width, this.properties);
            }
        }
        if (_l == 8 && _ch == 'n') {
            if (name === 'nav-down') {
                return this.wzLoadToChildColl(child, md.nav_down, this.properties);
            }
            else if (name === 'nav-left') {
                return this.wzLoadToChildColl(child, md.nav_left, this.properties);
            }
            else if (name === 'navright') {
                return this.wzLoadToChildColl(child, md.nav_right, this.properties);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'overflow') {
                return this.wzLoadToChildColl(child, md.overflow, this.properties);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'position') {
                return this.wzLoadToChildColl(child, md.position, this.properties);
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'richness') {
                return this.wzLoadToChildColl(child, md.richness, this.properties);
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'tab-size') {
                return this.wzLoadToChildColl(child, md.tab_size, this.properties);
            }
        }
        if (_l == 8 && _ch == 'w') {
            if (name === 'wordwrap') {
                return this.wzLoadToChildColl(child, md.word_wrap, this.properties);
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'alignself') {
                return this.wzLoadToChildColl(child, md.align_self, this.properties);
            }
            else if (name === 'animation') {
                return this.wzLoadToChildColl(child, md.animation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'b') {
            if (name === 'bordertop') {
                return this.wzLoadToChildColl(child, md.border_top, this.properties);
            }
            else if (name === 'boxsizing') {
                return this.wzLoadToChildColl(child, md.box_sizing, this.properties);
            }
            else if (name === 'boxshadow') {
                return this.wzLoadToChildColl(child, md.box_shadow, this.properties);
            }
        }
        if (_l == 9 && _ch == 'c') {
            if (name === 'columngap') {
                return this.wzLoadToChildColl(child, md.column_gap, this.properties);
            }
            else if (name === 'cue-after') {
                return this.wzLoadToChildColl(child, md.cue_after, this.properties);
            }
            else if (name === 'cuebefore') {
                return this.wzLoadToChildColl(child, md.cue_before, this.properties);
            }
        }
        if (_l == 9 && _ch == 'd') {
            if (name === 'direction') {
                return this.wzLoadToChildColl(child, md.direction, this.properties);
            }
        }
        if (_l == 9 && _ch == 'e') {
            if (name === 'elevation') {
                return this.wzLoadToChildColl(child, md.elevation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'f') {
            if (name === 'flexbasis') {
                return this.wzLoadToChildColl(child, md.flex_basis, this.properties);
            }
            else if (name === 'flex-flow') {
                return this.wzLoadToChildColl(child, md.flex_flow, this.properties);
            }
            else if (name === 'flex-grow') {
                return this.wzLoadToChildColl(child, md.flex_grow, this.properties);
            }
            else if (name === 'flex-wrap') {
                return this.wzLoadToChildColl(child, md.flex_wrap, this.properties);
            }
            else if (name === 'font-size') {
                return this.wzLoadToChildColl(child, md.font_size, this.properties);
            }
            else if (name === 'fontstyle') {
                return this.wzLoadToChildColl(child, md.font_style, this.properties);
            }
            else if (name === 'font-face') {
                return this.wzLoadToChildColl(child, md.fontface, this.rules);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'isolation') {
                return this.wzLoadToChildColl(child, md.isolation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'k') {
            if (name === 'keyframes') {
                return this.wzLoadToChildColl(child, md.keyframes, this.rules);
            }
        }
        if (_l == 9 && _ch == 'l') {
            if (name === 'linebreak') {
                return this.wzLoadToChildColl(child, md.line_break, this.properties);
            }
            else if (name === 'liststyle') {
                return this.wzLoadToChildColl(child, md.list_style, this.properties);
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'margintop') {
                return this.wzLoadToChildColl(child, md.margin_top, this.properties);
            }
            else if (name === 'maxheight') {
                return this.wzLoadToChildColl(child, md.max_height, this.properties);
            }
            else if (name === 'max-width') {
                return this.wzLoadToChildColl(child, md.max_width, this.properties);
            }
            else if (name === 'minheight') {
                return this.wzLoadToChildColl(child, md.min_height, this.properties);
            }
            else if (name === 'min-width') {
                return this.wzLoadToChildColl(child, md.min_width, this.properties);
            }
        }
        if (_l == 9 && _ch == 'n') {
            if (name === 'nav-right') {
                return this.wzLoadToChildColl(child, md.nav_right, this.properties);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'overflowx') {
                return this.wzLoadToChildColl(child, md.overflow_x, this.properties);
            }
            else if (name === 'overflowy') {
                return this.wzLoadToChildColl(child, md.overflow_y, this.properties);
            }
        }
        if (_l == 9 && _ch == 't') {
            if (name === 'targetnew') {
                return this.wzLoadToChildColl(child, md.target_new, this.properties);
            }
            else if (name === 'textalign') {
                return this.wzLoadToChildColl(child, md.text_align, this.properties);
            }
            else if (name === 'transform') {
                return this.wzLoadToChildColl(child, md.transform, this.properties);
            }
        }
        if (_l == 9 && _ch == 'w') {
            if (name === 'wordbreak') {
                return this.wzLoadToChildColl(child, md.word_break, this.properties);
            }
            else if (name === 'word-wrap') {
                return this.wzLoadToChildColl(child, md.word_wrap, this.properties);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'alignitems') {
                return this.wzLoadToChildColl(child, md.align_items, this.properties);
            }
            else if (name === 'align-self') {
                return this.wzLoadToChildColl(child, md.align_self, this.properties);
            }
            else if (name === 'appearance') {
                return this.wzLoadToChildColl(child, md.appearance, this.properties);
            }
        }
        if (_l == 10 && _ch == 'b') {
            if (name === 'background') {
                return this.wzLoadToChildColl(child, md.background, this.properties);
            }
            else if (name === 'border-top') {
                return this.wzLoadToChildColl(child, md.border_top, this.properties);
            }
            else if (name === 'borderleft') {
                return this.wzLoadToChildColl(child, md.border_left, this.properties);
            }
            else if (name === 'box-sizing') {
                return this.wzLoadToChildColl(child, md.box_sizing, this.properties);
            }
            else if (name === 'box-shadow') {
                return this.wzLoadToChildColl(child, md.box_shadow, this.properties);
            }
            else if (name === 'breakafter') {
                return this.wzLoadToChildColl(child, md.break_after, this.properties);
            }
        }
        if (_l == 10 && _ch == 'c') {
            if (name === 'columnfill') {
                return this.wzLoadToChildColl(child, md.column_fill, this.properties);
            }
            else if (name === 'column-gap') {
                return this.wzLoadToChildColl(child, md.column_gap, this.properties);
            }
            else if (name === 'columnrule') {
                return this.wzLoadToChildColl(child, md.column_rule, this.properties);
            }
            else if (name === 'columnspan') {
                return this.wzLoadToChildColl(child, md.column_span, this.properties);
            }
            else if (name === 'cue-before') {
                return this.wzLoadToChildColl(child, md.cue_before, this.properties);
            }
        }
        if (_l == 10 && _ch == 'e') {
            if (name === 'emptycells') {
                return this.wzLoadToChildColl(child, md.empty_cells, this.properties);
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'flex-basis') {
                return this.wzLoadToChildColl(child, md.flex_basis, this.properties);
            }
            else if (name === 'flexshrink') {
                return this.wzLoadToChildColl(child, md.flex_shrink, this.properties);
            }
            else if (name === 'fontfamily') {
                return this.wzLoadToChildColl(child, md.font_family, this.properties);
            }
            else if (name === 'font-style') {
                return this.wzLoadToChildColl(child, md.font_style, this.properties);
            }
            else if (name === 'fontweight') {
                return this.wzLoadToChildColl(child, md.font_weight, this.properties);
            }
        }
        if (_l == 10 && _ch == 'l') {
            if (name === 'line-break') {
                return this.wzLoadToChildColl(child, md.line_break, this.properties);
            }
            else if (name === 'lineheight') {
                return this.wzLoadToChildColl(child, md.line_height, this.properties);
            }
            else if (name === 'list-style') {
                return this.wzLoadToChildColl(child, md.list_style, this.properties);
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'margin-top') {
                return this.wzLoadToChildColl(child, md.margin_top, this.properties);
            }
            else if (name === 'marginleft') {
                return this.wzLoadToChildColl(child, md.margin_left, this.properties);
            }
            else if (name === 'max-height') {
                return this.wzLoadToChildColl(child, md.max_height, this.properties);
            }
            else if (name === 'min-height') {
                return this.wzLoadToChildColl(child, md.min_height, this.properties);
            }
        }
        if (_l == 10 && _ch == 'o') {
            if (name === 'overflow-x') {
                return this.wzLoadToChildColl(child, md.overflow_x, this.properties);
            }
            else if (name === 'overflow-y') {
                return this.wzLoadToChildColl(child, md.overflow_y, this.properties);
            }
        }
        if (_l == 10 && _ch == 'p') {
            if (name === 'paddingtop') {
                return this.wzLoadToChildColl(child, md.padding_top, this.properties);
            }
            else if (name === 'pauseafter') {
                return this.wzLoadToChildColl(child, md.pause_after, this.properties);
            }
            else if (name === 'pitchrange') {
                return this.wzLoadToChildColl(child, md.pitch_range, this.properties);
            }
            else if (name === 'playduring') {
                return this.wzLoadToChildColl(child, md.play_during, this.properties);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'speechrate') {
                return this.wzLoadToChildColl(child, md.speech_rate, this.properties);
            }
        }
        if (_l == 10 && _ch == 't') {
            if (name === 'targetname') {
                return this.wzLoadToChildColl(child, md.target_name, this.properties);
            }
            else if (name === 'target-new') {
                return this.wzLoadToChildColl(child, md.target_new, this.properties);
            }
            else if (name === 'text-align') {
                return this.wzLoadToChildColl(child, md.text_align, this.properties);
            }
            else if (name === 'textindent') {
                return this.wzLoadToChildColl(child, md.text_indent, this.properties);
            }
            else if (name === 'textshadow') {
                return this.wzLoadToChildColl(child, md.text_shadow, this.properties);
            }
            else if (name === 'transition') {
                return this.wzLoadToChildColl(child, md.transition, this.properties);
            }
        }
        if (_l == 10 && _ch == 'u') {
            if (name === 'userselect') {
                return this.wzLoadToChildColl(child, md.user_select, this.properties);
            }
        }
        if (_l == 10 && _ch == 'v') {
            if (name === 'visibility') {
                return this.wzLoadToChildColl(child, md.visibility, this.properties);
            }
        }
        if (_l == 10 && _ch == 'w') {
            if (name === 'whitespace') {
                return this.wzLoadToChildColl(child, md.white_space, this.properties);
            }
            else if (name === 'word-break') {
                return this.wzLoadToChildColl(child, md.word_break, this.properties);
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'align-items') {
                return this.wzLoadToChildColl(child, md.align_items, this.properties);
            }
        }
        if (_l == 11 && _ch == 'b') {
            if (name === 'bordercolor') {
                return this.wzLoadToChildColl(child, md.border_color, this.properties);
            }
            else if (name === 'borderstyle') {
                return this.wzLoadToChildColl(child, md.border_style, this.properties);
            }
            else if (name === 'borderright') {
                return this.wzLoadToChildColl(child, md.border_right, this.properties);
            }
            else if (name === 'border-left') {
                return this.wzLoadToChildColl(child, md.border_left, this.properties);
            }
            else if (name === 'borderwidth') {
                return this.wzLoadToChildColl(child, md.border_width, this.properties);
            }
            else if (name === 'borderimage') {
                return this.wzLoadToChildColl(child, md.border_image, this.properties);
            }
            else if (name === 'break-after') {
                return this.wzLoadToChildColl(child, md.break_after, this.properties);
            }
            else if (name === 'breakbefore') {
                return this.wzLoadToChildColl(child, md.break_before, this.properties);
            }
            else if (name === 'breakinside') {
                return this.wzLoadToChildColl(child, md.break_inside, this.properties);
            }
        }
        if (_l == 11 && _ch == 'c') {
            if (name === 'captionside') {
                return this.wzLoadToChildColl(child, md.caption_side, this.properties);
            }
            else if (name === 'columncount') {
                return this.wzLoadToChildColl(child, md.column_count, this.properties);
            }
            else if (name === 'column-fill') {
                return this.wzLoadToChildColl(child, md.column_fill, this.properties);
            }
            else if (name === 'column-rule') {
                return this.wzLoadToChildColl(child, md.column_rule, this.properties);
            }
            else if (name === 'column-span') {
                return this.wzLoadToChildColl(child, md.column_span, this.properties);
            }
            else if (name === 'columnwidth') {
                return this.wzLoadToChildColl(child, md.column_width, this.properties);
            }
        }
        if (_l == 11 && _ch == 'e') {
            if (name === 'empty-cells') {
                return this.wzLoadToChildColl(child, md.empty_cells, this.properties);
            }
        }
        if (_l == 11 && _ch == 'f') {
            if (name === 'flex-shrink') {
                return this.wzLoadToChildColl(child, md.flex_shrink, this.properties);
            }
            else if (name === 'font-family') {
                return this.wzLoadToChildColl(child, md.font_family, this.properties);
            }
            else if (name === 'fontvariant') {
                return this.wzLoadToChildColl(child, md.font_variant, this.properties);
            }
            else if (name === 'font-weight') {
                return this.wzLoadToChildColl(child, md.font_weight, this.properties);
            }
        }
        if (_l == 11 && _ch == 'l') {
            if (name === 'line-height') {
                return this.wzLoadToChildColl(child, md.line_height, this.properties);
            }
        }
        if (_l == 11 && _ch == 'm') {
            if (name === 'marginright') {
                return this.wzLoadToChildColl(child, md.margin_right, this.properties);
            }
            else if (name === 'margin-left') {
                return this.wzLoadToChildColl(child, md.margin_left, this.properties);
            }
        }
        if (_l == 11 && _ch == 'p') {
            if (name === 'padding-top') {
                return this.wzLoadToChildColl(child, md.padding_top, this.properties);
            }
            else if (name === 'paddingleft') {
                return this.wzLoadToChildColl(child, md.padding_left, this.properties);
            }
            else if (name === 'pause-after') {
                return this.wzLoadToChildColl(child, md.pause_after, this.properties);
            }
            else if (name === 'pausebefore') {
                return this.wzLoadToChildColl(child, md.pause_before, this.properties);
            }
            else if (name === 'perspective') {
                return this.wzLoadToChildColl(child, md.perspective, this.properties);
            }
            else if (name === 'pitch-range') {
                return this.wzLoadToChildColl(child, md.pitch_range, this.properties);
            }
            else if (name === 'play-during') {
                return this.wzLoadToChildColl(child, md.play_during, this.properties);
            }
        }
        if (_l == 11 && _ch == 's') {
            if (name === 'speakheader') {
                return this.wzLoadToChildColl(child, md.speak_header, this.properties);
            }
            else if (name === 'speech-rate') {
                return this.wzLoadToChildColl(child, md.speech_rate, this.properties);
            }
        }
        if (_l == 11 && _ch == 't') {
            if (name === 'tablelayout') {
                return this.wzLoadToChildColl(child, md.table_layout, this.properties);
            }
            else if (name === 'target-name') {
                return this.wzLoadToChildColl(child, md.target_name, this.properties);
            }
            else if (name === 'text-indent') {
                return this.wzLoadToChildColl(child, md.text_indent, this.properties);
            }
            else if (name === 'text-shadow') {
                return this.wzLoadToChildColl(child, md.text_shadow, this.properties);
            }
            else if (name === 'touchaction') {
                return this.wzLoadToChildColl(child, md.touch_action, this.properties);
            }
        }
        if (_l == 11 && _ch == 'u') {
            if (name === 'unicodebidi') {
                return this.wzLoadToChildColl(child, md.unicode_bidi, this.properties);
            }
            else if (name === 'user-select') {
                return this.wzLoadToChildColl(child, md.user_select, this.properties);
            }
        }
        if (_l == 11 && _ch == 'v') {
            if (name === 'voicefamily') {
                return this.wzLoadToChildColl(child, md.voice_family, this.properties);
            }
        }
        if (_l == 11 && _ch == 'w') {
            if (name === 'white-space') {
                return this.wzLoadToChildColl(child, md.white_space, this.properties);
            }
            else if (name === 'wordspacing') {
                return this.wzLoadToChildColl(child, md.word_spacing, this.properties);
            }
        }
        if (_l == 12 && _ch == 'a') {
            if (name === 'aligncontent') {
                return this.wzLoadToChildColl(child, md.align_content, this.properties);
            }
        }
        if (_l == 12 && _ch == 'b') {
            if (name === 'border-color') {
                return this.wzLoadToChildColl(child, md.border_color, this.properties);
            }
            else if (name === 'border-style') {
                return this.wzLoadToChildColl(child, md.border_style, this.properties);
            }
            else if (name === 'border-right') {
                return this.wzLoadToChildColl(child, md.border_right, this.properties);
            }
            else if (name === 'borderbottom') {
                return this.wzLoadToChildColl(child, md.border_bottom, this.properties);
            }
            else if (name === 'border-width') {
                return this.wzLoadToChildColl(child, md.border_width, this.properties);
            }
            else if (name === 'borderradius') {
                return this.wzLoadToChildColl(child, md.border_radius, this.properties);
            }
            else if (name === 'border-image') {
                return this.wzLoadToChildColl(child, md.border_image, this.properties);
            }
            else if (name === 'break-before') {
                return this.wzLoadToChildColl(child, md.break_before, this.properties);
            }
            else if (name === 'break-inside') {
                return this.wzLoadToChildColl(child, md.break_inside, this.properties);
            }
        }
        if (_l == 12 && _ch == 'c') {
            if (name === 'caption-side') {
                return this.wzLoadToChildColl(child, md.caption_side, this.properties);
            }
            else if (name === 'column-count') {
                return this.wzLoadToChildColl(child, md.column_count, this.properties);
            }
            else if (name === 'column-width') {
                return this.wzLoadToChildColl(child, md.column_width, this.properties);
            }
            else if (name === 'counterreset') {
                return this.wzLoadToChildColl(child, md.counter_reset, this.properties);
            }
        }
        if (_l == 12 && _ch == 'f') {
            if (name === 'font-variant') {
                return this.wzLoadToChildColl(child, md.font_variant, this.properties);
            }
        }
        if (_l == 12 && _ch == 'm') {
            if (name === 'margin-right') {
                return this.wzLoadToChildColl(child, md.margin_right, this.properties);
            }
            else if (name === 'marginbottom') {
                return this.wzLoadToChildColl(child, md.margin_bottom, this.properties);
            }
            else if (name === 'mixblendmode') {
                return this.wzLoadToChildColl(child, md.mix_blend_mode, this.properties);
            }
        }
        if (_l == 12 && _ch == 'o') {
            if (name === 'outlinecolor') {
                return this.wzLoadToChildColl(child, md.outline_color, this.properties);
            }
            else if (name === 'outlinestyle') {
                return this.wzLoadToChildColl(child, md.outline_style, this.properties);
            }
            else if (name === 'outlinewidth') {
                return this.wzLoadToChildColl(child, md.outline_width, this.properties);
            }
            else if (name === 'overflowwrap') {
                return this.wzLoadToChildColl(child, md.overflow_wrap, this.properties);
            }
        }
        if (_l == 12 && _ch == 'p') {
            if (name === 'paddingright') {
                return this.wzLoadToChildColl(child, md.padding_right, this.properties);
            }
            else if (name === 'padding-left') {
                return this.wzLoadToChildColl(child, md.padding_left, this.properties);
            }
            else if (name === 'pause-before') {
                return this.wzLoadToChildColl(child, md.pause_before, this.properties);
            }
        }
        if (_l == 12 && _ch == 's') {
            if (name === 'speak-header') {
                return this.wzLoadToChildColl(child, md.speak_header, this.properties);
            }
            else if (name === 'speaknumeral') {
                return this.wzLoadToChildColl(child, md.speak_numeral, this.properties);
            }
        }
        if (_l == 12 && _ch == 't') {
            if (name === 'table-layout') {
                return this.wzLoadToChildColl(child, md.table_layout, this.properties);
            }
            else if (name === 'textoverflow') {
                return this.wzLoadToChildColl(child, md.text_overflow, this.properties);
            }
            else if (name === 'touch-action') {
                return this.wzLoadToChildColl(child, md.touch_action, this.properties);
            }
        }
        if (_l == 12 && _ch == 'u') {
            if (name === 'unicode-bidi') {
                return this.wzLoadToChildColl(child, md.unicode_bidi, this.properties);
            }
        }
        if (_l == 12 && _ch == 'v') {
            if (name === 'voice-family') {
                return this.wzLoadToChildColl(child, md.voice_family, this.properties);
            }
        }
        if (_l == 12 && _ch == 'w') {
            if (name === 'word-spacing') {
                return this.wzLoadToChildColl(child, md.word_spacing, this.properties);
            }
        }
        if (_l == 13 && _ch == 'a') {
            if (name === 'align-content') {
                return this.wzLoadToChildColl(child, md.align_content, this.properties);
            }
            else if (name === 'animationname') {
                return this.wzLoadToChildColl(child, md.animation_name, this.properties);
            }
        }
        if (_l == 13 && _ch == 'b') {
            if (name === 'borderspacing') {
                return this.wzLoadToChildColl(child, md.border_spacing, this.properties);
            }
            else if (name === 'border-bottom') {
                return this.wzLoadToChildColl(child, md.border_bottom, this.properties);
            }
            else if (name === 'border-radius') {
                return this.wzLoadToChildColl(child, md.border_radius, this.properties);
            }
        }
        if (_l == 13 && _ch == 'c') {
            if (name === 'counter-reset') {
                return this.wzLoadToChildColl(child, md.counter_reset, this.properties);
            }
        }
        if (_l == 13 && _ch == 'f') {
            if (name === 'flexdirection') {
                return this.wzLoadToChildColl(child, md.flex_direction, this.properties);
            }
        }
        if (_l == 13 && _ch == 'l') {
            if (name === 'letterspacing') {
                return this.wzLoadToChildColl(child, md.letter_spacing, this.properties);
            }
            else if (name === 'liststyletype') {
                return this.wzLoadToChildColl(child, md.list_style_type, this.properties);
            }
        }
        if (_l == 13 && _ch == 'm') {
            if (name === 'margin-bottom') {
                return this.wzLoadToChildColl(child, md.margin_bottom, this.properties);
            }
        }
        if (_l == 13 && _ch == 'o') {
            if (name === 'outline-color') {
                return this.wzLoadToChildColl(child, md.outline_color, this.properties);
            }
            else if (name === 'outline-style') {
                return this.wzLoadToChildColl(child, md.outline_style, this.properties);
            }
            else if (name === 'outline-width') {
                return this.wzLoadToChildColl(child, md.outline_width, this.properties);
            }
            else if (name === 'outlineoffset') {
                return this.wzLoadToChildColl(child, md.outline_offset, this.properties);
            }
            else if (name === 'overflow-wrap') {
                return this.wzLoadToChildColl(child, md.overflow_wrap, this.properties);
            }
        }
        if (_l == 13 && _ch == 'p') {
            if (name === 'padding-right') {
                return this.wzLoadToChildColl(child, md.padding_right, this.properties);
            }
            else if (name === 'paddingbottom') {
                return this.wzLoadToChildColl(child, md.padding_bottom, this.properties);
            }
            else if (name === 'pointerevents') {
                return this.wzLoadToChildColl(child, md.pointer_events, this.properties);
            }
        }
        if (_l == 13 && _ch == 's') {
            if (name === 'speak-numeral') {
                return this.wzLoadToChildColl(child, md.speak_numeral, this.properties);
            }
        }
        if (_l == 13 && _ch == 't') {
            if (name === 'textalignlast') {
                return this.wzLoadToChildColl(child, md.text_align_last, this.properties);
            }
            else if (name === 'text-overflow') {
                return this.wzLoadToChildColl(child, md.text_overflow, this.properties);
            }
            else if (name === 'texttransform') {
                return this.wzLoadToChildColl(child, md.text_transform, this.properties);
            }
        }
        if (_l == 13 && _ch == 'v') {
            if (name === 'verticalalign') {
                return this.wzLoadToChildColl(child, md.vertical_align, this.properties);
            }
        }
        if (_l == 14 && _ch == 'a') {
            if (name === 'animationdelay') {
                return this.wzLoadToChildColl(child, md.animation_delay, this.properties);
            }
            else if (name === 'animation-name') {
                return this.wzLoadToChildColl(child, md.animation_name, this.properties);
            }
        }
        if (_l == 14 && _ch == 'b') {
            if (name === 'backgroundclip') {
                return this.wzLoadToChildColl(child, md.background_clip, this.properties);
            }
            else if (name === 'backgroundsize') {
                return this.wzLoadToChildColl(child, md.background_size, this.properties);
            }
            else if (name === 'bordercollapse') {
                return this.wzLoadToChildColl(child, md.border_collapse, this.properties);
            }
            else if (name === 'border-spacing') {
                return this.wzLoadToChildColl(child, md.border_spacing, this.properties);
            }
            else if (name === 'bordertopcolor') {
                return this.wzLoadToChildColl(child, md.border_top_color, this.properties);
            }
            else if (name === 'bordertopstyle') {
                return this.wzLoadToChildColl(child, md.border_top_style, this.properties);
            }
            else if (name === 'bordertopwidth') {
                return this.wzLoadToChildColl(child, md.border_top_width, this.properties);
            }
        }
        if (_l == 14 && _ch == 'f') {
            if (name === 'flex-direction') {
                return this.wzLoadToChildColl(child, md.flex_direction, this.properties);
            }
        }
        if (_l == 14 && _ch == 'j') {
            if (name === 'justifycontent') {
                return this.wzLoadToChildColl(child, md.justify_content, this.properties);
            }
        }
        if (_l == 14 && _ch == 'l') {
            if (name === 'letter-spacing') {
                return this.wzLoadToChildColl(child, md.letter_spacing, this.properties);
            }
            else if (name === 'liststyleimage') {
                return this.wzLoadToChildColl(child, md.list_style_image, this.properties);
            }
        }
        if (_l == 14 && _ch == 'm') {
            if (name === 'mix-blend-mode') {
                return this.wzLoadToChildColl(child, md.mix_blend_mode, this.properties);
            }
        }
        if (_l == 14 && _ch == 'o') {
            if (name === 'outline-offset') {
                return this.wzLoadToChildColl(child, md.outline_offset, this.properties);
            }
        }
        if (_l == 14 && _ch == 'p') {
            if (name === 'padding-bottom') {
                return this.wzLoadToChildColl(child, md.padding_bottom, this.properties);
            }
            else if (name === 'pagebreakafter') {
                return this.wzLoadToChildColl(child, md.page_break_after, this.properties);
            }
            else if (name === 'pointer-events') {
                return this.wzLoadToChildColl(child, md.pointer_events, this.properties);
            }
        }
        if (_l == 14 && _ch == 't') {
            if (name === 'targetposition') {
                return this.wzLoadToChildColl(child, md.target_position, this.properties);
            }
            else if (name === 'textdecoration') {
                return this.wzLoadToChildColl(child, md.text_decoration, this.properties);
            }
            else if (name === 'text-transform') {
                return this.wzLoadToChildColl(child, md.text_transform, this.properties);
            }
            else if (name === 'transformstyle') {
                return this.wzLoadToChildColl(child, md.transform_style, this.properties);
            }
        }
        if (_l == 14 && _ch == 'v') {
            if (name === 'vertical-align') {
                return this.wzLoadToChildColl(child, md.vertical_align, this.properties);
            }
        }
        if (_l == 15 && _ch == 'a') {
            if (name === 'animation-delay') {
                return this.wzLoadToChildColl(child, md.animation_delay, this.properties);
            }
        }
        if (_l == 15 && _ch == 'b') {
            if (name === 'backgroundcolor') {
                return this.wzLoadToChildColl(child, md.background_color, this.properties);
            }
            else if (name === 'backgroundimage') {
                return this.wzLoadToChildColl(child, md.background_image, this.properties);
            }
            else if (name === 'background-clip') {
                return this.wzLoadToChildColl(child, md.background_clip, this.properties);
            }
            else if (name === 'background-size') {
                return this.wzLoadToChildColl(child, md.background_size, this.properties);
            }
            else if (name === 'border-collapse') {
                return this.wzLoadToChildColl(child, md.border_collapse, this.properties);
            }
            else if (name === 'borderleftcolor') {
                return this.wzLoadToChildColl(child, md.border_left_color, this.properties);
            }
            else if (name === 'borderleftstyle') {
                return this.wzLoadToChildColl(child, md.border_left_style, this.properties);
            }
            else if (name === 'borderleftwidth') {
                return this.wzLoadToChildColl(child, md.border_left_width, this.properties);
            }
        }
        if (_l == 15 && _ch == 'c') {
            if (name === 'columnrulecolor') {
                return this.wzLoadToChildColl(child, md.column_rule_color, this.properties);
            }
            else if (name === 'columnrulestyle') {
                return this.wzLoadToChildColl(child, md.column_rule_style, this.properties);
            }
            else if (name === 'columnrulewidth') {
                return this.wzLoadToChildColl(child, md.column_rule_width, this.properties);
            }
        }
        if (_l == 15 && _ch == 'j') {
            if (name === 'justify-content') {
                return this.wzLoadToChildColl(child, md.justify_content, this.properties);
            }
        }
        if (_l == 15 && _ch == 'l') {
            if (name === 'list-style-type') {
                return this.wzLoadToChildColl(child, md.list_style_type, this.properties);
            }
        }
        if (_l == 15 && _ch == 'p') {
            if (name === 'pagebreakbefore') {
                return this.wzLoadToChildColl(child, md.page_break_before, this.properties);
            }
            else if (name === 'pagebreakinside') {
                return this.wzLoadToChildColl(child, md.page_break_inside, this.properties);
            }
        }
        if (_l == 15 && _ch == 't') {
            if (name === 'target-position') {
                return this.wzLoadToChildColl(child, md.target_position, this.properties);
            }
            else if (name === 'text-align-last') {
                return this.wzLoadToChildColl(child, md.text_align_last, this.properties);
            }
            else if (name === 'text-decoration') {
                return this.wzLoadToChildColl(child, md.text_decoration, this.properties);
            }
            else if (name === 'transformorigin') {
                return this.wzLoadToChildColl(child, md.transform_origin, this.properties);
            }
            else if (name === 'transform-style') {
                return this.wzLoadToChildColl(child, md.transform_style, this.properties);
            }
            else if (name === 'transitiondelay') {
                return this.wzLoadToChildColl(child, md.transition_delay, this.properties);
            }
        }
        if (_l == 16 && _ch == 'b') {
            if (name === 'background-color') {
                return this.wzLoadToChildColl(child, md.background_color, this.properties);
            }
            else if (name === 'background-image') {
                return this.wzLoadToChildColl(child, md.background_image, this.properties);
            }
            else if (name === 'backgroundrepeat') {
                return this.wzLoadToChildColl(child, md.background_repeat, this.properties);
            }
            else if (name === 'backgroundorigin') {
                return this.wzLoadToChildColl(child, md.background_origin, this.properties);
            }
            else if (name === 'border-top-color') {
                return this.wzLoadToChildColl(child, md.border_top_color, this.properties);
            }
            else if (name === 'borderrightcolor') {
                return this.wzLoadToChildColl(child, md.border_right_color, this.properties);
            }
            else if (name === 'border-top-style') {
                return this.wzLoadToChildColl(child, md.border_top_style, this.properties);
            }
            else if (name === 'borderrightstyle') {
                return this.wzLoadToChildColl(child, md.border_right_style, this.properties);
            }
            else if (name === 'border-top-width') {
                return this.wzLoadToChildColl(child, md.border_top_width, this.properties);
            }
            else if (name === 'borderrightwidth') {
                return this.wzLoadToChildColl(child, md.border_right_width, this.properties);
            }
            else if (name === 'borderimageslice') {
                return this.wzLoadToChildColl(child, md.border_image_slice, this.properties);
            }
            else if (name === 'borderimagewidth') {
                return this.wzLoadToChildColl(child, md.border_image_width, this.properties);
            }
        }
        if (_l == 16 && _ch == 'c') {
            if (name === 'counterincrement') {
                return this.wzLoadToChildColl(child, md.counter_increment, this.properties);
            }
        }
        if (_l == 16 && _ch == 'l') {
            if (name === 'list-style-image') {
                return this.wzLoadToChildColl(child, md.list_style_image, this.properties);
            }
        }
        if (_l == 16 && _ch == 'p') {
            if (name === 'page-break-after') {
                return this.wzLoadToChildColl(child, md.page_break_after, this.properties);
            }
        }
        if (_l == 16 && _ch == 's') {
            if (name === 'speakpunctuation') {
                return this.wzLoadToChildColl(child, md.speak_punctuation, this.properties);
            }
        }
        if (_l == 16 && _ch == 't') {
            if (name === 'transform-origin') {
                return this.wzLoadToChildColl(child, md.transform_origin, this.properties);
            }
            else if (name === 'transition-delay') {
                return this.wzLoadToChildColl(child, md.transition_delay, this.properties);
            }
        }
        if (_l == 17 && _ch == 'a') {
            if (name === 'animationduration') {
                return this.wzLoadToChildColl(child, md.animation_duration, this.properties);
            }
            else if (name === 'animationfillmode') {
                return this.wzLoadToChildColl(child, md.animation_fill_mode, this.properties);
            }
        }
        if (_l == 17 && _ch == 'b') {
            if (name === 'background-repeat') {
                return this.wzLoadToChildColl(child, md.background_repeat, this.properties);
            }
            else if (name === 'background-origin') {
                return this.wzLoadToChildColl(child, md.background_origin, this.properties);
            }
            else if (name === 'borderbottomcolor') {
                return this.wzLoadToChildColl(child, md.border_bottom_color, this.properties);
            }
            else if (name === 'border-left-color') {
                return this.wzLoadToChildColl(child, md.border_left_color, this.properties);
            }
            else if (name === 'borderbottomstyle') {
                return this.wzLoadToChildColl(child, md.border_bottom_style, this.properties);
            }
            else if (name === 'border-left-style') {
                return this.wzLoadToChildColl(child, md.border_left_style, this.properties);
            }
            else if (name === 'borderbottomwidth') {
                return this.wzLoadToChildColl(child, md.border_bottom_width, this.properties);
            }
            else if (name === 'border-left-width') {
                return this.wzLoadToChildColl(child, md.border_left_width, this.properties);
            }
            else if (name === 'borderimageoutset') {
                return this.wzLoadToChildColl(child, md.border_image_outset, this.properties);
            }
            else if (name === 'borderimagerepeat') {
                return this.wzLoadToChildColl(child, md.border_image_repeat, this.properties);
            }
            else if (name === 'borderimagesource') {
                return this.wzLoadToChildColl(child, md.border_image_source, this.properties);
            }
        }
        if (_l == 17 && _ch == 'c') {
            if (name === 'column-rule-color') {
                return this.wzLoadToChildColl(child, md.column_rule_color, this.properties);
            }
            else if (name === 'column-rule-style') {
                return this.wzLoadToChildColl(child, md.column_rule_style, this.properties);
            }
            else if (name === 'column-rule-width') {
                return this.wzLoadToChildColl(child, md.column_rule_width, this.properties);
            }
            else if (name === 'counter-increment') {
                return this.wzLoadToChildColl(child, md.counter_increment, this.properties);
            }
        }
        if (_l == 17 && _ch == 'l') {
            if (name === 'liststyleposition') {
                return this.wzLoadToChildColl(child, md.list_style_position, this.properties);
            }
        }
        if (_l == 17 && _ch == 'p') {
            if (name === 'page-break-before') {
                return this.wzLoadToChildColl(child, md.page_break_before, this.properties);
            }
            else if (name === 'page-break-inside') {
                return this.wzLoadToChildColl(child, md.page_break_inside, this.properties);
            }
            else if (name === 'perspectiveorigin') {
                return this.wzLoadToChildColl(child, md.perspective_origin, this.properties);
            }
        }
        if (_l == 17 && _ch == 's') {
            if (name === 'speak-punctuation') {
                return this.wzLoadToChildColl(child, md.speak_punctuation, this.properties);
            }
        }
        if (_l == 18 && _ch == 'a') {
            if (name === 'animationdirection') {
                return this.wzLoadToChildColl(child, md.animation_direction, this.properties);
            }
            else if (name === 'animation-duration') {
                return this.wzLoadToChildColl(child, md.animation_duration, this.properties);
            }
            else if (name === 'animationplaystate') {
                return this.wzLoadToChildColl(child, md.animation_play_state, this.properties);
            }
        }
        if (_l == 18 && _ch == 'b') {
            if (name === 'backgroundposition') {
                return this.wzLoadToChildColl(child, md.background_position, this.properties);
            }
            else if (name === 'backfacevisibility') {
                return this.wzLoadToChildColl(child, md.backface_visibility, this.properties);
            }
            else if (name === 'border-right-color') {
                return this.wzLoadToChildColl(child, md.border_right_color, this.properties);
            }
            else if (name === 'border-right-style') {
                return this.wzLoadToChildColl(child, md.border_right_style, this.properties);
            }
            else if (name === 'border-right-width') {
                return this.wzLoadToChildColl(child, md.border_right_width, this.properties);
            }
            else if (name === 'border-image-slice') {
                return this.wzLoadToChildColl(child, md.border_image_slice, this.properties);
            }
            else if (name === 'border-image-width') {
                return this.wzLoadToChildColl(child, md.border_image_width, this.properties);
            }
            else if (name === 'boxdecorationbreak') {
                return this.wzLoadToChildColl(child, md.box_decoration_break, this.properties);
            }
        }
        if (_l == 18 && _ch == 'h') {
            if (name === 'hangingpunctuation') {
                return this.wzLoadToChildColl(child, md.hanging_punctuation, this.properties);
            }
        }
        if (_l == 18 && _ch == 'p') {
            if (name === 'perspective-origin') {
                return this.wzLoadToChildColl(child, md.perspective_origin, this.properties);
            }
        }
        if (_l == 18 && _ch == 't') {
            if (name === 'textdecorationline') {
                return this.wzLoadToChildColl(child, md.text_decoration_line, this.properties);
            }
            else if (name === 'textdecorationskip') {
                return this.wzLoadToChildColl(child, md.text_decoration_skip, this.properties);
            }
            else if (name === 'transitionduration') {
                return this.wzLoadToChildColl(child, md.transition_duration, this.properties);
            }
            else if (name === 'transitionproperty') {
                return this.wzLoadToChildColl(child, md.transition_property, this.properties);
            }
        }
        if (_l == 19 && _ch == 'a') {
            if (name === 'animation-direction') {
                return this.wzLoadToChildColl(child, md.animation_direction, this.properties);
            }
            else if (name === 'animation-fill-mode') {
                return this.wzLoadToChildColl(child, md.animation_fill_mode, this.properties);
            }
        }
        if (_l == 19 && _ch == 'b') {
            if (name === 'background-position') {
                return this.wzLoadToChildColl(child, md.background_position, this.properties);
            }
            else if (name === 'backgroundblendmode') {
                return this.wzLoadToChildColl(child, md.background_blend_mode, this.properties);
            }
            else if (name === 'backface-visibility') {
                return this.wzLoadToChildColl(child, md.backface_visibility, this.properties);
            }
            else if (name === 'border-bottom-color') {
                return this.wzLoadToChildColl(child, md.border_bottom_color, this.properties);
            }
            else if (name === 'border-bottom-style') {
                return this.wzLoadToChildColl(child, md.border_bottom_style, this.properties);
            }
            else if (name === 'border-bottom-width') {
                return this.wzLoadToChildColl(child, md.border_bottom_width, this.properties);
            }
            else if (name === 'bordertopleftradius') {
                return this.wzLoadToChildColl(child, md.border_top_left_radius, this.properties);
            }
            else if (name === 'border-image-outset') {
                return this.wzLoadToChildColl(child, md.border_image_outset, this.properties);
            }
            else if (name === 'border-image-repeat') {
                return this.wzLoadToChildColl(child, md.border_image_repeat, this.properties);
            }
            else if (name === 'border-image-source') {
                return this.wzLoadToChildColl(child, md.border_image_source, this.properties);
            }
        }
        if (_l == 19 && _ch == 'h') {
            if (name === 'hanging-punctuation') {
                return this.wzLoadToChildColl(child, md.hanging_punctuation, this.properties);
            }
        }
        if (_l == 19 && _ch == 'l') {
            if (name === 'list-style-position') {
                return this.wzLoadToChildColl(child, md.list_style_position, this.properties);
            }
        }
        if (_l == 19 && _ch == 't') {
            if (name === 'textdecorationstyle') {
                return this.wzLoadToChildColl(child, md.text_decoration_style, this.properties);
            }
            else if (name === 'textdecorationcolor') {
                return this.wzLoadToChildColl(child, md.text_decoration_color, this.properties);
            }
            else if (name === 'transition-duration') {
                return this.wzLoadToChildColl(child, md.transition_duration, this.properties);
            }
            else if (name === 'transition-property') {
                return this.wzLoadToChildColl(child, md.transition_property, this.properties);
            }
        }
        if (_l == 20 && _ch == 'a') {
            if (name === 'animation-play-state') {
                return this.wzLoadToChildColl(child, md.animation_play_state, this.properties);
            }
        }
        if (_l == 20 && _ch == 'b') {
            if (name === 'backgroundattachment') {
                return this.wzLoadToChildColl(child, md.background_attachment, this.properties);
            }
            else if (name === 'bordertoprightradius') {
                return this.wzLoadToChildColl(child, md.border_top_right_radius, this.properties);
            }
            else if (name === 'box-decoration-break') {
                return this.wzLoadToChildColl(child, md.box_decoration_break, this.properties);
            }
        }
        if (_l == 20 && _ch == 't') {
            if (name === 'text-decoration-line') {
                return this.wzLoadToChildColl(child, md.text_decoration_line, this.properties);
            }
            else if (name === 'text-decoration-skip') {
                return this.wzLoadToChildColl(child, md.text_decoration_skip, this.properties);
            }
        }
        if (_l == 21 && _ch == 'b') {
            if (name === 'background-attachment') {
                return this.wzLoadToChildColl(child, md.background_attachment, this.properties);
            }
            else if (name === 'background-blend-mode') {
                return this.wzLoadToChildColl(child, md.background_blend_mode, this.properties);
            }
        }
        if (_l == 21 && _ch == 't') {
            if (name === 'text-decoration-style') {
                return this.wzLoadToChildColl(child, md.text_decoration_style, this.properties);
            }
            else if (name === 'text-decoration-color') {
                return this.wzLoadToChildColl(child, md.text_decoration_color, this.properties);
            }
            else if (name === 'textunderlineposition') {
                return this.wzLoadToChildColl(child, md.text_underline_position, this.properties);
            }
        }
        if (_l == 22 && _ch == 'b') {
            if (name === 'border-top-left-radius') {
                return this.wzLoadToChildColl(child, md.border_top_left_radius, this.properties);
            }
            else if (name === 'borderbottomleftradius') {
                return this.wzLoadToChildColl(child, md.border_bottom_left_radius, this.properties);
            }
        }
        if (_l == 23 && _ch == 'a') {
            if (name === 'animationiterationcount') {
                return this.wzLoadToChildColl(child, md.animation_iteration_count, this.properties);
            }
            else if (name === 'animationtimingfunction') {
                return this.wzLoadToChildColl(child, md.animation_timing_function, this.properties);
            }
        }
        if (_l == 23 && _ch == 'b') {
            if (name === 'border-top-right-radius') {
                return this.wzLoadToChildColl(child, md.border_top_right_radius, this.properties);
            }
            else if (name === 'borderbottomrightradius') {
                return this.wzLoadToChildColl(child, md.border_bottom_right_radius, this.properties);
            }
        }
        if (_l == 23 && _ch == 't') {
            if (name === 'text-underline-position') {
                return this.wzLoadToChildColl(child, md.text_underline_position, this.properties);
            }
        }
        if (_l == 24 && _ch == 't') {
            if (name === 'transitiontimingfunction') {
                return this.wzLoadToChildColl(child, md.transition_timing_function, this.properties);
            }
        }
        if (_l == 25 && _ch == 'a') {
            if (name === 'animation-iteration-count') {
                return this.wzLoadToChildColl(child, md.animation_iteration_count, this.properties);
            }
            else if (name === 'animation-timing-function') {
                return this.wzLoadToChildColl(child, md.animation_timing_function, this.properties);
            }
        }
        if (_l == 25 && _ch == 'b') {
            if (name === 'border-bottom-left-radius') {
                return this.wzLoadToChildColl(child, md.border_bottom_left_radius, this.properties);
            }
        }
        if (_l == 26 && _ch == 'b') {
            if (name === 'border-bottom-right-radius') {
                return this.wzLoadToChildColl(child, md.border_bottom_right_radius, this.properties);
            }
        }
        if (_l == 26 && _ch == 't') {
            if (name === 'transition-timing-function') {
                return this.wzLoadToChildColl(child, md.transition_timing_function, this.properties);
            }
        }
        if (name.substr(0, 8) == "-webkit-") {
            this[name] = child.v;
            return true;
        }
        if (name.substr(0, 4) == "-ms-") {
            this[name] = child.v;
            return true;
        }
        if (name.substr(0, 3) == "-o-") {
            this[name] = child.v;
            return true;
        }
        if (name.substr(0, 5) == "-moz-") {
            this[name] = child.v;
            return true;
        }
        return ok;
    }
    rule.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    rule.prototype.wzVerify = function(ctx) {
        var i, i_len=this.otherRuleSelectors.length, item;
        for (i=0; i<i_len; i++) {
            item = this.otherRuleSelectors[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.rules.length, item;
        for (i=0; i<i_len; i++) {
            item = this.rules[i];
            item.wzVerify(ctx);
        }
        md.cssBase.prototype.wzVerify.call(this, ctx);
    }
    rule.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.otherRuleSelectors.length, item;
        for (i=0; i<i_len; i++) {
            item = this.otherRuleSelectors[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.rules.length, item;
        for (i=0; i<i_len; i++) {
            item = this.rules[i];
            item.wzInitialize(ctx);
        }
        this.ruleParts = this.getAscendingRuleParts();
        md.cssBase.prototype.wzInitialize.call(this, ctx);
    }
    rule.prototype.getAscendingRuleParts = function() {
        if (typeof this.wzName === 'string' && this.wzName.length > 0) {
            var ruleParts = this.wzName.trim().split(',');
            var i, i_len=this.otherRuleSelectors.length, ors;
            for (i=0; i<i_len; i++) {
                ors = this.otherRuleSelectors[i];
                ruleParts.push(ors.wzName);
            }
            if (ruleParts.length > 0) {
                if (this.wzElement === 'idRule') {
                    ruleParts[0] = '#' + ruleParts[0];
                }
                else if (this.wzElement === 'classRule') {
                    ruleParts[0] = '.' + ruleParts[0];
                }
            }
            if (this.wzParent && this.wzParent.getAscendingRuleParts) {
                var parentRuleParts = this.wzParent.getAscendingRuleParts();
                var ret = [];
                var i, i_len=parentRuleParts.length, prp;
                for (i=0; i<i_len; i++) {
                    prp = parentRuleParts[i];
                    var j, j_len=ruleParts.length, rp;
                    for (j=0; j<j_len; j++) {
                        rp = ruleParts[j];
                        ret.push(prp + ' ' + rp);
                    }
                }
                return ret;
            }
            else {
                return ruleParts;
            }
        }
        else {
            return [];
        }
    }
    return rule;
})(cssBase);


md.rule = rule;
/**
    element elementRule
     The element rule
     The wzName contain the selector(s)
*/
var elementRule = (function (rule) {
    _inherits(elementRule, rule);
    function elementRule(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(elementRule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, elementRule);
        this.wzElement = "elementRule";
    }
    return elementRule;
})(rule);


md.elementRule = elementRule;
/**
    element classRule
     The class rule
     The wzName contain the selector(s)
*/
var classRule = (function (rule) {
    _inherits(classRule, rule);
    function classRule(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(classRule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, classRule);
        this.wzElement = "classRule";
    }
    return classRule;
})(rule);


md.classRule = classRule;
/**
    element idRule
     The id rule
     The wzName contain the selector(s)
*/
var idRule = (function (rule) {
    _inherits(idRule, rule);
    function idRule(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(idRule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, idRule);
        this.wzElement = "idRule";
    }
    return idRule;
})(rule);


md.idRule = idRule;
/**
    element otherRuleSelector
     The wzName contains other selector(s) to add to those of the parent rule
     In case of a rule with many selectors allow the declaration on many nodes
     Example
     < td
     + span
     + li
     + ...
     for: td, span, li, ...
*/
var otherRuleSelector = (function (cssBase) {
    _inherits(otherRuleSelector, cssBase);
    function otherRuleSelector(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(otherRuleSelector.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, otherRuleSelector);
        this.wzElement = "otherRuleSelector";
    }
    return otherRuleSelector;
})(cssBase);


md.otherRuleSelector = otherRuleSelector;
/**
    element property
     A generic rule property.
     You should find a proper schema element that extends this one for every valid css3 property.
     In any case this element is not abstract and can be used for eventual missing properties.
     In this case must contain a name-value pair separated by a blank: name is
     the property name and value is the property value.
*/
var property = (function (cssBase) {
    _inherits(property, cssBase);
    function property(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(property.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, property);
        this.wzElement = "property";
        // relation property
        // Nested property
        this.properties = [];
    }
    property.prototype.addProperty = function(name,sourceLineInfo) {
        var retval = new md.property(name, sourceLineInfo);
        retval.wzParent = this;
        this.properties.push(retval);
        return retval;
    }
    property.prototype.getProperty = function(name) {
        var found = null;
        this.properties.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    property.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, md.property, this.properties);
            }
        }
        if (_l == 3 && _ch == 'c') {
            if (name === 'cue') {
                return this.wzLoadToChildColl(child, md.cue, this.properties);
            }
        }
        if (_l == 3 && _ch == 't') {
            if (name === 'top') {
                return this.wzLoadToChildColl(child, md.top, this.properties);
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'clip') {
                return this.wzLoadToChildColl(child, md.clip, this.properties);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'flex') {
                return this.wzLoadToChildColl(child, md.flex, this.properties);
            }
            else if (name === 'font') {
                return this.wzLoadToChildColl(child, md.font, this.properties);
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'left') {
                return this.wzLoadToChildColl(child, md.left, this.properties);
            }
        }
        if (_l == 4 && _ch == 'z') {
            if (name === 'zoom') {
                return this.wzLoadToChildColl(child, md.zoom, this.properties);
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'clear') {
                return this.wzLoadToChildColl(child, md.clear, this.properties);
            }
            else if (name === 'color') {
                return this.wzLoadToChildColl(child, md.color, this.properties);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, md.xfloat, this.properties);
            }
        }
        if (_l == 5 && _ch == 'n') {
            if (name === 'navup') {
                return this.wzLoadToChildColl(child, md.nav_up, this.properties);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'order') {
                return this.wzLoadToChildColl(child, md.order, this.properties);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'pause') {
                return this.wzLoadToChildColl(child, md.pause, this.properties);
            }
            else if (name === 'pitch') {
                return this.wzLoadToChildColl(child, md.pitch, this.properties);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'right') {
                return this.wzLoadToChildColl(child, md.right, this.properties);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'speak') {
                return this.wzLoadToChildColl(child, md.speak, this.properties);
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'width') {
                return this.wzLoadToChildColl(child, md.width, this.properties);
            }
        }
        if (_l == 6 && _ch == 'b') {
            if (name === 'border') {
                return this.wzLoadToChildColl(child, md.border, this.properties);
            }
            else if (name === 'bottom') {
                return this.wzLoadToChildColl(child, md.bottom, this.properties);
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'cursor') {
                return this.wzLoadToChildColl(child, md.cursor, this.properties);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'filter') {
                return this.wzLoadToChildColl(child, md.filter, this.properties);
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'height') {
                return this.wzLoadToChildColl(child, md.height, this.properties);
            }
        }
        if (_l == 6 && _ch == 'm') {
            if (name === 'margin') {
                return this.wzLoadToChildColl(child, md.margin, this.properties);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'nav-up') {
                return this.wzLoadToChildColl(child, md.nav_up, this.properties);
            }
        }
        if (_l == 6 && _ch == 'q') {
            if (name === 'quotes') {
                return this.wzLoadToChildColl(child, md.quotes, this.properties);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'resize') {
                return this.wzLoadToChildColl(child, md.resize, this.properties);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'stress') {
                return this.wzLoadToChildColl(child, md.stress, this.properties);
            }
        }
        if (_l == 6 && _ch == 'v') {
            if (name === 'volume') {
                return this.wzLoadToChildColl(child, md.volume, this.properties);
            }
        }
        if (_l == 6 && _ch == 'w') {
            if (name === 'widows') {
                return this.wzLoadToChildColl(child, md.widows, this.properties);
            }
        }
        if (_l == 6 && _ch == 'z') {
            if (name === 'zindex') {
                return this.wzLoadToChildColl(child, md.z_index, this.properties);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'azimuth') {
                return this.wzLoadToChildColl(child, md.azimuth, this.properties);
            }
        }
        if (_l == 7 && _ch == 'c') {
            if (name === 'columns') {
                return this.wzLoadToChildColl(child, md.columns, this.properties);
            }
            else if (name === 'content') {
                return this.wzLoadToChildColl(child, md.content, this.properties);
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'display') {
                return this.wzLoadToChildColl(child, md.display, this.properties);
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'hyphens') {
                return this.wzLoadToChildColl(child, md.hyphens, this.properties);
            }
        }
        if (_l == 7 && _ch == 'n') {
            if (name === 'navdown') {
                return this.wzLoadToChildColl(child, md.nav_down, this.properties);
            }
            else if (name === 'navleft') {
                return this.wzLoadToChildColl(child, md.nav_left, this.properties);
            }
        }
        if (_l == 7 && _ch == 'o') {
            if (name === 'opacity') {
                return this.wzLoadToChildColl(child, md.opacity, this.properties);
            }
            else if (name === 'orphans') {
                return this.wzLoadToChildColl(child, md.orphans, this.properties);
            }
            else if (name === 'outline') {
                return this.wzLoadToChildColl(child, md.outline, this.properties);
            }
        }
        if (_l == 7 && _ch == 'p') {
            if (name === 'padding') {
                return this.wzLoadToChildColl(child, md.padding, this.properties);
            }
        }
        if (_l == 7 && _ch == 't') {
            if (name === 'tabsize') {
                return this.wzLoadToChildColl(child, md.tab_size, this.properties);
            }
        }
        if (_l == 7 && _ch == 'z') {
            if (name === 'z-index') {
                return this.wzLoadToChildColl(child, md.z_index, this.properties);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'cueafter') {
                return this.wzLoadToChildColl(child, md.cue_after, this.properties);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'flexflow') {
                return this.wzLoadToChildColl(child, md.flex_flow, this.properties);
            }
            else if (name === 'flexgrow') {
                return this.wzLoadToChildColl(child, md.flex_grow, this.properties);
            }
            else if (name === 'flexwrap') {
                return this.wzLoadToChildColl(child, md.flex_wrap, this.properties);
            }
            else if (name === 'fontsize') {
                return this.wzLoadToChildColl(child, md.font_size, this.properties);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'maxwidth') {
                return this.wzLoadToChildColl(child, md.max_width, this.properties);
            }
            else if (name === 'minwidth') {
                return this.wzLoadToChildColl(child, md.min_width, this.properties);
            }
        }
        if (_l == 8 && _ch == 'n') {
            if (name === 'nav-down') {
                return this.wzLoadToChildColl(child, md.nav_down, this.properties);
            }
            else if (name === 'nav-left') {
                return this.wzLoadToChildColl(child, md.nav_left, this.properties);
            }
            else if (name === 'navright') {
                return this.wzLoadToChildColl(child, md.nav_right, this.properties);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'overflow') {
                return this.wzLoadToChildColl(child, md.overflow, this.properties);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'position') {
                return this.wzLoadToChildColl(child, md.position, this.properties);
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'richness') {
                return this.wzLoadToChildColl(child, md.richness, this.properties);
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'tab-size') {
                return this.wzLoadToChildColl(child, md.tab_size, this.properties);
            }
        }
        if (_l == 8 && _ch == 'w') {
            if (name === 'wordwrap') {
                return this.wzLoadToChildColl(child, md.word_wrap, this.properties);
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'alignself') {
                return this.wzLoadToChildColl(child, md.align_self, this.properties);
            }
            else if (name === 'animation') {
                return this.wzLoadToChildColl(child, md.animation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'b') {
            if (name === 'bordertop') {
                return this.wzLoadToChildColl(child, md.border_top, this.properties);
            }
            else if (name === 'boxsizing') {
                return this.wzLoadToChildColl(child, md.box_sizing, this.properties);
            }
            else if (name === 'boxshadow') {
                return this.wzLoadToChildColl(child, md.box_shadow, this.properties);
            }
        }
        if (_l == 9 && _ch == 'c') {
            if (name === 'columngap') {
                return this.wzLoadToChildColl(child, md.column_gap, this.properties);
            }
            else if (name === 'cue-after') {
                return this.wzLoadToChildColl(child, md.cue_after, this.properties);
            }
            else if (name === 'cuebefore') {
                return this.wzLoadToChildColl(child, md.cue_before, this.properties);
            }
        }
        if (_l == 9 && _ch == 'd') {
            if (name === 'direction') {
                return this.wzLoadToChildColl(child, md.direction, this.properties);
            }
        }
        if (_l == 9 && _ch == 'e') {
            if (name === 'elevation') {
                return this.wzLoadToChildColl(child, md.elevation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'f') {
            if (name === 'flexbasis') {
                return this.wzLoadToChildColl(child, md.flex_basis, this.properties);
            }
            else if (name === 'flex-flow') {
                return this.wzLoadToChildColl(child, md.flex_flow, this.properties);
            }
            else if (name === 'flex-grow') {
                return this.wzLoadToChildColl(child, md.flex_grow, this.properties);
            }
            else if (name === 'flex-wrap') {
                return this.wzLoadToChildColl(child, md.flex_wrap, this.properties);
            }
            else if (name === 'font-size') {
                return this.wzLoadToChildColl(child, md.font_size, this.properties);
            }
            else if (name === 'fontstyle') {
                return this.wzLoadToChildColl(child, md.font_style, this.properties);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'isolation') {
                return this.wzLoadToChildColl(child, md.isolation, this.properties);
            }
        }
        if (_l == 9 && _ch == 'l') {
            if (name === 'linebreak') {
                return this.wzLoadToChildColl(child, md.line_break, this.properties);
            }
            else if (name === 'liststyle') {
                return this.wzLoadToChildColl(child, md.list_style, this.properties);
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'margintop') {
                return this.wzLoadToChildColl(child, md.margin_top, this.properties);
            }
            else if (name === 'maxheight') {
                return this.wzLoadToChildColl(child, md.max_height, this.properties);
            }
            else if (name === 'max-width') {
                return this.wzLoadToChildColl(child, md.max_width, this.properties);
            }
            else if (name === 'minheight') {
                return this.wzLoadToChildColl(child, md.min_height, this.properties);
            }
            else if (name === 'min-width') {
                return this.wzLoadToChildColl(child, md.min_width, this.properties);
            }
        }
        if (_l == 9 && _ch == 'n') {
            if (name === 'nav-right') {
                return this.wzLoadToChildColl(child, md.nav_right, this.properties);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'overflowx') {
                return this.wzLoadToChildColl(child, md.overflow_x, this.properties);
            }
            else if (name === 'overflowy') {
                return this.wzLoadToChildColl(child, md.overflow_y, this.properties);
            }
        }
        if (_l == 9 && _ch == 't') {
            if (name === 'targetnew') {
                return this.wzLoadToChildColl(child, md.target_new, this.properties);
            }
            else if (name === 'textalign') {
                return this.wzLoadToChildColl(child, md.text_align, this.properties);
            }
            else if (name === 'transform') {
                return this.wzLoadToChildColl(child, md.transform, this.properties);
            }
        }
        if (_l == 9 && _ch == 'w') {
            if (name === 'wordbreak') {
                return this.wzLoadToChildColl(child, md.word_break, this.properties);
            }
            else if (name === 'word-wrap') {
                return this.wzLoadToChildColl(child, md.word_wrap, this.properties);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'alignitems') {
                return this.wzLoadToChildColl(child, md.align_items, this.properties);
            }
            else if (name === 'align-self') {
                return this.wzLoadToChildColl(child, md.align_self, this.properties);
            }
            else if (name === 'appearance') {
                return this.wzLoadToChildColl(child, md.appearance, this.properties);
            }
        }
        if (_l == 10 && _ch == 'b') {
            if (name === 'background') {
                return this.wzLoadToChildColl(child, md.background, this.properties);
            }
            else if (name === 'border-top') {
                return this.wzLoadToChildColl(child, md.border_top, this.properties);
            }
            else if (name === 'borderleft') {
                return this.wzLoadToChildColl(child, md.border_left, this.properties);
            }
            else if (name === 'box-sizing') {
                return this.wzLoadToChildColl(child, md.box_sizing, this.properties);
            }
            else if (name === 'box-shadow') {
                return this.wzLoadToChildColl(child, md.box_shadow, this.properties);
            }
            else if (name === 'breakafter') {
                return this.wzLoadToChildColl(child, md.break_after, this.properties);
            }
        }
        if (_l == 10 && _ch == 'c') {
            if (name === 'columnfill') {
                return this.wzLoadToChildColl(child, md.column_fill, this.properties);
            }
            else if (name === 'column-gap') {
                return this.wzLoadToChildColl(child, md.column_gap, this.properties);
            }
            else if (name === 'columnrule') {
                return this.wzLoadToChildColl(child, md.column_rule, this.properties);
            }
            else if (name === 'columnspan') {
                return this.wzLoadToChildColl(child, md.column_span, this.properties);
            }
            else if (name === 'cue-before') {
                return this.wzLoadToChildColl(child, md.cue_before, this.properties);
            }
        }
        if (_l == 10 && _ch == 'e') {
            if (name === 'emptycells') {
                return this.wzLoadToChildColl(child, md.empty_cells, this.properties);
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'flex-basis') {
                return this.wzLoadToChildColl(child, md.flex_basis, this.properties);
            }
            else if (name === 'flexshrink') {
                return this.wzLoadToChildColl(child, md.flex_shrink, this.properties);
            }
            else if (name === 'fontfamily') {
                return this.wzLoadToChildColl(child, md.font_family, this.properties);
            }
            else if (name === 'font-style') {
                return this.wzLoadToChildColl(child, md.font_style, this.properties);
            }
            else if (name === 'fontweight') {
                return this.wzLoadToChildColl(child, md.font_weight, this.properties);
            }
        }
        if (_l == 10 && _ch == 'l') {
            if (name === 'line-break') {
                return this.wzLoadToChildColl(child, md.line_break, this.properties);
            }
            else if (name === 'lineheight') {
                return this.wzLoadToChildColl(child, md.line_height, this.properties);
            }
            else if (name === 'list-style') {
                return this.wzLoadToChildColl(child, md.list_style, this.properties);
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'margin-top') {
                return this.wzLoadToChildColl(child, md.margin_top, this.properties);
            }
            else if (name === 'marginleft') {
                return this.wzLoadToChildColl(child, md.margin_left, this.properties);
            }
            else if (name === 'max-height') {
                return this.wzLoadToChildColl(child, md.max_height, this.properties);
            }
            else if (name === 'min-height') {
                return this.wzLoadToChildColl(child, md.min_height, this.properties);
            }
        }
        if (_l == 10 && _ch == 'o') {
            if (name === 'overflow-x') {
                return this.wzLoadToChildColl(child, md.overflow_x, this.properties);
            }
            else if (name === 'overflow-y') {
                return this.wzLoadToChildColl(child, md.overflow_y, this.properties);
            }
        }
        if (_l == 10 && _ch == 'p') {
            if (name === 'paddingtop') {
                return this.wzLoadToChildColl(child, md.padding_top, this.properties);
            }
            else if (name === 'pauseafter') {
                return this.wzLoadToChildColl(child, md.pause_after, this.properties);
            }
            else if (name === 'pitchrange') {
                return this.wzLoadToChildColl(child, md.pitch_range, this.properties);
            }
            else if (name === 'playduring') {
                return this.wzLoadToChildColl(child, md.play_during, this.properties);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'speechrate') {
                return this.wzLoadToChildColl(child, md.speech_rate, this.properties);
            }
        }
        if (_l == 10 && _ch == 't') {
            if (name === 'targetname') {
                return this.wzLoadToChildColl(child, md.target_name, this.properties);
            }
            else if (name === 'target-new') {
                return this.wzLoadToChildColl(child, md.target_new, this.properties);
            }
            else if (name === 'text-align') {
                return this.wzLoadToChildColl(child, md.text_align, this.properties);
            }
            else if (name === 'textindent') {
                return this.wzLoadToChildColl(child, md.text_indent, this.properties);
            }
            else if (name === 'textshadow') {
                return this.wzLoadToChildColl(child, md.text_shadow, this.properties);
            }
            else if (name === 'transition') {
                return this.wzLoadToChildColl(child, md.transition, this.properties);
            }
        }
        if (_l == 10 && _ch == 'u') {
            if (name === 'userselect') {
                return this.wzLoadToChildColl(child, md.user_select, this.properties);
            }
        }
        if (_l == 10 && _ch == 'v') {
            if (name === 'visibility') {
                return this.wzLoadToChildColl(child, md.visibility, this.properties);
            }
        }
        if (_l == 10 && _ch == 'w') {
            if (name === 'whitespace') {
                return this.wzLoadToChildColl(child, md.white_space, this.properties);
            }
            else if (name === 'word-break') {
                return this.wzLoadToChildColl(child, md.word_break, this.properties);
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'align-items') {
                return this.wzLoadToChildColl(child, md.align_items, this.properties);
            }
        }
        if (_l == 11 && _ch == 'b') {
            if (name === 'bordercolor') {
                return this.wzLoadToChildColl(child, md.border_color, this.properties);
            }
            else if (name === 'borderstyle') {
                return this.wzLoadToChildColl(child, md.border_style, this.properties);
            }
            else if (name === 'borderright') {
                return this.wzLoadToChildColl(child, md.border_right, this.properties);
            }
            else if (name === 'border-left') {
                return this.wzLoadToChildColl(child, md.border_left, this.properties);
            }
            else if (name === 'borderwidth') {
                return this.wzLoadToChildColl(child, md.border_width, this.properties);
            }
            else if (name === 'borderimage') {
                return this.wzLoadToChildColl(child, md.border_image, this.properties);
            }
            else if (name === 'break-after') {
                return this.wzLoadToChildColl(child, md.break_after, this.properties);
            }
            else if (name === 'breakbefore') {
                return this.wzLoadToChildColl(child, md.break_before, this.properties);
            }
            else if (name === 'breakinside') {
                return this.wzLoadToChildColl(child, md.break_inside, this.properties);
            }
        }
        if (_l == 11 && _ch == 'c') {
            if (name === 'captionside') {
                return this.wzLoadToChildColl(child, md.caption_side, this.properties);
            }
            else if (name === 'columncount') {
                return this.wzLoadToChildColl(child, md.column_count, this.properties);
            }
            else if (name === 'column-fill') {
                return this.wzLoadToChildColl(child, md.column_fill, this.properties);
            }
            else if (name === 'column-rule') {
                return this.wzLoadToChildColl(child, md.column_rule, this.properties);
            }
            else if (name === 'column-span') {
                return this.wzLoadToChildColl(child, md.column_span, this.properties);
            }
            else if (name === 'columnwidth') {
                return this.wzLoadToChildColl(child, md.column_width, this.properties);
            }
        }
        if (_l == 11 && _ch == 'e') {
            if (name === 'empty-cells') {
                return this.wzLoadToChildColl(child, md.empty_cells, this.properties);
            }
        }
        if (_l == 11 && _ch == 'f') {
            if (name === 'flex-shrink') {
                return this.wzLoadToChildColl(child, md.flex_shrink, this.properties);
            }
            else if (name === 'font-family') {
                return this.wzLoadToChildColl(child, md.font_family, this.properties);
            }
            else if (name === 'fontvariant') {
                return this.wzLoadToChildColl(child, md.font_variant, this.properties);
            }
            else if (name === 'font-weight') {
                return this.wzLoadToChildColl(child, md.font_weight, this.properties);
            }
        }
        if (_l == 11 && _ch == 'l') {
            if (name === 'line-height') {
                return this.wzLoadToChildColl(child, md.line_height, this.properties);
            }
        }
        if (_l == 11 && _ch == 'm') {
            if (name === 'marginright') {
                return this.wzLoadToChildColl(child, md.margin_right, this.properties);
            }
            else if (name === 'margin-left') {
                return this.wzLoadToChildColl(child, md.margin_left, this.properties);
            }
        }
        if (_l == 11 && _ch == 'p') {
            if (name === 'padding-top') {
                return this.wzLoadToChildColl(child, md.padding_top, this.properties);
            }
            else if (name === 'paddingleft') {
                return this.wzLoadToChildColl(child, md.padding_left, this.properties);
            }
            else if (name === 'pause-after') {
                return this.wzLoadToChildColl(child, md.pause_after, this.properties);
            }
            else if (name === 'pausebefore') {
                return this.wzLoadToChildColl(child, md.pause_before, this.properties);
            }
            else if (name === 'perspective') {
                return this.wzLoadToChildColl(child, md.perspective, this.properties);
            }
            else if (name === 'pitch-range') {
                return this.wzLoadToChildColl(child, md.pitch_range, this.properties);
            }
            else if (name === 'play-during') {
                return this.wzLoadToChildColl(child, md.play_during, this.properties);
            }
        }
        if (_l == 11 && _ch == 's') {
            if (name === 'speakheader') {
                return this.wzLoadToChildColl(child, md.speak_header, this.properties);
            }
            else if (name === 'speech-rate') {
                return this.wzLoadToChildColl(child, md.speech_rate, this.properties);
            }
        }
        if (_l == 11 && _ch == 't') {
            if (name === 'tablelayout') {
                return this.wzLoadToChildColl(child, md.table_layout, this.properties);
            }
            else if (name === 'target-name') {
                return this.wzLoadToChildColl(child, md.target_name, this.properties);
            }
            else if (name === 'text-indent') {
                return this.wzLoadToChildColl(child, md.text_indent, this.properties);
            }
            else if (name === 'text-shadow') {
                return this.wzLoadToChildColl(child, md.text_shadow, this.properties);
            }
            else if (name === 'touchaction') {
                return this.wzLoadToChildColl(child, md.touch_action, this.properties);
            }
        }
        if (_l == 11 && _ch == 'u') {
            if (name === 'unicodebidi') {
                return this.wzLoadToChildColl(child, md.unicode_bidi, this.properties);
            }
            else if (name === 'user-select') {
                return this.wzLoadToChildColl(child, md.user_select, this.properties);
            }
        }
        if (_l == 11 && _ch == 'v') {
            if (name === 'voicefamily') {
                return this.wzLoadToChildColl(child, md.voice_family, this.properties);
            }
        }
        if (_l == 11 && _ch == 'w') {
            if (name === 'white-space') {
                return this.wzLoadToChildColl(child, md.white_space, this.properties);
            }
            else if (name === 'wordspacing') {
                return this.wzLoadToChildColl(child, md.word_spacing, this.properties);
            }
        }
        if (_l == 12 && _ch == 'a') {
            if (name === 'aligncontent') {
                return this.wzLoadToChildColl(child, md.align_content, this.properties);
            }
        }
        if (_l == 12 && _ch == 'b') {
            if (name === 'border-color') {
                return this.wzLoadToChildColl(child, md.border_color, this.properties);
            }
            else if (name === 'border-style') {
                return this.wzLoadToChildColl(child, md.border_style, this.properties);
            }
            else if (name === 'border-right') {
                return this.wzLoadToChildColl(child, md.border_right, this.properties);
            }
            else if (name === 'borderbottom') {
                return this.wzLoadToChildColl(child, md.border_bottom, this.properties);
            }
            else if (name === 'border-width') {
                return this.wzLoadToChildColl(child, md.border_width, this.properties);
            }
            else if (name === 'borderradius') {
                return this.wzLoadToChildColl(child, md.border_radius, this.properties);
            }
            else if (name === 'border-image') {
                return this.wzLoadToChildColl(child, md.border_image, this.properties);
            }
            else if (name === 'break-before') {
                return this.wzLoadToChildColl(child, md.break_before, this.properties);
            }
            else if (name === 'break-inside') {
                return this.wzLoadToChildColl(child, md.break_inside, this.properties);
            }
        }
        if (_l == 12 && _ch == 'c') {
            if (name === 'caption-side') {
                return this.wzLoadToChildColl(child, md.caption_side, this.properties);
            }
            else if (name === 'column-count') {
                return this.wzLoadToChildColl(child, md.column_count, this.properties);
            }
            else if (name === 'column-width') {
                return this.wzLoadToChildColl(child, md.column_width, this.properties);
            }
            else if (name === 'counterreset') {
                return this.wzLoadToChildColl(child, md.counter_reset, this.properties);
            }
        }
        if (_l == 12 && _ch == 'f') {
            if (name === 'font-variant') {
                return this.wzLoadToChildColl(child, md.font_variant, this.properties);
            }
        }
        if (_l == 12 && _ch == 'm') {
            if (name === 'margin-right') {
                return this.wzLoadToChildColl(child, md.margin_right, this.properties);
            }
            else if (name === 'marginbottom') {
                return this.wzLoadToChildColl(child, md.margin_bottom, this.properties);
            }
            else if (name === 'mixblendmode') {
                return this.wzLoadToChildColl(child, md.mix_blend_mode, this.properties);
            }
        }
        if (_l == 12 && _ch == 'o') {
            if (name === 'outlinecolor') {
                return this.wzLoadToChildColl(child, md.outline_color, this.properties);
            }
            else if (name === 'outlinestyle') {
                return this.wzLoadToChildColl(child, md.outline_style, this.properties);
            }
            else if (name === 'outlinewidth') {
                return this.wzLoadToChildColl(child, md.outline_width, this.properties);
            }
            else if (name === 'overflowwrap') {
                return this.wzLoadToChildColl(child, md.overflow_wrap, this.properties);
            }
        }
        if (_l == 12 && _ch == 'p') {
            if (name === 'paddingright') {
                return this.wzLoadToChildColl(child, md.padding_right, this.properties);
            }
            else if (name === 'padding-left') {
                return this.wzLoadToChildColl(child, md.padding_left, this.properties);
            }
            else if (name === 'pause-before') {
                return this.wzLoadToChildColl(child, md.pause_before, this.properties);
            }
        }
        if (_l == 12 && _ch == 's') {
            if (name === 'speak-header') {
                return this.wzLoadToChildColl(child, md.speak_header, this.properties);
            }
            else if (name === 'speaknumeral') {
                return this.wzLoadToChildColl(child, md.speak_numeral, this.properties);
            }
        }
        if (_l == 12 && _ch == 't') {
            if (name === 'table-layout') {
                return this.wzLoadToChildColl(child, md.table_layout, this.properties);
            }
            else if (name === 'textoverflow') {
                return this.wzLoadToChildColl(child, md.text_overflow, this.properties);
            }
            else if (name === 'touch-action') {
                return this.wzLoadToChildColl(child, md.touch_action, this.properties);
            }
        }
        if (_l == 12 && _ch == 'u') {
            if (name === 'unicode-bidi') {
                return this.wzLoadToChildColl(child, md.unicode_bidi, this.properties);
            }
        }
        if (_l == 12 && _ch == 'v') {
            if (name === 'voice-family') {
                return this.wzLoadToChildColl(child, md.voice_family, this.properties);
            }
        }
        if (_l == 12 && _ch == 'w') {
            if (name === 'word-spacing') {
                return this.wzLoadToChildColl(child, md.word_spacing, this.properties);
            }
        }
        if (_l == 13 && _ch == 'a') {
            if (name === 'align-content') {
                return this.wzLoadToChildColl(child, md.align_content, this.properties);
            }
            else if (name === 'animationname') {
                return this.wzLoadToChildColl(child, md.animation_name, this.properties);
            }
        }
        if (_l == 13 && _ch == 'b') {
            if (name === 'borderspacing') {
                return this.wzLoadToChildColl(child, md.border_spacing, this.properties);
            }
            else if (name === 'border-bottom') {
                return this.wzLoadToChildColl(child, md.border_bottom, this.properties);
            }
            else if (name === 'border-radius') {
                return this.wzLoadToChildColl(child, md.border_radius, this.properties);
            }
        }
        if (_l == 13 && _ch == 'c') {
            if (name === 'counter-reset') {
                return this.wzLoadToChildColl(child, md.counter_reset, this.properties);
            }
        }
        if (_l == 13 && _ch == 'f') {
            if (name === 'flexdirection') {
                return this.wzLoadToChildColl(child, md.flex_direction, this.properties);
            }
        }
        if (_l == 13 && _ch == 'l') {
            if (name === 'letterspacing') {
                return this.wzLoadToChildColl(child, md.letter_spacing, this.properties);
            }
            else if (name === 'liststyletype') {
                return this.wzLoadToChildColl(child, md.list_style_type, this.properties);
            }
        }
        if (_l == 13 && _ch == 'm') {
            if (name === 'margin-bottom') {
                return this.wzLoadToChildColl(child, md.margin_bottom, this.properties);
            }
        }
        if (_l == 13 && _ch == 'o') {
            if (name === 'outline-color') {
                return this.wzLoadToChildColl(child, md.outline_color, this.properties);
            }
            else if (name === 'outline-style') {
                return this.wzLoadToChildColl(child, md.outline_style, this.properties);
            }
            else if (name === 'outline-width') {
                return this.wzLoadToChildColl(child, md.outline_width, this.properties);
            }
            else if (name === 'outlineoffset') {
                return this.wzLoadToChildColl(child, md.outline_offset, this.properties);
            }
            else if (name === 'overflow-wrap') {
                return this.wzLoadToChildColl(child, md.overflow_wrap, this.properties);
            }
        }
        if (_l == 13 && _ch == 'p') {
            if (name === 'padding-right') {
                return this.wzLoadToChildColl(child, md.padding_right, this.properties);
            }
            else if (name === 'paddingbottom') {
                return this.wzLoadToChildColl(child, md.padding_bottom, this.properties);
            }
            else if (name === 'pointerevents') {
                return this.wzLoadToChildColl(child, md.pointer_events, this.properties);
            }
        }
        if (_l == 13 && _ch == 's') {
            if (name === 'speak-numeral') {
                return this.wzLoadToChildColl(child, md.speak_numeral, this.properties);
            }
        }
        if (_l == 13 && _ch == 't') {
            if (name === 'textalignlast') {
                return this.wzLoadToChildColl(child, md.text_align_last, this.properties);
            }
            else if (name === 'text-overflow') {
                return this.wzLoadToChildColl(child, md.text_overflow, this.properties);
            }
            else if (name === 'texttransform') {
                return this.wzLoadToChildColl(child, md.text_transform, this.properties);
            }
        }
        if (_l == 13 && _ch == 'v') {
            if (name === 'verticalalign') {
                return this.wzLoadToChildColl(child, md.vertical_align, this.properties);
            }
        }
        if (_l == 14 && _ch == 'a') {
            if (name === 'animationdelay') {
                return this.wzLoadToChildColl(child, md.animation_delay, this.properties);
            }
            else if (name === 'animation-name') {
                return this.wzLoadToChildColl(child, md.animation_name, this.properties);
            }
        }
        if (_l == 14 && _ch == 'b') {
            if (name === 'backgroundclip') {
                return this.wzLoadToChildColl(child, md.background_clip, this.properties);
            }
            else if (name === 'backgroundsize') {
                return this.wzLoadToChildColl(child, md.background_size, this.properties);
            }
            else if (name === 'bordercollapse') {
                return this.wzLoadToChildColl(child, md.border_collapse, this.properties);
            }
            else if (name === 'border-spacing') {
                return this.wzLoadToChildColl(child, md.border_spacing, this.properties);
            }
            else if (name === 'bordertopcolor') {
                return this.wzLoadToChildColl(child, md.border_top_color, this.properties);
            }
            else if (name === 'bordertopstyle') {
                return this.wzLoadToChildColl(child, md.border_top_style, this.properties);
            }
            else if (name === 'bordertopwidth') {
                return this.wzLoadToChildColl(child, md.border_top_width, this.properties);
            }
        }
        if (_l == 14 && _ch == 'f') {
            if (name === 'flex-direction') {
                return this.wzLoadToChildColl(child, md.flex_direction, this.properties);
            }
        }
        if (_l == 14 && _ch == 'j') {
            if (name === 'justifycontent') {
                return this.wzLoadToChildColl(child, md.justify_content, this.properties);
            }
        }
        if (_l == 14 && _ch == 'l') {
            if (name === 'letter-spacing') {
                return this.wzLoadToChildColl(child, md.letter_spacing, this.properties);
            }
            else if (name === 'liststyleimage') {
                return this.wzLoadToChildColl(child, md.list_style_image, this.properties);
            }
        }
        if (_l == 14 && _ch == 'm') {
            if (name === 'mix-blend-mode') {
                return this.wzLoadToChildColl(child, md.mix_blend_mode, this.properties);
            }
        }
        if (_l == 14 && _ch == 'o') {
            if (name === 'outline-offset') {
                return this.wzLoadToChildColl(child, md.outline_offset, this.properties);
            }
        }
        if (_l == 14 && _ch == 'p') {
            if (name === 'padding-bottom') {
                return this.wzLoadToChildColl(child, md.padding_bottom, this.properties);
            }
            else if (name === 'pagebreakafter') {
                return this.wzLoadToChildColl(child, md.page_break_after, this.properties);
            }
            else if (name === 'pointer-events') {
                return this.wzLoadToChildColl(child, md.pointer_events, this.properties);
            }
        }
        if (_l == 14 && _ch == 't') {
            if (name === 'targetposition') {
                return this.wzLoadToChildColl(child, md.target_position, this.properties);
            }
            else if (name === 'textdecoration') {
                return this.wzLoadToChildColl(child, md.text_decoration, this.properties);
            }
            else if (name === 'text-transform') {
                return this.wzLoadToChildColl(child, md.text_transform, this.properties);
            }
            else if (name === 'transformstyle') {
                return this.wzLoadToChildColl(child, md.transform_style, this.properties);
            }
        }
        if (_l == 14 && _ch == 'v') {
            if (name === 'vertical-align') {
                return this.wzLoadToChildColl(child, md.vertical_align, this.properties);
            }
        }
        if (_l == 15 && _ch == 'a') {
            if (name === 'animation-delay') {
                return this.wzLoadToChildColl(child, md.animation_delay, this.properties);
            }
        }
        if (_l == 15 && _ch == 'b') {
            if (name === 'backgroundcolor') {
                return this.wzLoadToChildColl(child, md.background_color, this.properties);
            }
            else if (name === 'backgroundimage') {
                return this.wzLoadToChildColl(child, md.background_image, this.properties);
            }
            else if (name === 'background-clip') {
                return this.wzLoadToChildColl(child, md.background_clip, this.properties);
            }
            else if (name === 'background-size') {
                return this.wzLoadToChildColl(child, md.background_size, this.properties);
            }
            else if (name === 'border-collapse') {
                return this.wzLoadToChildColl(child, md.border_collapse, this.properties);
            }
            else if (name === 'borderleftcolor') {
                return this.wzLoadToChildColl(child, md.border_left_color, this.properties);
            }
            else if (name === 'borderleftstyle') {
                return this.wzLoadToChildColl(child, md.border_left_style, this.properties);
            }
            else if (name === 'borderleftwidth') {
                return this.wzLoadToChildColl(child, md.border_left_width, this.properties);
            }
        }
        if (_l == 15 && _ch == 'c') {
            if (name === 'columnrulecolor') {
                return this.wzLoadToChildColl(child, md.column_rule_color, this.properties);
            }
            else if (name === 'columnrulestyle') {
                return this.wzLoadToChildColl(child, md.column_rule_style, this.properties);
            }
            else if (name === 'columnrulewidth') {
                return this.wzLoadToChildColl(child, md.column_rule_width, this.properties);
            }
        }
        if (_l == 15 && _ch == 'j') {
            if (name === 'justify-content') {
                return this.wzLoadToChildColl(child, md.justify_content, this.properties);
            }
        }
        if (_l == 15 && _ch == 'l') {
            if (name === 'list-style-type') {
                return this.wzLoadToChildColl(child, md.list_style_type, this.properties);
            }
        }
        if (_l == 15 && _ch == 'p') {
            if (name === 'pagebreakbefore') {
                return this.wzLoadToChildColl(child, md.page_break_before, this.properties);
            }
            else if (name === 'pagebreakinside') {
                return this.wzLoadToChildColl(child, md.page_break_inside, this.properties);
            }
        }
        if (_l == 15 && _ch == 't') {
            if (name === 'target-position') {
                return this.wzLoadToChildColl(child, md.target_position, this.properties);
            }
            else if (name === 'text-align-last') {
                return this.wzLoadToChildColl(child, md.text_align_last, this.properties);
            }
            else if (name === 'text-decoration') {
                return this.wzLoadToChildColl(child, md.text_decoration, this.properties);
            }
            else if (name === 'transformorigin') {
                return this.wzLoadToChildColl(child, md.transform_origin, this.properties);
            }
            else if (name === 'transform-style') {
                return this.wzLoadToChildColl(child, md.transform_style, this.properties);
            }
            else if (name === 'transitiondelay') {
                return this.wzLoadToChildColl(child, md.transition_delay, this.properties);
            }
        }
        if (_l == 16 && _ch == 'b') {
            if (name === 'background-color') {
                return this.wzLoadToChildColl(child, md.background_color, this.properties);
            }
            else if (name === 'background-image') {
                return this.wzLoadToChildColl(child, md.background_image, this.properties);
            }
            else if (name === 'backgroundrepeat') {
                return this.wzLoadToChildColl(child, md.background_repeat, this.properties);
            }
            else if (name === 'backgroundorigin') {
                return this.wzLoadToChildColl(child, md.background_origin, this.properties);
            }
            else if (name === 'border-top-color') {
                return this.wzLoadToChildColl(child, md.border_top_color, this.properties);
            }
            else if (name === 'borderrightcolor') {
                return this.wzLoadToChildColl(child, md.border_right_color, this.properties);
            }
            else if (name === 'border-top-style') {
                return this.wzLoadToChildColl(child, md.border_top_style, this.properties);
            }
            else if (name === 'borderrightstyle') {
                return this.wzLoadToChildColl(child, md.border_right_style, this.properties);
            }
            else if (name === 'border-top-width') {
                return this.wzLoadToChildColl(child, md.border_top_width, this.properties);
            }
            else if (name === 'borderrightwidth') {
                return this.wzLoadToChildColl(child, md.border_right_width, this.properties);
            }
            else if (name === 'borderimageslice') {
                return this.wzLoadToChildColl(child, md.border_image_slice, this.properties);
            }
            else if (name === 'borderimagewidth') {
                return this.wzLoadToChildColl(child, md.border_image_width, this.properties);
            }
        }
        if (_l == 16 && _ch == 'c') {
            if (name === 'counterincrement') {
                return this.wzLoadToChildColl(child, md.counter_increment, this.properties);
            }
        }
        if (_l == 16 && _ch == 'l') {
            if (name === 'list-style-image') {
                return this.wzLoadToChildColl(child, md.list_style_image, this.properties);
            }
        }
        if (_l == 16 && _ch == 'p') {
            if (name === 'page-break-after') {
                return this.wzLoadToChildColl(child, md.page_break_after, this.properties);
            }
        }
        if (_l == 16 && _ch == 's') {
            if (name === 'speakpunctuation') {
                return this.wzLoadToChildColl(child, md.speak_punctuation, this.properties);
            }
        }
        if (_l == 16 && _ch == 't') {
            if (name === 'transform-origin') {
                return this.wzLoadToChildColl(child, md.transform_origin, this.properties);
            }
            else if (name === 'transition-delay') {
                return this.wzLoadToChildColl(child, md.transition_delay, this.properties);
            }
        }
        if (_l == 17 && _ch == 'a') {
            if (name === 'animationduration') {
                return this.wzLoadToChildColl(child, md.animation_duration, this.properties);
            }
            else if (name === 'animationfillmode') {
                return this.wzLoadToChildColl(child, md.animation_fill_mode, this.properties);
            }
        }
        if (_l == 17 && _ch == 'b') {
            if (name === 'background-repeat') {
                return this.wzLoadToChildColl(child, md.background_repeat, this.properties);
            }
            else if (name === 'background-origin') {
                return this.wzLoadToChildColl(child, md.background_origin, this.properties);
            }
            else if (name === 'borderbottomcolor') {
                return this.wzLoadToChildColl(child, md.border_bottom_color, this.properties);
            }
            else if (name === 'border-left-color') {
                return this.wzLoadToChildColl(child, md.border_left_color, this.properties);
            }
            else if (name === 'borderbottomstyle') {
                return this.wzLoadToChildColl(child, md.border_bottom_style, this.properties);
            }
            else if (name === 'border-left-style') {
                return this.wzLoadToChildColl(child, md.border_left_style, this.properties);
            }
            else if (name === 'borderbottomwidth') {
                return this.wzLoadToChildColl(child, md.border_bottom_width, this.properties);
            }
            else if (name === 'border-left-width') {
                return this.wzLoadToChildColl(child, md.border_left_width, this.properties);
            }
            else if (name === 'borderimageoutset') {
                return this.wzLoadToChildColl(child, md.border_image_outset, this.properties);
            }
            else if (name === 'borderimagerepeat') {
                return this.wzLoadToChildColl(child, md.border_image_repeat, this.properties);
            }
            else if (name === 'borderimagesource') {
                return this.wzLoadToChildColl(child, md.border_image_source, this.properties);
            }
        }
        if (_l == 17 && _ch == 'c') {
            if (name === 'column-rule-color') {
                return this.wzLoadToChildColl(child, md.column_rule_color, this.properties);
            }
            else if (name === 'column-rule-style') {
                return this.wzLoadToChildColl(child, md.column_rule_style, this.properties);
            }
            else if (name === 'column-rule-width') {
                return this.wzLoadToChildColl(child, md.column_rule_width, this.properties);
            }
            else if (name === 'counter-increment') {
                return this.wzLoadToChildColl(child, md.counter_increment, this.properties);
            }
        }
        if (_l == 17 && _ch == 'l') {
            if (name === 'liststyleposition') {
                return this.wzLoadToChildColl(child, md.list_style_position, this.properties);
            }
        }
        if (_l == 17 && _ch == 'p') {
            if (name === 'page-break-before') {
                return this.wzLoadToChildColl(child, md.page_break_before, this.properties);
            }
            else if (name === 'page-break-inside') {
                return this.wzLoadToChildColl(child, md.page_break_inside, this.properties);
            }
            else if (name === 'perspectiveorigin') {
                return this.wzLoadToChildColl(child, md.perspective_origin, this.properties);
            }
        }
        if (_l == 17 && _ch == 's') {
            if (name === 'speak-punctuation') {
                return this.wzLoadToChildColl(child, md.speak_punctuation, this.properties);
            }
        }
        if (_l == 18 && _ch == 'a') {
            if (name === 'animationdirection') {
                return this.wzLoadToChildColl(child, md.animation_direction, this.properties);
            }
            else if (name === 'animation-duration') {
                return this.wzLoadToChildColl(child, md.animation_duration, this.properties);
            }
            else if (name === 'animationplaystate') {
                return this.wzLoadToChildColl(child, md.animation_play_state, this.properties);
            }
        }
        if (_l == 18 && _ch == 'b') {
            if (name === 'backgroundposition') {
                return this.wzLoadToChildColl(child, md.background_position, this.properties);
            }
            else if (name === 'backfacevisibility') {
                return this.wzLoadToChildColl(child, md.backface_visibility, this.properties);
            }
            else if (name === 'border-right-color') {
                return this.wzLoadToChildColl(child, md.border_right_color, this.properties);
            }
            else if (name === 'border-right-style') {
                return this.wzLoadToChildColl(child, md.border_right_style, this.properties);
            }
            else if (name === 'border-right-width') {
                return this.wzLoadToChildColl(child, md.border_right_width, this.properties);
            }
            else if (name === 'border-image-slice') {
                return this.wzLoadToChildColl(child, md.border_image_slice, this.properties);
            }
            else if (name === 'border-image-width') {
                return this.wzLoadToChildColl(child, md.border_image_width, this.properties);
            }
            else if (name === 'boxdecorationbreak') {
                return this.wzLoadToChildColl(child, md.box_decoration_break, this.properties);
            }
        }
        if (_l == 18 && _ch == 'h') {
            if (name === 'hangingpunctuation') {
                return this.wzLoadToChildColl(child, md.hanging_punctuation, this.properties);
            }
        }
        if (_l == 18 && _ch == 'p') {
            if (name === 'perspective-origin') {
                return this.wzLoadToChildColl(child, md.perspective_origin, this.properties);
            }
        }
        if (_l == 18 && _ch == 't') {
            if (name === 'textdecorationline') {
                return this.wzLoadToChildColl(child, md.text_decoration_line, this.properties);
            }
            else if (name === 'textdecorationskip') {
                return this.wzLoadToChildColl(child, md.text_decoration_skip, this.properties);
            }
            else if (name === 'transitionduration') {
                return this.wzLoadToChildColl(child, md.transition_duration, this.properties);
            }
            else if (name === 'transitionproperty') {
                return this.wzLoadToChildColl(child, md.transition_property, this.properties);
            }
        }
        if (_l == 19 && _ch == 'a') {
            if (name === 'animation-direction') {
                return this.wzLoadToChildColl(child, md.animation_direction, this.properties);
            }
            else if (name === 'animation-fill-mode') {
                return this.wzLoadToChildColl(child, md.animation_fill_mode, this.properties);
            }
        }
        if (_l == 19 && _ch == 'b') {
            if (name === 'background-position') {
                return this.wzLoadToChildColl(child, md.background_position, this.properties);
            }
            else if (name === 'backgroundblendmode') {
                return this.wzLoadToChildColl(child, md.background_blend_mode, this.properties);
            }
            else if (name === 'backface-visibility') {
                return this.wzLoadToChildColl(child, md.backface_visibility, this.properties);
            }
            else if (name === 'border-bottom-color') {
                return this.wzLoadToChildColl(child, md.border_bottom_color, this.properties);
            }
            else if (name === 'border-bottom-style') {
                return this.wzLoadToChildColl(child, md.border_bottom_style, this.properties);
            }
            else if (name === 'border-bottom-width') {
                return this.wzLoadToChildColl(child, md.border_bottom_width, this.properties);
            }
            else if (name === 'bordertopleftradius') {
                return this.wzLoadToChildColl(child, md.border_top_left_radius, this.properties);
            }
            else if (name === 'border-image-outset') {
                return this.wzLoadToChildColl(child, md.border_image_outset, this.properties);
            }
            else if (name === 'border-image-repeat') {
                return this.wzLoadToChildColl(child, md.border_image_repeat, this.properties);
            }
            else if (name === 'border-image-source') {
                return this.wzLoadToChildColl(child, md.border_image_source, this.properties);
            }
        }
        if (_l == 19 && _ch == 'h') {
            if (name === 'hanging-punctuation') {
                return this.wzLoadToChildColl(child, md.hanging_punctuation, this.properties);
            }
        }
        if (_l == 19 && _ch == 'l') {
            if (name === 'list-style-position') {
                return this.wzLoadToChildColl(child, md.list_style_position, this.properties);
            }
        }
        if (_l == 19 && _ch == 't') {
            if (name === 'textdecorationstyle') {
                return this.wzLoadToChildColl(child, md.text_decoration_style, this.properties);
            }
            else if (name === 'textdecorationcolor') {
                return this.wzLoadToChildColl(child, md.text_decoration_color, this.properties);
            }
            else if (name === 'transition-duration') {
                return this.wzLoadToChildColl(child, md.transition_duration, this.properties);
            }
            else if (name === 'transition-property') {
                return this.wzLoadToChildColl(child, md.transition_property, this.properties);
            }
        }
        if (_l == 20 && _ch == 'a') {
            if (name === 'animation-play-state') {
                return this.wzLoadToChildColl(child, md.animation_play_state, this.properties);
            }
        }
        if (_l == 20 && _ch == 'b') {
            if (name === 'backgroundattachment') {
                return this.wzLoadToChildColl(child, md.background_attachment, this.properties);
            }
            else if (name === 'bordertoprightradius') {
                return this.wzLoadToChildColl(child, md.border_top_right_radius, this.properties);
            }
            else if (name === 'box-decoration-break') {
                return this.wzLoadToChildColl(child, md.box_decoration_break, this.properties);
            }
        }
        if (_l == 20 && _ch == 't') {
            if (name === 'text-decoration-line') {
                return this.wzLoadToChildColl(child, md.text_decoration_line, this.properties);
            }
            else if (name === 'text-decoration-skip') {
                return this.wzLoadToChildColl(child, md.text_decoration_skip, this.properties);
            }
        }
        if (_l == 21 && _ch == 'b') {
            if (name === 'background-attachment') {
                return this.wzLoadToChildColl(child, md.background_attachment, this.properties);
            }
            else if (name === 'background-blend-mode') {
                return this.wzLoadToChildColl(child, md.background_blend_mode, this.properties);
            }
        }
        if (_l == 21 && _ch == 't') {
            if (name === 'text-decoration-style') {
                return this.wzLoadToChildColl(child, md.text_decoration_style, this.properties);
            }
            else if (name === 'text-decoration-color') {
                return this.wzLoadToChildColl(child, md.text_decoration_color, this.properties);
            }
            else if (name === 'textunderlineposition') {
                return this.wzLoadToChildColl(child, md.text_underline_position, this.properties);
            }
        }
        if (_l == 22 && _ch == 'b') {
            if (name === 'border-top-left-radius') {
                return this.wzLoadToChildColl(child, md.border_top_left_radius, this.properties);
            }
            else if (name === 'borderbottomleftradius') {
                return this.wzLoadToChildColl(child, md.border_bottom_left_radius, this.properties);
            }
        }
        if (_l == 23 && _ch == 'a') {
            if (name === 'animationiterationcount') {
                return this.wzLoadToChildColl(child, md.animation_iteration_count, this.properties);
            }
            else if (name === 'animationtimingfunction') {
                return this.wzLoadToChildColl(child, md.animation_timing_function, this.properties);
            }
        }
        if (_l == 23 && _ch == 'b') {
            if (name === 'border-top-right-radius') {
                return this.wzLoadToChildColl(child, md.border_top_right_radius, this.properties);
            }
            else if (name === 'borderbottomrightradius') {
                return this.wzLoadToChildColl(child, md.border_bottom_right_radius, this.properties);
            }
        }
        if (_l == 23 && _ch == 't') {
            if (name === 'text-underline-position') {
                return this.wzLoadToChildColl(child, md.text_underline_position, this.properties);
            }
        }
        if (_l == 24 && _ch == 't') {
            if (name === 'transitiontimingfunction') {
                return this.wzLoadToChildColl(child, md.transition_timing_function, this.properties);
            }
        }
        if (_l == 25 && _ch == 'a') {
            if (name === 'animation-iteration-count') {
                return this.wzLoadToChildColl(child, md.animation_iteration_count, this.properties);
            }
            else if (name === 'animation-timing-function') {
                return this.wzLoadToChildColl(child, md.animation_timing_function, this.properties);
            }
        }
        if (_l == 25 && _ch == 'b') {
            if (name === 'border-bottom-left-radius') {
                return this.wzLoadToChildColl(child, md.border_bottom_left_radius, this.properties);
            }
        }
        if (_l == 26 && _ch == 'b') {
            if (name === 'border-bottom-right-radius') {
                return this.wzLoadToChildColl(child, md.border_bottom_right_radius, this.properties);
            }
        }
        if (_l == 26 && _ch == 't') {
            if (name === 'transition-timing-function') {
                return this.wzLoadToChildColl(child, md.transition_timing_function, this.properties);
            }
        }
        return ok;
    }
    property.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    property.prototype.wzVerify = function(ctx) {
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzVerify(ctx);
        }
        md.cssBase.prototype.wzVerify.call(this, ctx);
    }
    property.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzInitialize(ctx);
        }
        md.cssBase.prototype.wzInitialize.call(this, ctx);
    }
    return property;
})(cssBase);


md.property = property;
// element align_content
var align_content = (function (property) {
    _inherits(align_content, property);
    function align_content(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(align_content.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, align_content);
        this.wzElement = "align_content";
    }
    return align_content;
})(property);


md.align_content = align_content;
// element align_items
var align_items = (function (property) {
    _inherits(align_items, property);
    function align_items(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(align_items.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, align_items);
        this.wzElement = "align_items";
    }
    return align_items;
})(property);


md.align_items = align_items;
// element align_self
var align_self = (function (property) {
    _inherits(align_self, property);
    function align_self(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(align_self.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, align_self);
        this.wzElement = "align_self";
    }
    return align_self;
})(property);


md.align_self = align_self;
// element animation
var animation = (function (property) {
    _inherits(animation, property);
    function animation(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation);
        this.wzElement = "animation";
    }
    return animation;
})(property);


md.animation = animation;
// element animation_delay
var animation_delay = (function (property) {
    _inherits(animation_delay, property);
    function animation_delay(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_delay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_delay);
        this.wzElement = "animation_delay";
    }
    return animation_delay;
})(property);


md.animation_delay = animation_delay;
// element animation_direction
var animation_direction = (function (property) {
    _inherits(animation_direction, property);
    function animation_direction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_direction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_direction);
        this.wzElement = "animation_direction";
    }
    return animation_direction;
})(property);


md.animation_direction = animation_direction;
// element animation_duration
var animation_duration = (function (property) {
    _inherits(animation_duration, property);
    function animation_duration(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_duration.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_duration);
        this.wzElement = "animation_duration";
    }
    return animation_duration;
})(property);


md.animation_duration = animation_duration;
// element animation_fill_mode
var animation_fill_mode = (function (property) {
    _inherits(animation_fill_mode, property);
    function animation_fill_mode(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_fill_mode.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_fill_mode);
        this.wzElement = "animation_fill_mode";
    }
    return animation_fill_mode;
})(property);


md.animation_fill_mode = animation_fill_mode;
// element animation_iteration_count
var animation_iteration_count = (function (property) {
    _inherits(animation_iteration_count, property);
    function animation_iteration_count(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_iteration_count.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_iteration_count);
        this.wzElement = "animation_iteration_count";
    }
    return animation_iteration_count;
})(property);


md.animation_iteration_count = animation_iteration_count;
// element animation_name
var animation_name = (function (property) {
    _inherits(animation_name, property);
    function animation_name(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_name.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_name);
        this.wzElement = "animation_name";
    }
    return animation_name;
})(property);


md.animation_name = animation_name;
// element animation_play_state
var animation_play_state = (function (property) {
    _inherits(animation_play_state, property);
    function animation_play_state(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_play_state.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_play_state);
        this.wzElement = "animation_play_state";
    }
    return animation_play_state;
})(property);


md.animation_play_state = animation_play_state;
// element animation_timing_function
var animation_timing_function = (function (property) {
    _inherits(animation_timing_function, property);
    function animation_timing_function(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(animation_timing_function.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, animation_timing_function);
        this.wzElement = "animation_timing_function";
    }
    return animation_timing_function;
})(property);


md.animation_timing_function = animation_timing_function;
// element appearance
var appearance = (function (property) {
    _inherits(appearance, property);
    function appearance(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(appearance.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, appearance);
        this.wzElement = "appearance";
    }
    return appearance;
})(property);


md.appearance = appearance;
// element azimuth
var azimuth = (function (property) {
    _inherits(azimuth, property);
    function azimuth(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(azimuth.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, azimuth);
        this.wzElement = "azimuth";
    }
    return azimuth;
})(property);


md.azimuth = azimuth;
// element background_attachment
var background_attachment = (function (property) {
    _inherits(background_attachment, property);
    function background_attachment(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_attachment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_attachment);
        this.wzElement = "background_attachment";
    }
    return background_attachment;
})(property);


md.background_attachment = background_attachment;
// element background_color
var background_color = (function (property) {
    _inherits(background_color, property);
    function background_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_color);
        this.wzElement = "background_color";
    }
    return background_color;
})(property);


md.background_color = background_color;
// element background_image
var background_image = (function (property) {
    _inherits(background_image, property);
    function background_image(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_image.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_image);
        this.wzElement = "background_image";
    }
    return background_image;
})(property);


md.background_image = background_image;
// element background_position
var background_position = (function (property) {
    _inherits(background_position, property);
    function background_position(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_position);
        this.wzElement = "background_position";
    }
    return background_position;
})(property);


md.background_position = background_position;
// element background_repeat
var background_repeat = (function (property) {
    _inherits(background_repeat, property);
    function background_repeat(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_repeat.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_repeat);
        this.wzElement = "background_repeat";
    }
    return background_repeat;
})(property);


md.background_repeat = background_repeat;
// element background_blend_mode
var background_blend_mode = (function (property) {
    _inherits(background_blend_mode, property);
    function background_blend_mode(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_blend_mode.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_blend_mode);
        this.wzElement = "background_blend_mode";
    }
    return background_blend_mode;
})(property);


md.background_blend_mode = background_blend_mode;
// element background_clip
var background_clip = (function (property) {
    _inherits(background_clip, property);
    function background_clip(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_clip.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_clip);
        this.wzElement = "background_clip";
    }
    return background_clip;
})(property);


md.background_clip = background_clip;
// element background_origin
var background_origin = (function (property) {
    _inherits(background_origin, property);
    function background_origin(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_origin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_origin);
        this.wzElement = "background_origin";
    }
    return background_origin;
})(property);


md.background_origin = background_origin;
// element background_size
var background_size = (function (property) {
    _inherits(background_size, property);
    function background_size(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background_size.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background_size);
        this.wzElement = "background_size";
    }
    return background_size;
})(property);


md.background_size = background_size;
// element background
var background = (function (property) {
    _inherits(background, property);
    function background(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(background.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background);
        this.wzElement = "background";
    }
    return background;
})(property);


md.background = background;
// element backface_visibility
var backface_visibility = (function (property) {
    _inherits(backface_visibility, property);
    function backface_visibility(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(backface_visibility.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, backface_visibility);
        this.wzElement = "backface_visibility";
    }
    return backface_visibility;
})(property);


md.backface_visibility = backface_visibility;
// element border_collapse
var border_collapse = (function (property) {
    _inherits(border_collapse, property);
    function border_collapse(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_collapse.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_collapse);
        this.wzElement = "border_collapse";
    }
    return border_collapse;
})(property);


md.border_collapse = border_collapse;
// element border_color
var border_color = (function (property) {
    _inherits(border_color, property);
    function border_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_color);
        this.wzElement = "border_color";
    }
    return border_color;
})(property);


md.border_color = border_color;
// element border_spacing
var border_spacing = (function (property) {
    _inherits(border_spacing, property);
    function border_spacing(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_spacing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_spacing);
        this.wzElement = "border_spacing";
    }
    return border_spacing;
})(property);


md.border_spacing = border_spacing;
// element border_style
var border_style = (function (property) {
    _inherits(border_style, property);
    function border_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_style);
        this.wzElement = "border_style";
    }
    return border_style;
})(property);


md.border_style = border_style;
// element border_top
var border_top = (function (property) {
    _inherits(border_top, property);
    function border_top(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top);
        this.wzElement = "border_top";
    }
    return border_top;
})(property);


md.border_top = border_top;
// element border_right
var border_right = (function (property) {
    _inherits(border_right, property);
    function border_right(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_right);
        this.wzElement = "border_right";
    }
    return border_right;
})(property);


md.border_right = border_right;
// element border_bottom
var border_bottom = (function (property) {
    _inherits(border_bottom, property);
    function border_bottom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom);
        this.wzElement = "border_bottom";
    }
    return border_bottom;
})(property);


md.border_bottom = border_bottom;
// element border_left
var border_left = (function (property) {
    _inherits(border_left, property);
    function border_left(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_left);
        this.wzElement = "border_left";
    }
    return border_left;
})(property);


md.border_left = border_left;
// element border_top_color
var border_top_color = (function (property) {
    _inherits(border_top_color, property);
    function border_top_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top_color);
        this.wzElement = "border_top_color";
    }
    return border_top_color;
})(property);


md.border_top_color = border_top_color;
// element border_right_color
var border_right_color = (function (property) {
    _inherits(border_right_color, property);
    function border_right_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_right_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_right_color);
        this.wzElement = "border_right_color";
    }
    return border_right_color;
})(property);


md.border_right_color = border_right_color;
// element border_bottom_color
var border_bottom_color = (function (property) {
    _inherits(border_bottom_color, property);
    function border_bottom_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom_color);
        this.wzElement = "border_bottom_color";
    }
    return border_bottom_color;
})(property);


md.border_bottom_color = border_bottom_color;
// element border_left_color
var border_left_color = (function (property) {
    _inherits(border_left_color, property);
    function border_left_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_left_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_left_color);
        this.wzElement = "border_left_color";
    }
    return border_left_color;
})(property);


md.border_left_color = border_left_color;
// element border_top_style
var border_top_style = (function (property) {
    _inherits(border_top_style, property);
    function border_top_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top_style);
        this.wzElement = "border_top_style";
    }
    return border_top_style;
})(property);


md.border_top_style = border_top_style;
// element border_right_style
var border_right_style = (function (property) {
    _inherits(border_right_style, property);
    function border_right_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_right_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_right_style);
        this.wzElement = "border_right_style";
    }
    return border_right_style;
})(property);


md.border_right_style = border_right_style;
// element border_bottom_style
var border_bottom_style = (function (property) {
    _inherits(border_bottom_style, property);
    function border_bottom_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom_style);
        this.wzElement = "border_bottom_style";
    }
    return border_bottom_style;
})(property);


md.border_bottom_style = border_bottom_style;
// element border_left_style
var border_left_style = (function (property) {
    _inherits(border_left_style, property);
    function border_left_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_left_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_left_style);
        this.wzElement = "border_left_style";
    }
    return border_left_style;
})(property);


md.border_left_style = border_left_style;
// element border_top_width
var border_top_width = (function (property) {
    _inherits(border_top_width, property);
    function border_top_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top_width);
        this.wzElement = "border_top_width";
    }
    return border_top_width;
})(property);


md.border_top_width = border_top_width;
// element border_right_width
var border_right_width = (function (property) {
    _inherits(border_right_width, property);
    function border_right_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_right_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_right_width);
        this.wzElement = "border_right_width";
    }
    return border_right_width;
})(property);


md.border_right_width = border_right_width;
// element border_bottom_width
var border_bottom_width = (function (property) {
    _inherits(border_bottom_width, property);
    function border_bottom_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom_width);
        this.wzElement = "border_bottom_width";
    }
    return border_bottom_width;
})(property);


md.border_bottom_width = border_bottom_width;
// element border_left_width
var border_left_width = (function (property) {
    _inherits(border_left_width, property);
    function border_left_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_left_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_left_width);
        this.wzElement = "border_left_width";
    }
    return border_left_width;
})(property);


md.border_left_width = border_left_width;
// element border_width
var border_width = (function (property) {
    _inherits(border_width, property);
    function border_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_width);
        this.wzElement = "border_width";
    }
    return border_width;
})(property);


md.border_width = border_width;
// element border
var border = (function (property) {
    _inherits(border, property);
    function border(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border);
        this.wzElement = "border";
    }
    return border;
})(property);


md.border = border;
// element border_radius
var border_radius = (function (property) {
    _inherits(border_radius, property);
    function border_radius(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_radius.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_radius);
        this.wzElement = "border_radius";
    }
    return border_radius;
})(property);


md.border_radius = border_radius;
// element border_top_left_radius
var border_top_left_radius = (function (property) {
    _inherits(border_top_left_radius, property);
    function border_top_left_radius(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top_left_radius.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top_left_radius);
        this.wzElement = "border_top_left_radius";
    }
    return border_top_left_radius;
})(property);


md.border_top_left_radius = border_top_left_radius;
// element border_top_right_radius
var border_top_right_radius = (function (property) {
    _inherits(border_top_right_radius, property);
    function border_top_right_radius(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_top_right_radius.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_top_right_radius);
        this.wzElement = "border_top_right_radius";
    }
    return border_top_right_radius;
})(property);


md.border_top_right_radius = border_top_right_radius;
// element border_bottom_left_radius
var border_bottom_left_radius = (function (property) {
    _inherits(border_bottom_left_radius, property);
    function border_bottom_left_radius(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom_left_radius.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom_left_radius);
        this.wzElement = "border_bottom_left_radius";
    }
    return border_bottom_left_radius;
})(property);


md.border_bottom_left_radius = border_bottom_left_radius;
// element border_bottom_right_radius
var border_bottom_right_radius = (function (property) {
    _inherits(border_bottom_right_radius, property);
    function border_bottom_right_radius(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_bottom_right_radius.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_bottom_right_radius);
        this.wzElement = "border_bottom_right_radius";
    }
    return border_bottom_right_radius;
})(property);


md.border_bottom_right_radius = border_bottom_right_radius;
// element border_image
var border_image = (function (property) {
    _inherits(border_image, property);
    function border_image(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image);
        this.wzElement = "border_image";
    }
    return border_image;
})(property);


md.border_image = border_image;
// element border_image_outset
var border_image_outset = (function (property) {
    _inherits(border_image_outset, property);
    function border_image_outset(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image_outset.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image_outset);
        this.wzElement = "border_image_outset";
    }
    return border_image_outset;
})(property);


md.border_image_outset = border_image_outset;
// element border_image_repeat
var border_image_repeat = (function (property) {
    _inherits(border_image_repeat, property);
    function border_image_repeat(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image_repeat.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image_repeat);
        this.wzElement = "border_image_repeat";
    }
    return border_image_repeat;
})(property);


md.border_image_repeat = border_image_repeat;
// element border_image_source
var border_image_source = (function (property) {
    _inherits(border_image_source, property);
    function border_image_source(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image_source.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image_source);
        this.wzElement = "border_image_source";
    }
    return border_image_source;
})(property);


md.border_image_source = border_image_source;
// element border_image_slice
var border_image_slice = (function (property) {
    _inherits(border_image_slice, property);
    function border_image_slice(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image_slice.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image_slice);
        this.wzElement = "border_image_slice";
    }
    return border_image_slice;
})(property);


md.border_image_slice = border_image_slice;
// element border_image_width
var border_image_width = (function (property) {
    _inherits(border_image_width, property);
    function border_image_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(border_image_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border_image_width);
        this.wzElement = "border_image_width";
    }
    return border_image_width;
})(property);


md.border_image_width = border_image_width;
// element bottom
var bottom = (function (property) {
    _inherits(bottom, property);
    function bottom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(bottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bottom);
        this.wzElement = "bottom";
    }
    return bottom;
})(property);


md.bottom = bottom;
// element box_sizing
var box_sizing = (function (property) {
    _inherits(box_sizing, property);
    function box_sizing(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(box_sizing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, box_sizing);
        this.wzElement = "box_sizing";
    }
    return box_sizing;
})(property);


md.box_sizing = box_sizing;
// element box_decoration_break
var box_decoration_break = (function (property) {
    _inherits(box_decoration_break, property);
    function box_decoration_break(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(box_decoration_break.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, box_decoration_break);
        this.wzElement = "box_decoration_break";
    }
    return box_decoration_break;
})(property);


md.box_decoration_break = box_decoration_break;
// element box_shadow
var box_shadow = (function (property) {
    _inherits(box_shadow, property);
    function box_shadow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(box_shadow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, box_shadow);
        this.wzElement = "box_shadow";
    }
    return box_shadow;
})(property);


md.box_shadow = box_shadow;
// element break_after
var break_after = (function (property) {
    _inherits(break_after, property);
    function break_after(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(break_after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, break_after);
        this.wzElement = "break_after";
    }
    return break_after;
})(property);


md.break_after = break_after;
// element break_before
var break_before = (function (property) {
    _inherits(break_before, property);
    function break_before(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(break_before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, break_before);
        this.wzElement = "break_before";
    }
    return break_before;
})(property);


md.break_before = break_before;
// element break_inside
var break_inside = (function (property) {
    _inherits(break_inside, property);
    function break_inside(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(break_inside.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, break_inside);
        this.wzElement = "break_inside";
    }
    return break_inside;
})(property);


md.break_inside = break_inside;
// element caption_side
var caption_side = (function (property) {
    _inherits(caption_side, property);
    function caption_side(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(caption_side.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, caption_side);
        this.wzElement = "caption_side";
    }
    return caption_side;
})(property);


md.caption_side = caption_side;
// element clear
var clear = (function (property) {
    _inherits(clear, property);
    function clear(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(clear.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, clear);
        this.wzElement = "clear";
    }
    return clear;
})(property);


md.clear = clear;
// element clip
var clip = (function (property) {
    _inherits(clip, property);
    function clip(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(clip.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, clip);
        this.wzElement = "clip";
    }
    return clip;
})(property);


md.clip = clip;
// element color
var color = (function (property) {
    _inherits(color, property);
    function color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, color);
        this.wzElement = "color";
    }
    return color;
})(property);


md.color = color;
// element columns
var columns = (function (property) {
    _inherits(columns, property);
    function columns(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(columns.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, columns);
        this.wzElement = "columns";
    }
    return columns;
})(property);


md.columns = columns;
// element column_count
var column_count = (function (property) {
    _inherits(column_count, property);
    function column_count(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_count.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_count);
        this.wzElement = "column_count";
    }
    return column_count;
})(property);


md.column_count = column_count;
// element column_fill
var column_fill = (function (property) {
    _inherits(column_fill, property);
    function column_fill(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_fill.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_fill);
        this.wzElement = "column_fill";
    }
    return column_fill;
})(property);


md.column_fill = column_fill;
// element column_gap
var column_gap = (function (property) {
    _inherits(column_gap, property);
    function column_gap(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_gap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_gap);
        this.wzElement = "column_gap";
    }
    return column_gap;
})(property);


md.column_gap = column_gap;
// element column_rule
var column_rule = (function (property) {
    _inherits(column_rule, property);
    function column_rule(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_rule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_rule);
        this.wzElement = "column_rule";
    }
    return column_rule;
})(property);


md.column_rule = column_rule;
// element column_rule_color
var column_rule_color = (function (property) {
    _inherits(column_rule_color, property);
    function column_rule_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_rule_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_rule_color);
        this.wzElement = "column_rule_color";
    }
    return column_rule_color;
})(property);


md.column_rule_color = column_rule_color;
// element column_rule_style
var column_rule_style = (function (property) {
    _inherits(column_rule_style, property);
    function column_rule_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_rule_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_rule_style);
        this.wzElement = "column_rule_style";
    }
    return column_rule_style;
})(property);


md.column_rule_style = column_rule_style;
// element column_rule_width
var column_rule_width = (function (property) {
    _inherits(column_rule_width, property);
    function column_rule_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_rule_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_rule_width);
        this.wzElement = "column_rule_width";
    }
    return column_rule_width;
})(property);


md.column_rule_width = column_rule_width;
// element column_span
var column_span = (function (property) {
    _inherits(column_span, property);
    function column_span(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_span.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_span);
        this.wzElement = "column_span";
    }
    return column_span;
})(property);


md.column_span = column_span;
// element column_width
var column_width = (function (property) {
    _inherits(column_width, property);
    function column_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(column_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column_width);
        this.wzElement = "column_width";
    }
    return column_width;
})(property);


md.column_width = column_width;
// element content
var content = (function (property) {
    _inherits(content, property);
    function content(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(content.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, content);
        this.wzElement = "content";
    }
    return content;
})(property);


md.content = content;
// element counter_increment
var counter_increment = (function (property) {
    _inherits(counter_increment, property);
    function counter_increment(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(counter_increment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, counter_increment);
        this.wzElement = "counter_increment";
    }
    return counter_increment;
})(property);


md.counter_increment = counter_increment;
// element counter_reset
var counter_reset = (function (property) {
    _inherits(counter_reset, property);
    function counter_reset(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(counter_reset.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, counter_reset);
        this.wzElement = "counter_reset";
    }
    return counter_reset;
})(property);


md.counter_reset = counter_reset;
// element cue_after
var cue_after = (function (property) {
    _inherits(cue_after, property);
    function cue_after(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(cue_after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, cue_after);
        this.wzElement = "cue_after";
    }
    return cue_after;
})(property);


md.cue_after = cue_after;
// element cue_before
var cue_before = (function (property) {
    _inherits(cue_before, property);
    function cue_before(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(cue_before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, cue_before);
        this.wzElement = "cue_before";
    }
    return cue_before;
})(property);


md.cue_before = cue_before;
// element cue
var cue = (function (property) {
    _inherits(cue, property);
    function cue(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(cue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, cue);
        this.wzElement = "cue";
    }
    return cue;
})(property);


md.cue = cue;
// element cursor
var cursor = (function (property) {
    _inherits(cursor, property);
    function cursor(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(cursor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, cursor);
        this.wzElement = "cursor";
    }
    return cursor;
})(property);


md.cursor = cursor;
// element direction
var direction = (function (property) {
    _inherits(direction, property);
    function direction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(direction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, direction);
        this.wzElement = "direction";
    }
    return direction;
})(property);


md.direction = direction;
// element display
var display = (function (property) {
    _inherits(display, property);
    function display(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(display.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, display);
        this.wzElement = "display";
    }
    return display;
})(property);


md.display = display;
// element elevation
var elevation = (function (property) {
    _inherits(elevation, property);
    function elevation(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(elevation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, elevation);
        this.wzElement = "elevation";
    }
    return elevation;
})(property);


md.elevation = elevation;
// element empty_cells
var empty_cells = (function (property) {
    _inherits(empty_cells, property);
    function empty_cells(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(empty_cells.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, empty_cells);
        this.wzElement = "empty_cells";
    }
    return empty_cells;
})(property);


md.empty_cells = empty_cells;
// element filter
var filter = (function (property) {
    _inherits(filter, property);
    function filter(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(filter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, filter);
        this.wzElement = "filter";
    }
    return filter;
})(property);


md.filter = filter;
// element flex
var flex = (function (property) {
    _inherits(flex, property);
    function flex(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex);
        this.wzElement = "flex";
    }
    return flex;
})(property);


md.flex = flex;
// element flex_basis
var flex_basis = (function (property) {
    _inherits(flex_basis, property);
    function flex_basis(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_basis.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_basis);
        this.wzElement = "flex_basis";
    }
    return flex_basis;
})(property);


md.flex_basis = flex_basis;
// element flex_direction
var flex_direction = (function (property) {
    _inherits(flex_direction, property);
    function flex_direction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_direction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_direction);
        this.wzElement = "flex_direction";
    }
    return flex_direction;
})(property);


md.flex_direction = flex_direction;
// element flex_flow
var flex_flow = (function (property) {
    _inherits(flex_flow, property);
    function flex_flow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_flow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_flow);
        this.wzElement = "flex_flow";
    }
    return flex_flow;
})(property);


md.flex_flow = flex_flow;
// element flex_grow
var flex_grow = (function (property) {
    _inherits(flex_grow, property);
    function flex_grow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_grow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_grow);
        this.wzElement = "flex_grow";
    }
    return flex_grow;
})(property);


md.flex_grow = flex_grow;
// element flex_shrink
var flex_shrink = (function (property) {
    _inherits(flex_shrink, property);
    function flex_shrink(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_shrink.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_shrink);
        this.wzElement = "flex_shrink";
    }
    return flex_shrink;
})(property);


md.flex_shrink = flex_shrink;
// element flex_wrap
var flex_wrap = (function (property) {
    _inherits(flex_wrap, property);
    function flex_wrap(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(flex_wrap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, flex_wrap);
        this.wzElement = "flex_wrap";
    }
    return flex_wrap;
})(property);


md.flex_wrap = flex_wrap;
// element xfloat
var xfloat = (function (property) {
    _inherits(xfloat, property);
    function xfloat(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xfloat.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfloat);
        this.wzElement = "xfloat";
    }
    return xfloat;
})(property);


md.xfloat = xfloat;
// element font_family
var font_family = (function (property) {
    _inherits(font_family, property);
    function font_family(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font_family.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font_family);
        this.wzElement = "font_family";
    }
    return font_family;
})(property);


md.font_family = font_family;
// element font_size
var font_size = (function (property) {
    _inherits(font_size, property);
    function font_size(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font_size.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font_size);
        this.wzElement = "font_size";
    }
    return font_size;
})(property);


md.font_size = font_size;
// element font_style
var font_style = (function (property) {
    _inherits(font_style, property);
    function font_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font_style);
        this.wzElement = "font_style";
    }
    return font_style;
})(property);


md.font_style = font_style;
// element font_variant
var font_variant = (function (property) {
    _inherits(font_variant, property);
    function font_variant(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font_variant.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font_variant);
        this.wzElement = "font_variant";
    }
    return font_variant;
})(property);


md.font_variant = font_variant;
// element font_weight
var font_weight = (function (property) {
    _inherits(font_weight, property);
    function font_weight(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font_weight.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font_weight);
        this.wzElement = "font_weight";
    }
    return font_weight;
})(property);


md.font_weight = font_weight;
// element font
var font = (function (property) {
    _inherits(font, property);
    function font(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(font.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font);
        this.wzElement = "font";
    }
    return font;
})(property);


md.font = font;
// element hanging_punctuation
var hanging_punctuation = (function (property) {
    _inherits(hanging_punctuation, property);
    function hanging_punctuation(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(hanging_punctuation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hanging_punctuation);
        this.wzElement = "hanging_punctuation";
    }
    return hanging_punctuation;
})(property);


md.hanging_punctuation = hanging_punctuation;
// element height
var height = (function (property) {
    _inherits(height, property);
    function height(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, height);
        this.wzElement = "height";
    }
    return height;
})(property);


md.height = height;
// element hyphens
var hyphens = (function (property) {
    _inherits(hyphens, property);
    function hyphens(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(hyphens.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hyphens);
        this.wzElement = "hyphens";
    }
    return hyphens;
})(property);


md.hyphens = hyphens;
// element isolation
var isolation = (function (property) {
    _inherits(isolation, property);
    function isolation(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(isolation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, isolation);
        this.wzElement = "isolation";
    }
    return isolation;
})(property);


md.isolation = isolation;
// element justify_content
var justify_content = (function (property) {
    _inherits(justify_content, property);
    function justify_content(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(justify_content.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, justify_content);
        this.wzElement = "justify_content";
    }
    return justify_content;
})(property);


md.justify_content = justify_content;
// element left
var left = (function (property) {
    _inherits(left, property);
    function left(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, left);
        this.wzElement = "left";
    }
    return left;
})(property);


md.left = left;
// element letter_spacing
var letter_spacing = (function (property) {
    _inherits(letter_spacing, property);
    function letter_spacing(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(letter_spacing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, letter_spacing);
        this.wzElement = "letter_spacing";
    }
    return letter_spacing;
})(property);


md.letter_spacing = letter_spacing;
// element line_break
var line_break = (function (property) {
    _inherits(line_break, property);
    function line_break(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(line_break.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, line_break);
        this.wzElement = "line_break";
    }
    return line_break;
})(property);


md.line_break = line_break;
// element line_height
var line_height = (function (property) {
    _inherits(line_height, property);
    function line_height(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(line_height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, line_height);
        this.wzElement = "line_height";
    }
    return line_height;
})(property);


md.line_height = line_height;
// element list_style_image
var list_style_image = (function (property) {
    _inherits(list_style_image, property);
    function list_style_image(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(list_style_image.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, list_style_image);
        this.wzElement = "list_style_image";
    }
    return list_style_image;
})(property);


md.list_style_image = list_style_image;
// element list_style_position
var list_style_position = (function (property) {
    _inherits(list_style_position, property);
    function list_style_position(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(list_style_position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, list_style_position);
        this.wzElement = "list_style_position";
    }
    return list_style_position;
})(property);


md.list_style_position = list_style_position;
// element list_style_type
var list_style_type = (function (property) {
    _inherits(list_style_type, property);
    function list_style_type(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(list_style_type.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, list_style_type);
        this.wzElement = "list_style_type";
    }
    return list_style_type;
})(property);


md.list_style_type = list_style_type;
// element list_style
var list_style = (function (property) {
    _inherits(list_style, property);
    function list_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(list_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, list_style);
        this.wzElement = "list_style";
    }
    return list_style;
})(property);


md.list_style = list_style;
// element margin_right
var margin_right = (function (property) {
    _inherits(margin_right, property);
    function margin_right(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(margin_right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin_right);
        this.wzElement = "margin_right";
    }
    return margin_right;
})(property);


md.margin_right = margin_right;
// element margin_top
var margin_top = (function (property) {
    _inherits(margin_top, property);
    function margin_top(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(margin_top.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin_top);
        this.wzElement = "margin_top";
    }
    return margin_top;
})(property);


md.margin_top = margin_top;
// element margin_bottom
var margin_bottom = (function (property) {
    _inherits(margin_bottom, property);
    function margin_bottom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(margin_bottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin_bottom);
        this.wzElement = "margin_bottom";
    }
    return margin_bottom;
})(property);


md.margin_bottom = margin_bottom;
// element margin_left
var margin_left = (function (property) {
    _inherits(margin_left, property);
    function margin_left(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(margin_left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin_left);
        this.wzElement = "margin_left";
    }
    return margin_left;
})(property);


md.margin_left = margin_left;
// element margin
var margin = (function (property) {
    _inherits(margin, property);
    function margin(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(margin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin);
        this.wzElement = "margin";
    }
    return margin;
})(property);


md.margin = margin;
// element max_height
var max_height = (function (property) {
    _inherits(max_height, property);
    function max_height(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(max_height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, max_height);
        this.wzElement = "max_height";
    }
    return max_height;
})(property);


md.max_height = max_height;
// element max_width
var max_width = (function (property) {
    _inherits(max_width, property);
    function max_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(max_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, max_width);
        this.wzElement = "max_width";
    }
    return max_width;
})(property);


md.max_width = max_width;
// element min_height
var min_height = (function (property) {
    _inherits(min_height, property);
    function min_height(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(min_height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, min_height);
        this.wzElement = "min_height";
    }
    return min_height;
})(property);


md.min_height = min_height;
// element min_width
var min_width = (function (property) {
    _inherits(min_width, property);
    function min_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(min_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, min_width);
        this.wzElement = "min_width";
    }
    return min_width;
})(property);


md.min_width = min_width;
// element mix_blend_mode
var mix_blend_mode = (function (property) {
    _inherits(mix_blend_mode, property);
    function mix_blend_mode(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(mix_blend_mode.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, mix_blend_mode);
        this.wzElement = "mix_blend_mode";
    }
    return mix_blend_mode;
})(property);


md.mix_blend_mode = mix_blend_mode;
// element nav_up
var nav_up = (function (property) {
    _inherits(nav_up, property);
    function nav_up(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(nav_up.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nav_up);
        this.wzElement = "nav_up";
    }
    return nav_up;
})(property);


md.nav_up = nav_up;
// element nav_down
var nav_down = (function (property) {
    _inherits(nav_down, property);
    function nav_down(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(nav_down.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nav_down);
        this.wzElement = "nav_down";
    }
    return nav_down;
})(property);


md.nav_down = nav_down;
// element nav_left
var nav_left = (function (property) {
    _inherits(nav_left, property);
    function nav_left(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(nav_left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nav_left);
        this.wzElement = "nav_left";
    }
    return nav_left;
})(property);


md.nav_left = nav_left;
// element nav_right
var nav_right = (function (property) {
    _inherits(nav_right, property);
    function nav_right(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(nav_right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nav_right);
        this.wzElement = "nav_right";
    }
    return nav_right;
})(property);


md.nav_right = nav_right;
// element opacity
var opacity = (function (property) {
    _inherits(opacity, property);
    function opacity(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(opacity.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, opacity);
        this.wzElement = "opacity";
    }
    return opacity;
})(property);


md.opacity = opacity;
// element order
var order = (function (property) {
    _inherits(order, property);
    function order(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(order.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, order);
        this.wzElement = "order";
    }
    return order;
})(property);


md.order = order;
// element orphans
var orphans = (function (property) {
    _inherits(orphans, property);
    function orphans(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(orphans.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, orphans);
        this.wzElement = "orphans";
    }
    return orphans;
})(property);


md.orphans = orphans;
// element outline_color
var outline_color = (function (property) {
    _inherits(outline_color, property);
    function outline_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(outline_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline_color);
        this.wzElement = "outline_color";
    }
    return outline_color;
})(property);


md.outline_color = outline_color;
// element outline_style
var outline_style = (function (property) {
    _inherits(outline_style, property);
    function outline_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(outline_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline_style);
        this.wzElement = "outline_style";
    }
    return outline_style;
})(property);


md.outline_style = outline_style;
// element outline_width
var outline_width = (function (property) {
    _inherits(outline_width, property);
    function outline_width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(outline_width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline_width);
        this.wzElement = "outline_width";
    }
    return outline_width;
})(property);


md.outline_width = outline_width;
// element outline_offset
var outline_offset = (function (property) {
    _inherits(outline_offset, property);
    function outline_offset(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(outline_offset.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline_offset);
        this.wzElement = "outline_offset";
    }
    return outline_offset;
})(property);


md.outline_offset = outline_offset;
// element outline
var outline = (function (property) {
    _inherits(outline, property);
    function outline(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(outline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline);
        this.wzElement = "outline";
    }
    return outline;
})(property);


md.outline = outline;
// element overflow
var overflow = (function (property) {
    _inherits(overflow, property);
    function overflow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(overflow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, overflow);
        this.wzElement = "overflow";
    }
    return overflow;
})(property);


md.overflow = overflow;
// element overflow_wrap
var overflow_wrap = (function (property) {
    _inherits(overflow_wrap, property);
    function overflow_wrap(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(overflow_wrap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, overflow_wrap);
        this.wzElement = "overflow_wrap";
    }
    return overflow_wrap;
})(property);


md.overflow_wrap = overflow_wrap;
// element overflow_x
var overflow_x = (function (property) {
    _inherits(overflow_x, property);
    function overflow_x(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(overflow_x.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, overflow_x);
        this.wzElement = "overflow_x";
    }
    return overflow_x;
})(property);


md.overflow_x = overflow_x;
// element overflow_y
var overflow_y = (function (property) {
    _inherits(overflow_y, property);
    function overflow_y(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(overflow_y.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, overflow_y);
        this.wzElement = "overflow_y";
    }
    return overflow_y;
})(property);


md.overflow_y = overflow_y;
// element padding_top
var padding_top = (function (property) {
    _inherits(padding_top, property);
    function padding_top(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(padding_top.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, padding_top);
        this.wzElement = "padding_top";
    }
    return padding_top;
})(property);


md.padding_top = padding_top;
// element padding_right
var padding_right = (function (property) {
    _inherits(padding_right, property);
    function padding_right(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(padding_right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, padding_right);
        this.wzElement = "padding_right";
    }
    return padding_right;
})(property);


md.padding_right = padding_right;
// element padding_bottom
var padding_bottom = (function (property) {
    _inherits(padding_bottom, property);
    function padding_bottom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(padding_bottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, padding_bottom);
        this.wzElement = "padding_bottom";
    }
    return padding_bottom;
})(property);


md.padding_bottom = padding_bottom;
// element padding_left
var padding_left = (function (property) {
    _inherits(padding_left, property);
    function padding_left(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(padding_left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, padding_left);
        this.wzElement = "padding_left";
    }
    return padding_left;
})(property);


md.padding_left = padding_left;
// element padding
var padding = (function (property) {
    _inherits(padding, property);
    function padding(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(padding.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, padding);
        this.wzElement = "padding";
    }
    return padding;
})(property);


md.padding = padding;
// element page_break_after
var page_break_after = (function (property) {
    _inherits(page_break_after, property);
    function page_break_after(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(page_break_after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, page_break_after);
        this.wzElement = "page_break_after";
    }
    return page_break_after;
})(property);


md.page_break_after = page_break_after;
// element page_break_before
var page_break_before = (function (property) {
    _inherits(page_break_before, property);
    function page_break_before(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(page_break_before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, page_break_before);
        this.wzElement = "page_break_before";
    }
    return page_break_before;
})(property);


md.page_break_before = page_break_before;
// element page_break_inside
var page_break_inside = (function (property) {
    _inherits(page_break_inside, property);
    function page_break_inside(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(page_break_inside.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, page_break_inside);
        this.wzElement = "page_break_inside";
    }
    return page_break_inside;
})(property);


md.page_break_inside = page_break_inside;
// element pause_after
var pause_after = (function (property) {
    _inherits(pause_after, property);
    function pause_after(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pause_after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pause_after);
        this.wzElement = "pause_after";
    }
    return pause_after;
})(property);


md.pause_after = pause_after;
// element pause_before
var pause_before = (function (property) {
    _inherits(pause_before, property);
    function pause_before(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pause_before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pause_before);
        this.wzElement = "pause_before";
    }
    return pause_before;
})(property);


md.pause_before = pause_before;
// element pause
var pause = (function (property) {
    _inherits(pause, property);
    function pause(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pause.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pause);
        this.wzElement = "pause";
    }
    return pause;
})(property);


md.pause = pause;
// element perspective
var perspective = (function (property) {
    _inherits(perspective, property);
    function perspective(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(perspective.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, perspective);
        this.wzElement = "perspective";
    }
    return perspective;
})(property);


md.perspective = perspective;
// element perspective_origin
var perspective_origin = (function (property) {
    _inherits(perspective_origin, property);
    function perspective_origin(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(perspective_origin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, perspective_origin);
        this.wzElement = "perspective_origin";
    }
    return perspective_origin;
})(property);


md.perspective_origin = perspective_origin;
// element pitch_range
var pitch_range = (function (property) {
    _inherits(pitch_range, property);
    function pitch_range(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pitch_range.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pitch_range);
        this.wzElement = "pitch_range";
    }
    return pitch_range;
})(property);


md.pitch_range = pitch_range;
// element pitch
var pitch = (function (property) {
    _inherits(pitch, property);
    function pitch(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pitch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pitch);
        this.wzElement = "pitch";
    }
    return pitch;
})(property);


md.pitch = pitch;
// element play_during
var play_during = (function (property) {
    _inherits(play_during, property);
    function play_during(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(play_during.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, play_during);
        this.wzElement = "play_during";
    }
    return play_during;
})(property);


md.play_during = play_during;
// element pointer_events
var pointer_events = (function (property) {
    _inherits(pointer_events, property);
    function pointer_events(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pointer_events.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pointer_events);
        this.wzElement = "pointer_events";
    }
    return pointer_events;
})(property);


md.pointer_events = pointer_events;
// element position
var position = (function (property) {
    _inherits(position, property);
    function position(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, position);
        this.wzElement = "position";
    }
    return position;
})(property);


md.position = position;
// element quotes
var quotes = (function (property) {
    _inherits(quotes, property);
    function quotes(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(quotes.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, quotes);
        this.wzElement = "quotes";
    }
    return quotes;
})(property);


md.quotes = quotes;
// element resize
var resize = (function (property) {
    _inherits(resize, property);
    function resize(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(resize.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, resize);
        this.wzElement = "resize";
    }
    return resize;
})(property);


md.resize = resize;
// element richness
var richness = (function (property) {
    _inherits(richness, property);
    function richness(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(richness.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, richness);
        this.wzElement = "richness";
    }
    return richness;
})(property);


md.richness = richness;
// element right
var right = (function (property) {
    _inherits(right, property);
    function right(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, right);
        this.wzElement = "right";
    }
    return right;
})(property);


md.right = right;
// element speak_header
var speak_header = (function (property) {
    _inherits(speak_header, property);
    function speak_header(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(speak_header.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, speak_header);
        this.wzElement = "speak_header";
    }
    return speak_header;
})(property);


md.speak_header = speak_header;
// element speak_numeral
var speak_numeral = (function (property) {
    _inherits(speak_numeral, property);
    function speak_numeral(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(speak_numeral.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, speak_numeral);
        this.wzElement = "speak_numeral";
    }
    return speak_numeral;
})(property);


md.speak_numeral = speak_numeral;
// element speak_punctuation
var speak_punctuation = (function (property) {
    _inherits(speak_punctuation, property);
    function speak_punctuation(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(speak_punctuation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, speak_punctuation);
        this.wzElement = "speak_punctuation";
    }
    return speak_punctuation;
})(property);


md.speak_punctuation = speak_punctuation;
// element speak
var speak = (function (property) {
    _inherits(speak, property);
    function speak(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(speak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, speak);
        this.wzElement = "speak";
    }
    return speak;
})(property);


md.speak = speak;
// element speech_rate
var speech_rate = (function (property) {
    _inherits(speech_rate, property);
    function speech_rate(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(speech_rate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, speech_rate);
        this.wzElement = "speech_rate";
    }
    return speech_rate;
})(property);


md.speech_rate = speech_rate;
// element stress
var stress = (function (property) {
    _inherits(stress, property);
    function stress(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(stress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stress);
        this.wzElement = "stress";
    }
    return stress;
})(property);


md.stress = stress;
// element tab_size
var tab_size = (function (property) {
    _inherits(tab_size, property);
    function tab_size(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tab_size.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tab_size);
        this.wzElement = "tab_size";
    }
    return tab_size;
})(property);


md.tab_size = tab_size;
// element table_layout
var table_layout = (function (property) {
    _inherits(table_layout, property);
    function table_layout(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(table_layout.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table_layout);
        this.wzElement = "table_layout";
    }
    return table_layout;
})(property);


md.table_layout = table_layout;
// element target_name
var target_name = (function (property) {
    _inherits(target_name, property);
    function target_name(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(target_name.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, target_name);
        this.wzElement = "target_name";
    }
    return target_name;
})(property);


md.target_name = target_name;
// element target_new
var target_new = (function (property) {
    _inherits(target_new, property);
    function target_new(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(target_new.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, target_new);
        this.wzElement = "target_new";
    }
    return target_new;
})(property);


md.target_new = target_new;
// element target_position
var target_position = (function (property) {
    _inherits(target_position, property);
    function target_position(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(target_position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, target_position);
        this.wzElement = "target_position";
    }
    return target_position;
})(property);


md.target_position = target_position;
// element text_align
var text_align = (function (property) {
    _inherits(text_align, property);
    function text_align(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_align.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_align);
        this.wzElement = "text_align";
    }
    return text_align;
})(property);


md.text_align = text_align;
// element text_align_last
var text_align_last = (function (property) {
    _inherits(text_align_last, property);
    function text_align_last(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_align_last.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_align_last);
        this.wzElement = "text_align_last";
    }
    return text_align_last;
})(property);


md.text_align_last = text_align_last;
// element text_decoration
var text_decoration = (function (property) {
    _inherits(text_decoration, property);
    function text_decoration(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_decoration.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_decoration);
        this.wzElement = "text_decoration";
    }
    return text_decoration;
})(property);


md.text_decoration = text_decoration;
// element text_decoration_line
var text_decoration_line = (function (property) {
    _inherits(text_decoration_line, property);
    function text_decoration_line(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_decoration_line.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_decoration_line);
        this.wzElement = "text_decoration_line";
    }
    return text_decoration_line;
})(property);


md.text_decoration_line = text_decoration_line;
// element text_decoration_style
var text_decoration_style = (function (property) {
    _inherits(text_decoration_style, property);
    function text_decoration_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_decoration_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_decoration_style);
        this.wzElement = "text_decoration_style";
    }
    return text_decoration_style;
})(property);


md.text_decoration_style = text_decoration_style;
// element text_decoration_color
var text_decoration_color = (function (property) {
    _inherits(text_decoration_color, property);
    function text_decoration_color(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_decoration_color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_decoration_color);
        this.wzElement = "text_decoration_color";
    }
    return text_decoration_color;
})(property);


md.text_decoration_color = text_decoration_color;
// element text_decoration_skip
var text_decoration_skip = (function (property) {
    _inherits(text_decoration_skip, property);
    function text_decoration_skip(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_decoration_skip.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_decoration_skip);
        this.wzElement = "text_decoration_skip";
    }
    return text_decoration_skip;
})(property);


md.text_decoration_skip = text_decoration_skip;
// element text_indent
var text_indent = (function (property) {
    _inherits(text_indent, property);
    function text_indent(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_indent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_indent);
        this.wzElement = "text_indent";
    }
    return text_indent;
})(property);


md.text_indent = text_indent;
// element text_overflow
var text_overflow = (function (property) {
    _inherits(text_overflow, property);
    function text_overflow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_overflow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_overflow);
        this.wzElement = "text_overflow";
    }
    return text_overflow;
})(property);


md.text_overflow = text_overflow;
// element text_shadow
var text_shadow = (function (property) {
    _inherits(text_shadow, property);
    function text_shadow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_shadow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_shadow);
        this.wzElement = "text_shadow";
    }
    return text_shadow;
})(property);


md.text_shadow = text_shadow;
// element text_transform
var text_transform = (function (property) {
    _inherits(text_transform, property);
    function text_transform(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_transform.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_transform);
        this.wzElement = "text_transform";
    }
    return text_transform;
})(property);


md.text_transform = text_transform;
// element text_underline_position
var text_underline_position = (function (property) {
    _inherits(text_underline_position, property);
    function text_underline_position(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(text_underline_position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text_underline_position);
        this.wzElement = "text_underline_position";
    }
    return text_underline_position;
})(property);


md.text_underline_position = text_underline_position;
// element touch_action
var touch_action = (function (property) {
    _inherits(touch_action, property);
    function touch_action(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(touch_action.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, touch_action);
        this.wzElement = "touch_action";
    }
    return touch_action;
})(property);


md.touch_action = touch_action;
// element transform
var transform = (function (property) {
    _inherits(transform, property);
    function transform(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transform.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transform);
        this.wzElement = "transform";
    }
    return transform;
})(property);


md.transform = transform;
// element transform_origin
var transform_origin = (function (property) {
    _inherits(transform_origin, property);
    function transform_origin(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transform_origin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transform_origin);
        this.wzElement = "transform_origin";
    }
    return transform_origin;
})(property);


md.transform_origin = transform_origin;
// element transform_style
var transform_style = (function (property) {
    _inherits(transform_style, property);
    function transform_style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transform_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transform_style);
        this.wzElement = "transform_style";
    }
    return transform_style;
})(property);


md.transform_style = transform_style;
// element transition
var transition = (function (property) {
    _inherits(transition, property);
    function transition(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transition.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transition);
        this.wzElement = "transition";
    }
    return transition;
})(property);


md.transition = transition;
// element transition_delay
var transition_delay = (function (property) {
    _inherits(transition_delay, property);
    function transition_delay(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transition_delay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transition_delay);
        this.wzElement = "transition_delay";
    }
    return transition_delay;
})(property);


md.transition_delay = transition_delay;
// element transition_duration
var transition_duration = (function (property) {
    _inherits(transition_duration, property);
    function transition_duration(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transition_duration.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transition_duration);
        this.wzElement = "transition_duration";
    }
    return transition_duration;
})(property);


md.transition_duration = transition_duration;
// element transition_property
var transition_property = (function (property) {
    _inherits(transition_property, property);
    function transition_property(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transition_property.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transition_property);
        this.wzElement = "transition_property";
    }
    return transition_property;
})(property);


md.transition_property = transition_property;
// element transition_timing_function
var transition_timing_function = (function (property) {
    _inherits(transition_timing_function, property);
    function transition_timing_function(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transition_timing_function.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transition_timing_function);
        this.wzElement = "transition_timing_function";
    }
    return transition_timing_function;
})(property);


md.transition_timing_function = transition_timing_function;
// element top
var top = (function (property) {
    _inherits(top, property);
    function top(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(top.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, top);
        this.wzElement = "top";
    }
    return top;
})(property);


md.top = top;
// element unicode_bidi
var unicode_bidi = (function (property) {
    _inherits(unicode_bidi, property);
    function unicode_bidi(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(unicode_bidi.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, unicode_bidi);
        this.wzElement = "unicode_bidi";
    }
    return unicode_bidi;
})(property);


md.unicode_bidi = unicode_bidi;
// element user_select
var user_select = (function (property) {
    _inherits(user_select, property);
    function user_select(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(user_select.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, user_select);
        this.wzElement = "user_select";
    }
    return user_select;
})(property);


md.user_select = user_select;
// element vertical_align
var vertical_align = (function (property) {
    _inherits(vertical_align, property);
    function vertical_align(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(vertical_align.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, vertical_align);
        this.wzElement = "vertical_align";
    }
    return vertical_align;
})(property);


md.vertical_align = vertical_align;
// element visibility
var visibility = (function (property) {
    _inherits(visibility, property);
    function visibility(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(visibility.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, visibility);
        this.wzElement = "visibility";
    }
    return visibility;
})(property);


md.visibility = visibility;
// element voice_family
var voice_family = (function (property) {
    _inherits(voice_family, property);
    function voice_family(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(voice_family.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, voice_family);
        this.wzElement = "voice_family";
    }
    return voice_family;
})(property);


md.voice_family = voice_family;
// element volume
var volume = (function (property) {
    _inherits(volume, property);
    function volume(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(volume.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, volume);
        this.wzElement = "volume";
    }
    return volume;
})(property);


md.volume = volume;
// element white_space
var white_space = (function (property) {
    _inherits(white_space, property);
    function white_space(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(white_space.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, white_space);
        this.wzElement = "white_space";
    }
    return white_space;
})(property);


md.white_space = white_space;
// element widows
var widows = (function (property) {
    _inherits(widows, property);
    function widows(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(widows.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, widows);
        this.wzElement = "widows";
    }
    return widows;
})(property);


md.widows = widows;
// element width
var width = (function (property) {
    _inherits(width, property);
    function width(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, width);
        this.wzElement = "width";
    }
    return width;
})(property);


md.width = width;
// element word_break
var word_break = (function (property) {
    _inherits(word_break, property);
    function word_break(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(word_break.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, word_break);
        this.wzElement = "word_break";
    }
    return word_break;
})(property);


md.word_break = word_break;
// element word_spacing
var word_spacing = (function (property) {
    _inherits(word_spacing, property);
    function word_spacing(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(word_spacing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, word_spacing);
        this.wzElement = "word_spacing";
    }
    return word_spacing;
})(property);


md.word_spacing = word_spacing;
// element word_wrap
var word_wrap = (function (property) {
    _inherits(word_wrap, property);
    function word_wrap(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(word_wrap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, word_wrap);
        this.wzElement = "word_wrap";
    }
    return word_wrap;
})(property);


md.word_wrap = word_wrap;
// element z_index
var z_index = (function (property) {
    _inherits(z_index, property);
    function z_index(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(z_index.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, z_index);
        this.wzElement = "z_index";
    }
    return z_index;
})(property);


md.z_index = z_index;
// element zoom
var zoom = (function (property) {
    _inherits(zoom, property);
    function zoom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(zoom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, zoom);
        this.wzElement = "zoom";
    }
    return zoom;
})(property);


md.zoom = zoom;
// element media
var media = (function (rule) {
    _inherits(media, rule);
    function media(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(media.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, media);
        this.wzElement = "media";
    }
    return media;
})(rule);


md.media = media;
// element keyframes
var keyframes = (function (rule) {
    _inherits(keyframes, rule);
    function keyframes(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(keyframes.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, keyframes);
        this.wzElement = "keyframes";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.vendor = null
    }
    keyframes.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 'v') {
            if (name === 'vendor') {
                this.vendor = child.v; return true;
            }
        }
        ok = md.rule.prototype.loadChild.call(this, child);
        return ok;
    }
    keyframes.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return keyframes;
})(rule);


md.keyframes = keyframes;
// element keyframe
var keyframe = (function (rule) {
    _inherits(keyframe, rule);
    function keyframe(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(keyframe.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, keyframe);
        this.wzElement = "keyframe";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.from = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.to = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this._ = null
    }
    keyframe.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                this._ = child.v; return true;
            }
        }
        if (_l == 2 && _ch == 't') {
            if (name === 'to') {
                this.to = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = md.rule.prototype.loadChild.call(this, child);
        return ok;
    }
    keyframe.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return keyframe;
})(rule);


md.keyframe = keyframe;
// element fontface
var fontface = (function (rule) {
    _inherits(fontface, rule);
    function fontface(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(fontface.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fontface);
        this.wzElement = "fontface";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.font_family = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.src = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.font_stretch = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.font_style = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.font_weight = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.unicode_range = null
    }
    fontface.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 's') {
            if (name === 'src') {
                this.src = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'font-style') {
                this.font_style = child.v; return true;
            }
            else if (name === 'font_style') {
                this.font_style = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'f') {
            if (name === 'font-family') {
                this.font_family = child.v; return true;
            }
            else if (name === 'font_family') {
                this.font_family = child.v; return true;
            }
            else if (name === 'font-weight') {
                this.font_weight = child.v; return true;
            }
            else if (name === 'font_weight') {
                this.font_weight = child.v; return true;
            }
        }
        if (_l == 12 && _ch == 'f') {
            if (name === 'font-stretch') {
                this.font_stretch = child.v; return true;
            }
            else if (name === 'font_stretch') {
                this.font_stretch = child.v; return true;
            }
        }
        if (_l == 13 && _ch == 'u') {
            if (name === 'unicode-range') {
                this.unicode_range = child.v; return true;
            }
            else if (name === 'unicode_range') {
                this.unicode_range = child.v; return true;
            }
        }
        ok = md.rule.prototype.loadChild.call(this, child);
        return ok;
    }
    fontface.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.cssException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return fontface;
})(rule);


md.fontface = fontface;
// element ximport
var ximport = (function (rule) {
    _inherits(ximport, rule);
    function ximport(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ximport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ximport);
        this.wzElement = "ximport";
    }
    return ximport;
})(rule);


md.ximport = ximport;
// element include
var include = (function (rule) {
    _inherits(include, rule);
    function include(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(include.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, include);
        this.wzElement = "include";
    }
    return include;
})(rule);


md.include = include;
/**
    element comment
     The wzName is the comment text.
*/
var comment = (function (rule) {
    _inherits(comment, rule);
    function comment(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    return comment;
})(rule);


md.comment = comment;
md.__tagElementMapping = { '<': 'elementRule', '.': 'classRule', '#': 'idRule', 'font-face': 'fontface', 'import': 'ximport', '-': 'comment', '+': 'otherRuleSelector', '@': 'property', 'align-content': 'align_content', 'aligncontent': 'align_content', 'align-items': 'align_items', 'alignitems': 'align_items', 'align-self': 'align_self', 'alignself': 'align_self', 'animation-delay': 'animation_delay', 'animationdelay': 'animation_delay', 'animation-direction': 'animation_direction', 'animationdirection': 'animation_direction', 'animation-duration': 'animation_duration', 'animationduration': 'animation_duration', 'animation-fill-mode': 'animation_fill_mode', 'animationfillmode': 'animation_fill_mode', 'animation-iteration-count': 'animation_iteration_count', 'animationiterationcount': 'animation_iteration_count', 'animation-name': 'animation_name', 'animationname': 'animation_name', 'animation-play-state': 'animation_play_state', 'animationplaystate': 'animation_play_state', 'animation-timing-function': 'animation_timing_function', 'animationtimingfunction': 'animation_timing_function', 'background-attachment': 'background_attachment', 'backgroundattachment': 'background_attachment', 'background-color': 'background_color', 'backgroundcolor': 'background_color', 'background-image': 'background_image', 'backgroundimage': 'background_image', 'background-position': 'background_position', 'backgroundposition': 'background_position', 'background-repeat': 'background_repeat', 'backgroundrepeat': 'background_repeat', 'background-blend-mode': 'background_blend_mode', 'backgroundblendmode': 'background_blend_mode', 'background-clip': 'background_clip', 'backgroundclip': 'background_clip', 'background-origin': 'background_origin', 'backgroundorigin': 'background_origin', 'background-size': 'background_size', 'backgroundsize': 'background_size', 'backface-visibility': 'backface_visibility', 'backfacevisibility': 'backface_visibility', 'border-collapse': 'border_collapse', 'bordercollapse': 'border_collapse', 'border-color': 'border_color', 'bordercolor': 'border_color', 'border-spacing': 'border_spacing', 'borderspacing': 'border_spacing', 'border-style': 'border_style', 'borderstyle': 'border_style', 'border-top': 'border_top', 'bordertop': 'border_top', 'border-right': 'border_right', 'borderright': 'border_right', 'border-bottom': 'border_bottom', 'borderbottom': 'border_bottom', 'border-left': 'border_left', 'borderleft': 'border_left', 'border-top-color': 'border_top_color', 'bordertopcolor': 'border_top_color', 'border-right-color': 'border_right_color', 'borderrightcolor': 'border_right_color', 'border-bottom-color': 'border_bottom_color', 'borderbottomcolor': 'border_bottom_color', 'border-left-color': 'border_left_color', 'borderleftcolor': 'border_left_color', 'border-top-style': 'border_top_style', 'bordertopstyle': 'border_top_style', 'border-right-style': 'border_right_style', 'borderrightstyle': 'border_right_style', 'border-bottom-style': 'border_bottom_style', 'borderbottomstyle': 'border_bottom_style', 'border-left-style': 'border_left_style', 'borderleftstyle': 'border_left_style', 'border-top-width': 'border_top_width', 'bordertopwidth': 'border_top_width', 'border-right-width': 'border_right_width', 'borderrightwidth': 'border_right_width', 'border-bottom-width': 'border_bottom_width', 'borderbottomwidth': 'border_bottom_width', 'border-left-width': 'border_left_width', 'borderleftwidth': 'border_left_width', 'border-width': 'border_width', 'borderwidth': 'border_width', 'border-radius': 'border_radius', 'borderradius': 'border_radius', 'border-top-left-radius': 'border_top_left_radius', 'bordertopleftradius': 'border_top_left_radius', 'border-top-right-radius': 'border_top_right_radius', 'bordertoprightradius': 'border_top_right_radius', 'border-bottom-left-radius': 'border_bottom_left_radius', 'borderbottomleftradius': 'border_bottom_left_radius', 'border-bottom-right-radius': 'border_bottom_right_radius', 'borderbottomrightradius': 'border_bottom_right_radius', 'border-image': 'border_image', 'borderimage': 'border_image', 'border-image-outset': 'border_image_outset', 'borderimageoutset': 'border_image_outset', 'border-image-repeat': 'border_image_repeat', 'borderimagerepeat': 'border_image_repeat', 'border-image-source': 'border_image_source', 'borderimagesource': 'border_image_source', 'border-image-slice': 'border_image_slice', 'borderimageslice': 'border_image_slice', 'border-image-width': 'border_image_width', 'borderimagewidth': 'border_image_width', 'box-sizing': 'box_sizing', 'boxsizing': 'box_sizing', 'box-decoration-break': 'box_decoration_break', 'boxdecorationbreak': 'box_decoration_break', 'box-shadow': 'box_shadow', 'boxshadow': 'box_shadow', 'break-after': 'break_after', 'breakafter': 'break_after', 'break-before': 'break_before', 'breakbefore': 'break_before', 'break-inside': 'break_inside', 'breakinside': 'break_inside', 'caption-side': 'caption_side', 'captionside': 'caption_side', 'column-count': 'column_count', 'columncount': 'column_count', 'column-fill': 'column_fill', 'columnfill': 'column_fill', 'column-gap': 'column_gap', 'columngap': 'column_gap', 'column-rule': 'column_rule', 'columnrule': 'column_rule', 'column-rule-color': 'column_rule_color', 'columnrulecolor': 'column_rule_color', 'column-rule-style': 'column_rule_style', 'columnrulestyle': 'column_rule_style', 'column-rule-width': 'column_rule_width', 'columnrulewidth': 'column_rule_width', 'column-span': 'column_span', 'columnspan': 'column_span', 'column-width': 'column_width', 'columnwidth': 'column_width', 'counter-increment': 'counter_increment', 'counterincrement': 'counter_increment', 'counter-reset': 'counter_reset', 'counterreset': 'counter_reset', 'cue-after': 'cue_after', 'cueafter': 'cue_after', 'cue-before': 'cue_before', 'cuebefore': 'cue_before', 'empty-cells': 'empty_cells', 'emptycells': 'empty_cells', 'flex-basis': 'flex_basis', 'flexbasis': 'flex_basis', 'flex-direction': 'flex_direction', 'flexdirection': 'flex_direction', 'flex-flow': 'flex_flow', 'flexflow': 'flex_flow', 'flex-grow': 'flex_grow', 'flexgrow': 'flex_grow', 'flex-shrink': 'flex_shrink', 'flexshrink': 'flex_shrink', 'flex-wrap': 'flex_wrap', 'flexwrap': 'flex_wrap', 'float': 'xfloat', 'font-family': 'font_family', 'fontfamily': 'font_family', 'font-size': 'font_size', 'fontsize': 'font_size', 'font-style': 'font_style', 'fontstyle': 'font_style', 'font-variant': 'font_variant', 'fontvariant': 'font_variant', 'font-weight': 'font_weight', 'fontweight': 'font_weight', 'hanging-punctuation': 'hanging_punctuation', 'hangingpunctuation': 'hanging_punctuation', 'justify-content': 'justify_content', 'justifycontent': 'justify_content', 'letter-spacing': 'letter_spacing', 'letterspacing': 'letter_spacing', 'line-break': 'line_break', 'linebreak': 'line_break', 'line-height': 'line_height', 'lineheight': 'line_height', 'list-style-image': 'list_style_image', 'liststyleimage': 'list_style_image', 'list-style-position': 'list_style_position', 'liststyleposition': 'list_style_position', 'list-style-type': 'list_style_type', 'liststyletype': 'list_style_type', 'list-style': 'list_style', 'liststyle': 'list_style', 'margin-right': 'margin_right', 'marginright': 'margin_right', 'margin-top': 'margin_top', 'margintop': 'margin_top', 'margin-bottom': 'margin_bottom', 'marginbottom': 'margin_bottom', 'margin-left': 'margin_left', 'marginleft': 'margin_left', 'max-height': 'max_height', 'maxheight': 'max_height', 'max-width': 'max_width', 'maxwidth': 'max_width', 'min-height': 'min_height', 'minheight': 'min_height', 'min-width': 'min_width', 'minwidth': 'min_width', 'mix-blend-mode': 'mix_blend_mode', 'mixblendmode': 'mix_blend_mode', 'nav-up': 'nav_up', 'navup': 'nav_up', 'nav-down': 'nav_down', 'navdown': 'nav_down', 'nav-left': 'nav_left', 'navleft': 'nav_left', 'nav-right': 'nav_right', 'navright': 'nav_right', 'outline-color': 'outline_color', 'outlinecolor': 'outline_color', 'outline-style': 'outline_style', 'outlinestyle': 'outline_style', 'outline-width': 'outline_width', 'outlinewidth': 'outline_width', 'outline-offset': 'outline_offset', 'outlineoffset': 'outline_offset', 'overflow-wrap': 'overflow_wrap', 'overflowwrap': 'overflow_wrap', 'overflow-x': 'overflow_x', 'overflowx': 'overflow_x', 'overflow-y': 'overflow_y', 'overflowy': 'overflow_y', 'padding-top': 'padding_top', 'paddingtop': 'padding_top', 'padding-right': 'padding_right', 'paddingright': 'padding_right', 'padding-bottom': 'padding_bottom', 'paddingbottom': 'padding_bottom', 'padding-left': 'padding_left', 'paddingleft': 'padding_left', 'page-break-after': 'page_break_after', 'pagebreakafter': 'page_break_after', 'page-break-before': 'page_break_before', 'pagebreakbefore': 'page_break_before', 'page-break-inside': 'page_break_inside', 'pagebreakinside': 'page_break_inside', 'pause-after': 'pause_after', 'pauseafter': 'pause_after', 'pause-before': 'pause_before', 'pausebefore': 'pause_before', 'perspective-origin': 'perspective_origin', 'perspectiveorigin': 'perspective_origin', 'pitch-range': 'pitch_range', 'pitchrange': 'pitch_range', 'play-during': 'play_during', 'playduring': 'play_during', 'pointer-events': 'pointer_events', 'pointerevents': 'pointer_events', 'speak-header': 'speak_header', 'speakheader': 'speak_header', 'speak-numeral': 'speak_numeral', 'speaknumeral': 'speak_numeral', 'speak-punctuation': 'speak_punctuation', 'speakpunctuation': 'speak_punctuation', 'speech-rate': 'speech_rate', 'speechrate': 'speech_rate', 'tab-size': 'tab_size', 'tabsize': 'tab_size', 'table-layout': 'table_layout', 'tablelayout': 'table_layout', 'target-name': 'target_name', 'targetname': 'target_name', 'target-new': 'target_new', 'targetnew': 'target_new', 'target-position': 'target_position', 'targetposition': 'target_position', 'text-align': 'text_align', 'textalign': 'text_align', 'text-align-last': 'text_align_last', 'textalignlast': 'text_align_last', 'text-decoration': 'text_decoration', 'textdecoration': 'text_decoration', 'text-decoration-line': 'text_decoration_line', 'textdecorationline': 'text_decoration_line', 'text-decoration-style': 'text_decoration_style', 'textdecorationstyle': 'text_decoration_style', 'text-decoration-color': 'text_decoration_color', 'textdecorationcolor': 'text_decoration_color', 'text-decoration-skip': 'text_decoration_skip', 'textdecorationskip': 'text_decoration_skip', 'text-indent': 'text_indent', 'textindent': 'text_indent', 'text-overflow': 'text_overflow', 'textoverflow': 'text_overflow', 'text-shadow': 'text_shadow', 'textshadow': 'text_shadow', 'text-transform': 'text_transform', 'texttransform': 'text_transform', 'text-underline-position': 'text_underline_position', 'textunderlineposition': 'text_underline_position', 'touch-action': 'touch_action', 'touchaction': 'touch_action', 'transform-origin': 'transform_origin', 'transformorigin': 'transform_origin', 'transform-style': 'transform_style', 'transformstyle': 'transform_style', 'transition-delay': 'transition_delay', 'transitiondelay': 'transition_delay', 'transition-duration': 'transition_duration', 'transitionduration': 'transition_duration', 'transition-property': 'transition_property', 'transitionproperty': 'transition_property', 'transition-timing-function': 'transition_timing_function', 'transitiontimingfunction': 'transition_timing_function', 'unicode-bidi': 'unicode_bidi', 'unicodebidi': 'unicode_bidi', 'user-select': 'user_select', 'userselect': 'user_select', 'vertical-align': 'vertical_align', 'verticalalign': 'vertical_align', 'voice-family': 'voice_family', 'voicefamily': 'voice_family', 'white-space': 'white_space', 'whitespace': 'white_space', 'word-break': 'word_break', 'wordbreak': 'word_break', 'word-spacing': 'word_spacing', 'wordspacing': 'word_spacing', 'word-wrap': 'word_wrap', 'wordwrap': 'word_wrap', 'z-index': 'z_index', 'zindex': 'z_index' };
var cssException = (function () {
    function cssException(message,node,instance) {
        _classCallCheck(this, cssException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        this.stack = new Error().stack;
        this.node = node;
    }
    return cssException;
})();


md.cssException = cssException;
var cssContext = (function () {
    function cssContext() {
        _classCallCheck(this, cssContext);
        this.validationErrors = [];
    }
    cssContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    cssContext.prototype.addError = function(message,node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return cssContext;
})();


md.cssContext = cssContext;
function parsestring(value,defaultValue,node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}

function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}

function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}

function isBoolean(value) {
    return value === 'true' || value === 'false';
}


