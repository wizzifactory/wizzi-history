  module  ids: 1 111
    kind jsfile ids: 2 112
    var a ids: 3 113
    var x = 1 ids: 4 114
    var y ids: 5 115
      {  ids: 6 116
        @ name 'stefi' ids: 7 117
        @ age 58 ids: 8 118
    var fxDouble ids: 9 119
      function  ids: 10 120
        param x ids: 11 121
        return x * 2 ids: 12 122
    var  ids: 13 123
      decl b ids: 14 124
      decl z = 1 ids: 15 125
      decl t ids: 16 126
        {  ids: 17 127
          @ name 'annie' ids: 18 128
          @ age 58 ids: 19 129
      decl fyHalve ids: 20 130
        function  ids: 21 131
          param y ids: 22 132
          return y / 2 ids: 23 133
    function sayHello ids: 24 134
      param name ids: 25 135
      param style ids: 26 136
      if style === 'bold' ids: 27 137
        return 'Hello <b>' + name + '</b>' ids: 28 138
      else  ids: 29 139
        return 'Hello ' + name ids: 30 140
    # call statement ids: 31 141
    _ exec ids: 32 142
      @ argument ids: 33 143
      {  ids: 34 144
        @ property 'hello' ids: 35 145
      [  ids: 36 146
        @ arrayItem1 ids: 37 147
        @ arrayItem2 ids: 38 148
      function  ids: 39 149
        # ... statements ... ids: 40 150
      _ retrieveValue ids: 41 151
        @ argument ids: 42 152
    iife  ids: 43 153
      function  ids: 44 154
        param $ ids: 45 155
        function high ids: 46 156
          param element ids: 47 157
          _ $(element).addClass('highlight') ids: 48 158
      @ jQuery ids: 49 159
    function Animal ids: 50 160
      param kind ids: 51 161
      param legs ids: 52 162
      param actionFunction ids: 53 163
    var obj ids: 54 164
      new Animal ids: 55 165
        @ 'dog' ids: 56 166
        @ 4 ids: 57 167
        function  ids: 58 168
          return 'I bark' ids: 59 169
    # if [ elif [ elif [ ... ]]] [ else ] node statements ids: 60 170
    if condition ids: 61 171
      # statements ids: 62 172
    elif condition ids: 63 173
      # statements ids: 64 174
    else  ids: 65 175
      # statements ids: 66 176
    +  ids: 67 177
    # while node statement ids: 68 178
    while condition ids: 69 179
      # statements ids: 70 180
    +  ids: 71 181
    # do node statement ids: 72 182
    do condition ids: 73 183
      # statements ids: 74 184
    +  ids: 75 185
    # for node statement ids: 76 186
    for js-for-expression ids: 77 187
      # statements ids: 78 188
    +  ids: 79 189
    # foreach node statement ids: 80 190
    foreach item-var in js-expression ids: 81 191
      # statements ids: 82 192
    +  ids: 83 193
    # try/catch node statement ids: 84 194
    try  ids: 85 195
      # statements ids: 86 196
    catch ex ids: 87 197
      # statements ids: 88 198
    finally  ids: 89 199
      # statements ids: 90 200
    +  ids: 91 201
    # throw node statement ids: 92 202
    throw jsExpression ids: 93 203
    class Animal ids: 94 204
      ctor  ids: 95 205
        param kind ids: 96 206
        param legs ids: 97 207
        # ... statements ... ids: 98 208
    class Dog ids: 99 209
      super Animal ids: 100 210
      ctor  ids: 101 211
        param name ids: 102 212
        base 'bark' ids: 103 213
      m run ids: 104 214
        param time ids: 105 215
        param velocity ids: 106 216
        # ... statements ... ids: 107 217
      m getDistanceRun ids: 108 218
        # ... statements ... ids: 109 219
    chalk green commaSeparatedExpressionList ids: 110 220