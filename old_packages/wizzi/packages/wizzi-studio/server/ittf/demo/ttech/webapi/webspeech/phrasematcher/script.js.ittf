module
    kind es6
    
	var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition
    var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList
    var SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent
    
	var phrases
        [ 
            @ 'I love to sing because it\'s fun'
            @ 'where are you going'
            @ 'can I call you tomorrow'
            @ 'why did you talk while I was talking'
            @ 'she enjoys reading books and playing games'
            @ 'where are you going'
            @ 'have a great day'
            @ 'she sells seashells on the seashore'
    
	var phrasePara = document.querySelector('.phrase')
    var resultPara = document.querySelector('.result')
    var diagnosticPara = document.querySelector('.output')
    
	var testBtn = document.querySelector('button')
    
	function randomPhrase
        var number = Math.floor(Math.random() * phrases.length)
        return number
    
	function testSpeech
        
		set testBtn.disabled = true
        set testBtn.textContent = 'Test in progress'
        
		var phrase = phrases[randomPhrase()]
        # To ensure case consistency while checking with the returned output text
        set phrase = phrase.toLowerCase()
        set phrasePara.textContent = phrase
        set resultPara.textContent = 'Right or wrong?'
        set resultPara.style.background = 'rgba(0,0,0,0.2)'
        set diagnosticPara.textContent = '...diagnostic messages'
        
		var grammar = '#JSGF V1.0; grammar phrase; public <phrase> = ' + phrase + ';'
        
		var recognition = new SpeechRecognition()
        var speechRecognitionList = new SpeechGrammarList()
        _ speechRecognitionList.addFromString(grammar, 1)
        set recognition.grammars = speechRecognitionList
        set recognition.lang = 'en-US'
        set recognition.interimResults = false
        set recognition.maxAlternatives = 1
        
		_ recognition.start
        
		set recognition.onresult =
            function 
                param event
                # The SpeechRecognitionEvent results property returns a SpeechRecognitionResultList object
                # The SpeechRecognitionResultList object contains SpeechRecognitionResult objects.
                # It has a getter so it can be accessed like an array
                # The first [0] returns the SpeechRecognitionResult at position 0.
                # Each SpeechRecognitionResult object contains SpeechRecognitionAlternative objects that contain individual results.
                # These also have getters so they can be accessed like arrays.
                # The second [0] returns the SpeechRecognitionAlternative at position 0.
                # We then return the transcript property of the SpeechRecognitionAlternative object
                var speechResult = event.results[0][0].transcript
                set diagnosticPara.textContent = 'Speech received: ' + speechResult + '.'
                if speechResult === phrase
                    set resultPara.textContent = 'I heard the correct phrase!'
                    set resultPara.style.background = 'lime'
                else
                    set resultPara.textContent = 'That didn\'t sound right.'
                    set resultPara.style.background = 'red'
                _ console.log('Confidence: ' + event.results[0][0].confidence)
        
		set recognition.onspeechend
            function 
                _ recognition.stop
                set testBtn.disabled = false
                set testBtn.textContent = 'Start new test'
        
		set recognition.onerror
            function 
                param event
                set testBtn.disabled = false
                set testBtn.textContent = 'Start new test'
                set diagnosticPara.textContent = 'Error occurred in recognition: ' + event.error
        
		set recognition.onaudiostart
            function 
                param event
                # Fired when the user agent has started to capture audio.
                _ console.log('SpeechRecognition.onaudiostart')
        
		set recognition.onaudioend
            function 
                param event
                # Fired when the user agent has finished capturing audio.
                _ console.log('SpeechRecognition.onaudioend')
        
		set recognition.onend
            function 
                param event
                # Fired when the speech recognition service has disconnected.
                _ console.log('SpeechRecognition.onend')
        
		set recognition.onnomatch
            function 
                param event
                # Fired when the speech recognition service returns a final result with no significant recognition. This may involve some degree of recognition, which doesn't meet or exceed the confidence threshold.
                _ console.log('SpeechRecognition.onnomatch')
        
		set recognition.onsoundstart
            function 
                param event
                # Fired when any sound — recognisable speech or not — has been detected.
                _ console.log('SpeechRecognition.onsoundstart')
        
		set recognition.onsoundend
            function 
                param event
                # Fired when any sound — recognisable speech or not — has stopped being detected.
                _ console.log('SpeechRecognition.onsoundend')
        
		set recognition.onspeechstart
            function 
                param event
                # Fired when sound that is recognised by the speech recognition service as speech has been detected.
                _ console.log('SpeechRecognition.onspeechstart')
        
		set recognition.onstart
            function 
                param event
                # Fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition.
                _ console.log('SpeechRecognition.onstart')
    
	_ testBtn.addEventListener('click', testSpeech)
