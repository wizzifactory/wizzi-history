module
    kind react
    var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition
    var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList
    var SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent
    var colors
        [ 
            @ 'aqua'
            @ 'azure'
            @ 'beige'
            @ 'bisque'
            @ 'black'
            @ 'blue'
            @ 'brown'
            @ 'chocolate'
            @ 'coral'
            @ 'crimson'
            @ 'cyan'
            @ 'fuchsia'
            @ 'ghostwhite'
            @ 'gold'
            @ 'goldenrod'
            @ 'gray'
            @ 'green'
            @ 'indigo'
            @ 'ivory'
            @ 'khaki'
            @ 'lavender'
            @ 'lime'
            @ 'linen'
            @ 'magenta'
            @ 'maroon'
            @ 'moccasin'
            @ 'navy'
            @ 'olive'
            @ 'orange'
            @ 'orchid'
            @ 'peru'
            @ 'pink'
            @ 'plum'
            @ 'purple'
            @ 'red'
            @ 'salmon'
            @ 'sienna'
            @ 'silver'
            @ 'snow'
            @ 'tan'
            @ 'teal'
            @ 'thistle'
            @ 'tomato'
            @ 'turquoise'
            @ 'violet'
            @ 'white'
            @ 'yellow'
    var grammar = '#JSGF V1.0; grammar colors; public <color> = ' + colors.join(' | ') + ' ;'
    var recognition = new SpeechRecognition()
    var speechRecognitionList = new SpeechGrammarList()
    _ speechRecognitionList.addFromString(grammar, 1)
    set recognition.grammars = speechRecognitionList
    # recognition.continuous = false;
    set recognition.lang = 'en-US'
    set recognition.interimResults = false
    set recognition.maxAlternatives = 1
    var diagnostic = document.querySelector('.output')
    var bg = document.querySelector('html')
    var hints = document.querySelector('.hints')
    var colorHTML = ''
    _ colors.forEach
        function 
            param v
            param i
            param a
            _ console.log(v, i)
            set colorHTML += '<span style="background-color:' + v + ';"> ' + v + ' </span>'
    set hints.innerHTML = 'Tap/click then say a color to change the background color of the app. Try ' + colorHTML + '.'
    set document.body.onclick =
        function 
            _ recognition.start
            _ console.log('Ready to receive a color command.')
    set recognition.onresult =
        function 
            param event
            # The SpeechRecognitionEvent results property returns a SpeechRecognitionResultList object
            # The SpeechRecognitionResultList object contains SpeechRecognitionResult objects.
            # It has a getter so it can be accessed like an array
            # The [last] returns the SpeechRecognitionResult at the last position.
            # Each SpeechRecognitionResult object contains SpeechRecognitionAlternative objects that contain individual results.
            # These also have getters so they can be accessed like arrays.
            # The [0] returns the SpeechRecognitionAlternative at position 0.
            # We then return the transcript property of the SpeechRecognitionAlternative object
            var last = event.results.length - 1
            var color = event.results[last][0].transcript
            set diagnostic.textContent = 'Result received: ' + color + '.'
            set bg.style.backgroundColor = color
            _ console.log('Confidence: ' + event.results[0][0].confidence)
    set recognition.onspeechend =
        function 
            _ recognition.stop
    set recognition.onnomatch =
        function 
            param event
            set diagnostic.textContent = "I didn't recognise that color."
    set recognition.onerror =
        function 
            param event
            set diagnostic.textContent = 'Error occurred in recognition: ' + event.error
