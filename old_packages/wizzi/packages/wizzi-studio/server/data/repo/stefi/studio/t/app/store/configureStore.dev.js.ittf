$group
	$params &app
	+
	$if app.useApiMiddleware
		import { createStore, applyMiddleware } from 'redux'
		import thunk from 'redux-thunk'
		import api from '../middleware/api'
		import { createLogger } from 'redux-logger'
	$else
		import { createStore } from 'redux'
	import rootReducer from './reducers'
	$if app.useDevTools
		import DevTools from '../containers/DevTools'
	+
	var configureStore
        =>
            param preloadedState
			+
			var store
                _ createStore
                    @ rootReducer
                    @ preloadedState
					$if app.useApiMiddleware
						_ applyMiddleware
							@ thunk
							@ api
							_ createLogger()
					$if app.useDevTools
						_ DevTools.instrument()
			+
			if module.hot
                _ module.hot.accept
                    @ './reducers'
                    =>
                        var nextRootReducer
                            _ require('./reducers')
                                . default
                        _ store.replaceReducer(nextRootReducer)
            return store
	+
	export default configureStore