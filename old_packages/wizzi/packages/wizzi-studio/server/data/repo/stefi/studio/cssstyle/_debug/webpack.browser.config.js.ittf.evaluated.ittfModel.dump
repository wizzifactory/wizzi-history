  module  ids: undefined undefined
    kind jsfile ids: undefined undefined
    var path = require('path') ids: undefined undefined
    var webpack = require('webpack') ids: undefined undefined
    var pack ids: undefined undefined
      {  ids: undefined undefined
        @ name "cssplay" ids: undefined undefined
    var paths ids: undefined undefined
      {  ids: undefined undefined
        @ appSrc path.join(__dirname, 'src') ids: undefined undefined
        @ appIndexJs path.join(__dirname, 'src', 'index') ids: undefined undefined
        @ appBuild path.join(__dirname, 'dist') ids: undefined undefined
        @ nodePaths [] ids: undefined undefined
        @ appNodeModules [] ids: undefined undefined
    set module.exports = ids: undefined undefined
      {  ids: undefined undefined
        @ devtool 'cheap-module-eval-source-map' ids: undefined undefined
        @ entry ids: undefined undefined
          [  ids: undefined undefined
            @ require.resolve('react-dev-utils/webpackHotDevClient') ids: undefined undefined
            @ require.resolve('../polyfills') ids: undefined undefined
            @ paths.appIndexJs ids: undefined undefined
        @ output ids: undefined undefined
          {  ids: undefined undefined
            @ path paths.appBuild ids: undefined undefined
            @ pathinfo true ids: undefined undefined
            @ filename 'bundle.js' ids: undefined undefined
            @ publicPath '/webpack/' + pack.name ids: undefined undefined
        @ resolve ids: undefined undefined
          {  ids: undefined undefined
            @ extensions ['.js', '.json', '.jsx'] ids: undefined undefined
            @ alias ids: undefined undefined
              {  ids: undefined undefined
                @ 'react-native' 'react-native-web' ids: undefined undefined
        @ module ids: undefined undefined
          {  ids: undefined undefined
            @ rules ids: undefined undefined
              [  ids: undefined undefined
                {  ids: undefined undefined
                  @ parser ids: undefined undefined
                    {  ids: undefined undefined
                      @ requireEnsure false ids: undefined undefined
                {  ids: undefined undefined
                  @ test /\.(js|jsx)$/ ids: undefined undefined
                  @ include paths.appSrc ids: undefined undefined
                  @ loader 'babel-loader' ids: undefined undefined
                  @ options ids: undefined undefined
                    {  ids: undefined undefined
                      @ babelrc false ids: undefined undefined
                      @ presets [require.resolve('babel-preset-react-app')] ids: undefined undefined
                      @ cacheDirectory true ids: undefined undefined
        @ plugins ids: undefined undefined
          [  ids: undefined undefined
            new webpack.HotModuleReplacementPlugin() ids: undefined undefined
            new webpack.NoEmitOnErrorsPlugin() ids: undefined undefined