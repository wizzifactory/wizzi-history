/*
    artifact generator: C:\My\wizzi\v6\node_modules\wizzi-legacy-v5\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\v6\node_modules\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Sat, 13 Apr 2019 08:08:44 GMT
*/
'use strict';
// generated by v5-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;
/**
     Schema wide declarations
*/
function isDescendentOf(model, ancestor) {
    if (!model.wzParent) {
        return false;
    }
    if (model.wzParent.wzElement == ancestor) {
        return true;
    }
    return isDescendentOf(model.wzParent, ancestor);
}
var _md = module.exports = {};
var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var jsBase = (function () {
    function jsBase(name, sourceLineInfo) {
        _classCallCheck(this, jsBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    jsBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    jsBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadHistory.getIttfDocumentUri(sourceKey);
    }
    jsBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
            }, true);
    }
    jsBase.prototype.wzVerify = function() {
    }
    jsBase.prototype.wzInitialize = function() {
    }
    jsBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    jsBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    jsBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    jsBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node);
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    jsBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    jsBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this);
        }
        fromColl.splice(index, 1);
    }
    jsBase.prototype.error = function(message, node) {
        throw new _md.jsModelException(message, node, this);
    }
    return jsBase;
})();

_md.jsBase = jsBase;
/**
    element statement
     The base element for all code nodes, and
     a generic code statement that will be emitted as is.
     The indentation will depend to the node depth.
     Inside an html tag means a text node without line feed.
*/
var statement = (function (jsBase) {
    _inherits(statement, jsBase);
    function statement(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(statement.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, statement);
        this.wzElement = "statement";
        // relation statement
        this.statements = [];
    }
    statement.prototype.addStatement = function(name, sourceLineInfo) {
        var retval = new _md.statement(name, sourceLineInfo);
        retval.wzParent = this;
        this.statements.push(retval);
        return retval;
    }
    statement.prototype.getStatement = function(name) {
        var found = null;
        this.statements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    statement.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.statements);
            }
        }
        if (_l == 1 && _ch == '(') {
            if (name === '(') {
                return this.wzLoadToChildColl(child, _md.callOnValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, _md.statement, this.statements);
            }
        }
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, _md.memberAccess, this.statements);
            }
        }
        if (_l == 1 && _ch == ':') {
            if (name === ':') {
                return this.wzLoadToChildColl(child, _md.namedCallParam, this.statements);
            }
        }
        if (_l == 1 && _ch == '<') {
            if (name === '<') {
                return this.wzLoadToChildColl(child, _md.htmlelement, this.statements);
            }
        }
        if (_l == 1 && _ch == '=') {
            if (name === '=') {
                return this.wzLoadToChildColl(child, _md.initValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.jsPropertyOrValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.jsArray, this.statements);
            }
        }
        if (_l == 1 && _ch == '_') {
            if (name === '_') {
                return this.wzLoadToChildColl(child, _md.call, this.statements);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, _md.method, this.statements);
            }
        }
        if (_l == 1 && _ch == 'p') {
            if (name === 'p') {
                return this.wzLoadToChildColl(child, _md.p, this.statements);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.jsObject, this.statements);
            }
        }
        if (_l == 2 && _ch == '!') {
            if (name === '!=') {
                return this.wzLoadToChildColl(child, _md.op_noteq, this.statements);
            }
        }
        if (_l == 2 && _ch == '#') {
            if (name === '##') {
                return this.wzLoadToChildColl(child, _md.commentmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '&') {
            if (name === '&&') {
                return this.wzLoadToChildColl(child, _md.and, this.statements);
            }
        }
        if (_l == 2 && _ch == '+') {
            if (name === '++') {
                return this.wzLoadToChildColl(child, _md.statementmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '.') {
            if (name === '._') {
                return this.wzLoadToChildColl(child, _md.memberCall, this.statements);
            }
            else if (name === '.[') {
                return this.wzLoadToChildColl(child, _md.memberAccessComputed, this.statements);
            }
        }
        if (_l == 2 && _ch == '<') {
            if (name === '<=') {
                return this.wzLoadToChildColl(child, _md.op_le, this.statements);
            }
        }
        if (_l == 2 && _ch == '=') {
            if (name === '==') {
                return this.wzLoadToChildColl(child, _md.op_eq, this.statements);
            }
            else if (name === '=>') {
                return this.wzLoadToChildColl(child, _md.arrowfunction, this.statements);
            }
        }
        if (_l == 2 && _ch == '>') {
            if (name === '>=') {
                return this.wzLoadToChildColl(child, _md.op_ge, this.statements);
            }
        }
        if (_l == 2 && _ch == '@') {
            if (name === '@_') {
                return this.wzLoadToChildColl(child, _md.decoratorCall, this.statements);
            }
        }
        if (_l == 2 && _ch == '_') {
            if (name === '_`') {
                return this.wzLoadToChildColl(child, _md.tagFunctionCall, this.statements);
            }
        }
        if (_l == 2 && _ch == 'd') {
            if (name === 'do') {
                return this.wzLoadToChildColl(child, _md.xdo, this.statements);
            }
        }
        if (_l == 2 && _ch == 'g') {
            if (name === 'gt') {
                return this.wzLoadToChildColl(child, _md.op_gt, this.statements);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'if') {
                return this.wzLoadToChildColl(child, _md.xif, this.statements);
            }
            else if (name === 'it') {
                return this.wzLoadToChildColl(child, _md.it, this.statements);
            }
        }
        if (_l == 2 && _ch == 'j') {
            if (name === 'js') {
                return this.wzLoadToChildColl(child, _md.js, this.statements);
            }
        }
        if (_l == 2 && _ch == 'l') {
            if (name === 'lt') {
                return this.wzLoadToChildColl(child, _md.op_lt, this.statements);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'op') {
                return this.wzLoadToChildColl(child, _md.op_minus, this.statements);
            }
            else if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.on, this.statements);
            }
            else if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.on, this.statements);
            }
            else if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.on, this.statements);
            }
            else if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.on, this.statements);
            }
        }
        if (_l == 2 && _ch == '{') {
            if (name === '{{') {
                return this.wzLoadToChildColl(child, _md.handlebar, this.statements);
            }
        }
        if (_l == 2 && _ch == '|') {
            if (name === '||') {
                return this.wzLoadToChildColl(child, _md.or, this.statements);
            }
        }
        if (_l == 3 && _ch == '!') {
            if (name === '!==') {
                return this.wzLoadToChildColl(child, _md.op_noteq_strict, this.statements);
            }
        }
        if (_l == 3 && _ch == '.') {
            if (name === '...') {
                return this.wzLoadToChildColl(child, _md.jsRest, this.statements);
            }
        }
        if (_l == 3 && _ch == '=') {
            if (name === '===') {
                return this.wzLoadToChildColl(child, _md.op_eq_strict, this.statements);
            }
        }
        if (_l == 3 && _ch == '@') {
            if (name === '@id') {
                return this.wzLoadToChildColl(child, _md.identifier, this.statements);
            }
        }
        if (_l == 3 && _ch == 'c') {
            if (name === 'css') {
                return this.wzLoadToChildColl(child, _md.css, this.statements);
            }
        }
        if (_l == 3 && _ch == 'f') {
            if (name === 'for') {
                return this.wzLoadToChildColl(child, _md.xfor, this.statements);
            }
        }
        if (_l == 3 && _ch == 'g') {
            if (name === 'get') {
                return this.wzLoadToChildColl(child, _md.get, this.statements);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'iif') {
                return this.wzLoadToChildColl(child, _md.iif, this.statements);
            }
        }
        if (_l == 3 && _ch == 'j') {
            if (name === 'jst') {
                return this.wzLoadToChildColl(child, _md.jsonStatementTree, this.statements);
            }
        }
        if (_l == 3 && _ch == 'l') {
            if (name === 'let') {
                return this.wzLoadToChildColl(child, _md.xlet, this.statements);
            }
            else if (name === 'log') {
                return this.wzLoadToChildColl(child, _md.log, this.statements);
            }
        }
        if (_l == 3 && _ch == 'm') {
            if (name === 'mod') {
                return this.wzLoadToChildColl(child, _md.op_mod, this.statements);
            }
        }
        if (_l == 3 && _ch == 'n') {
            if (name === 'not') {
                return this.wzLoadToChildColl(child, _md.not, this.statements);
            }
            else if (name === 'new') {
                return this.wzLoadToChildColl(child, _md.xnew, this.statements);
            }
        }
        if (_l == 3 && _ch == 'o') {
            if (name === 'op!') {
                return this.wzLoadToChildColl(child, _md.not, this.statements);
            }
            else if (name === 'op-') {
                return this.wzLoadToChildColl(child, _md.op_minus, this.statements);
            }
            else if (name === 'op+') {
                return this.wzLoadToChildColl(child, _md.op_plus, this.statements);
            }
            else if (name === 'op*') {
                return this.wzLoadToChildColl(child, _md.op_times, this.statements);
            }
            else if (name === 'op/') {
                return this.wzLoadToChildColl(child, _md.op_div, this.statements);
            }
            else if (name === 'op&') {
                return this.wzLoadToChildColl(child, _md.bit_and, this.statements);
            }
            else if (name === 'op|') {
                return this.wzLoadToChildColl(child, _md.bit_or, this.statements);
            }
            else if (name === 'op^') {
                return this.wzLoadToChildColl(child, _md.op_xor, this.statements);
            }
            else if (name === 'op&') {
                return this.wzLoadToChildColl(child, _md.op_xand, this.statements);
            }
            else if (name === 'op~') {
                return this.wzLoadToChildColl(child, _md.bit_not, this.statements);
            }
            else if (name === 'op>') {
                return this.wzLoadToChildColl(child, _md.op_gt, this.statements);
            }
            else if (name === 'op<') {
                return this.wzLoadToChildColl(child, _md.op_lt, this.statements);
            }
        }
        if (_l == 3 && _ch == 's') {
            if (name === 'set') {
                return this.wzLoadToChildColl(child, _md.set, this.statements);
            }
        }
        if (_l == 3 && _ch == 't') {
            if (name === 'try') {
                return this.wzLoadToChildColl(child, _md.xtry, this.statements);
            }
        }
        if (_l == 3 && _ch == 'v') {
            if (name === 'var') {
                return this.wzLoadToChildColl(child, _md.xvar, this.statements);
            }
        }
        if (_l == 3 && _ch == 'x') {
            if (name === 'xor') {
                return this.wzLoadToChildColl(child, _md.op_xor, this.statements);
            }
        }
        if (_l == 4 && _ch == '`') {
            if (name === '`lit') {
                return this.wzLoadToChildColl(child, _md.template, this.statements);
            }
            else if (name === '`tag') {
                return this.wzLoadToChildColl(child, _md.taggedTemplate, this.statements);
            }
        }
        if (_l == 4 && _ch == 'b') {
            if (name === 'base') {
                return this.wzLoadToChildColl(child, _md.base, this.statements);
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'case') {
                return this.wzLoadToChildColl(child, _md.xcase, this.statements);
            }
            else if (name === 'ctor') {
                return this.wzLoadToChildColl(child, _md.ctor, this.statements);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'decl') {
                return this.wzLoadToChildColl(child, _md.decl, this.statements);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'elif') {
                return this.wzLoadToChildColl(child, _md.elif, this.statements);
            }
            else if (name === 'else') {
                return this.wzLoadToChildColl(child, _md.xelse, this.statements);
            }
            else if (name === 'each') {
                return this.wzLoadToChildColl(child, _md.each, this.statements);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'find') {
                return this.wzLoadToChildColl(child, _md.find, this.statements);
            }
        }
        if (_l == 4 && _ch == 'i') {
            if (name === 'iife') {
                return this.wzLoadToChildColl(child, _md.iife, this.statements);
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'log?') {
                return this.wzLoadToChildColl(child, _md.inspect, this.statements);
            }
        }
        if (_l == 4 && _ch == 'o') {
            if (name === 'op||') {
                return this.wzLoadToChildColl(child, _md.or, this.statements);
            }
            else if (name === 'op&&') {
                return this.wzLoadToChildColl(child, _md.and, this.statements);
            }
            else if (name === 'op==') {
                return this.wzLoadToChildColl(child, _md.op_eq, this.statements);
            }
            else if (name === 'op!=') {
                return this.wzLoadToChildColl(child, _md.op_noteq, this.statements);
            }
            else if (name === 'op**') {
                return this.wzLoadToChildColl(child, _md.op_power, this.statements);
            }
            else if (name === 'op<<') {
                return this.wzLoadToChildColl(child, _md.bit_left_shift, this.statements);
            }
            else if (name === 'op>>') {
                return this.wzLoadToChildColl(child, _md.bit_right_shift, this.statements);
            }
            else if (name === 'op>=') {
                return this.wzLoadToChildColl(child, _md.op_ge, this.statements);
            }
            else if (name === 'op<=') {
                return this.wzLoadToChildColl(child, _md.op_le, this.statements);
            }
        }
        if (_l == 4 && _ch == 'p') {
            if (name === 'plus') {
                return this.wzLoadToChildColl(child, _md.op_plus, this.statements);
            }
            else if (name === 'prop') {
                return this.wzLoadToChildColl(child, _md.prop, this.statements);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'test') {
                return this.wzLoadToChildColl(child, _md.test, this.statements);
            }
            else if (name === 'then') {
                return this.wzLoadToChildColl(child, _md.then, this.statements);
            }
            else if (name === 'type') {
                return this.wzLoadToChildColl(child, _md.type, this.statements);
            }
        }
        if (_l == 4 && _ch == 'v') {
            if (name === 'void') {
                return this.wzLoadToChildColl(child, _md.xvoid, this.statements);
            }
        }
        if (_l == 4 && _ch == 'w') {
            if (name === 'warn') {
                return this.wzLoadToChildColl(child, _md.warn, this.statements);
            }
        }
        if (_l == 4 && _ch == 'x') {
            if (name === 'xand') {
                return this.wzLoadToChildColl(child, _md.op_xand, this.statements);
            }
        }
        if (_l == 5 && _ch == '@') {
            if (name === '@expr') {
                return this.wzLoadToChildColl(child, _md.expressionMember, this.statements);
            }
        }
        if (_l == 5 && _ch == 'a') {
            if (name === 'await') {
                return this.wzLoadToChildColl(child, _md.xawait, this.statements);
            }
            else if (name === 'after') {
                return this.wzLoadToChildColl(child, _md.after, this.statements);
            }
        }
        if (_l == 5 && _ch == 'b') {
            if (name === 'break') {
                return this.wzLoadToChildColl(child, _md.xbreak, this.statements);
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'const') {
                return this.wzLoadToChildColl(child, _md.xconst, this.statements);
            }
            else if (name === 'catch') {
                return this.wzLoadToChildColl(child, _md.xcatch, this.statements);
            }
            else if (name === 'class') {
                return this.wzLoadToChildColl(child, _md.xclass, this.statements);
            }
            else if (name === 'chalk') {
                return this.wzLoadToChildColl(child, _md.chalk, this.statements);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'event') {
                return this.wzLoadToChildColl(child, _md.htmlevent, this.statements);
            }
            else if (name === 'error') {
                return this.wzLoadToChildColl(child, _md.error, this.statements);
            }
        }
        if (_l == 5 && _ch == 'l') {
            if (name === 'label') {
                return this.wzLoadToChildColl(child, _md.label, this.statements);
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'minus') {
                return this.wzLoadToChildColl(child, _md.op_minus, this.statements);
            }
            else if (name === 'macro') {
                return this.wzLoadToChildColl(child, _md.macroExpr, this.statements);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'op===') {
                return this.wzLoadToChildColl(child, _md.op_eq_strict, this.statements);
            }
            else if (name === 'op!==') {
                return this.wzLoadToChildColl(child, _md.op_noteq_strict, this.statements);
            }
            else if (name === 'op>>>') {
                return this.wzLoadToChildColl(child, _md.zero_fill_right_shift, this.statements);
            }
            else if (name === 'oncut') {
                return this.wzLoadToChildColl(child, _md.onCut, this.statements);
            }
            else if (name === 'oncut') {
                return this.wzLoadToChildColl(child, _md.onCut, this.statements);
            }
            else if (name === 'oncut') {
                return this.wzLoadToChildColl(child, _md.onCut, this.statements);
            }
            else if (name === 'oncut') {
                return this.wzLoadToChildColl(child, _md.onCut, this.statements);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'power') {
                return this.wzLoadToChildColl(child, _md.op_power, this.statements);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'react') {
                return this.wzLoadToChildColl(child, _md.reactComponent, this.statements);
            }
            else if (name === 'ready') {
                return this.wzLoadToChildColl(child, _md.ready, this.statements);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'style') {
                return this.wzLoadToChildColl(child, _md.style, this.statements);
            }
            else if (name === 'state') {
                return this.wzLoadToChildColl(child, _md.state, this.statements);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'times') {
                return this.wzLoadToChildColl(child, _md.op_times, this.statements);
            }
            else if (name === 'throw') {
                return this.wzLoadToChildColl(child, _md.xthrow, this.statements);
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'wzvar') {
                return this.wzLoadToChildColl(child, _md.wzVar, this.statements);
            }
            else if (name === 'while') {
                return this.wzLoadToChildColl(child, _md.xwhile, this.statements);
            }
        }
        if (_l == 5 && _ch == 'y') {
            if (name === 'yield') {
                return this.wzLoadToChildColl(child, _md.xyield, this.statements);
            }
        }
        if (_l == 6 && _ch == ':') {
            if (name === ':param') {
                return this.wzLoadToChildColl(child, _md.typeParameterInst, this.statements);
            }
        }
        if (_l == 6 && _ch == '@') {
            if (name === '@param') {
                return this.wzLoadToChildColl(child, _md.htmlParam, this.statements);
            }
        }
        if (_l == 6 && _ch == 'b') {
            if (name === 'before') {
                return this.wzLoadToChildColl(child, _md.before, this.statements);
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'concat') {
                return this.wzLoadToChildColl(child, _md.concat, this.statements);
            }
        }
        if (_l == 6 && _ch == 'd') {
            if (name === 'divide') {
                return this.wzLoadToChildColl(child, _md.op_div, this.statements);
            }
            else if (name === 'delete') {
                return this.wzLoadToChildColl(child, _md.xdelete, this.statements);
            }
        }
        if (_l == 6 && _ch == 'e') {
            if (name === 'export') {
                return this.wzLoadToChildColl(child, _md.xexport, this.statements);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'filter') {
                return this.wzLoadToChildColl(child, _md.filter, this.statements);
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'html_f') {
                return this.wzLoadToChildColl(child, _md.html_f, this.statements);
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'import') {
                return this.wzLoadToChildColl(child, _md.ximport, this.statements);
            }
        }
        if (_l == 6 && _ch == 'm') {
            if (name === 'module') {
                return this.wzLoadToChildColl(child, _md.module, this.statements);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'oncopy') {
                return this.wzLoadToChildColl(child, _md.onCopy, this.statements);
            }
            else if (name === 'onblur') {
                return this.wzLoadToChildColl(child, _md.onBlur, this.statements);
            }
            else if (name === 'ondrag') {
                return this.wzLoadToChildColl(child, _md.onDrag, this.statements);
            }
            else if (name === 'ondrop') {
                return this.wzLoadToChildColl(child, _md.onDrop, this.statements);
            }
            else if (name === 'onplay') {
                return this.wzLoadToChildColl(child, _md.onPlay, this.statements);
            }
            else if (name === 'onload') {
                return this.wzLoadToChildColl(child, _md.onLoad, this.statements);
            }
            else if (name === 'oncopy') {
                return this.wzLoadToChildColl(child, _md.onCopy, this.statements);
            }
            else if (name === 'onblur') {
                return this.wzLoadToChildColl(child, _md.onBlur, this.statements);
            }
            else if (name === 'ondrag') {
                return this.wzLoadToChildColl(child, _md.onDrag, this.statements);
            }
            else if (name === 'ondrop') {
                return this.wzLoadToChildColl(child, _md.onDrop, this.statements);
            }
            else if (name === 'onplay') {
                return this.wzLoadToChildColl(child, _md.onPlay, this.statements);
            }
            else if (name === 'onload') {
                return this.wzLoadToChildColl(child, _md.onLoad, this.statements);
            }
            else if (name === 'oncopy') {
                return this.wzLoadToChildColl(child, _md.onCopy, this.statements);
            }
            else if (name === 'onblur') {
                return this.wzLoadToChildColl(child, _md.onBlur, this.statements);
            }
            else if (name === 'ondrag') {
                return this.wzLoadToChildColl(child, _md.onDrag, this.statements);
            }
            else if (name === 'ondrop') {
                return this.wzLoadToChildColl(child, _md.onDrop, this.statements);
            }
            else if (name === 'onplay') {
                return this.wzLoadToChildColl(child, _md.onPlay, this.statements);
            }
            else if (name === 'onload') {
                return this.wzLoadToChildColl(child, _md.onLoad, this.statements);
            }
            else if (name === 'oncopy') {
                return this.wzLoadToChildColl(child, _md.onCopy, this.statements);
            }
            else if (name === 'onblur') {
                return this.wzLoadToChildColl(child, _md.onBlur, this.statements);
            }
            else if (name === 'ondrag') {
                return this.wzLoadToChildColl(child, _md.onDrag, this.statements);
            }
            else if (name === 'ondrop') {
                return this.wzLoadToChildColl(child, _md.onDrop, this.statements);
            }
            else if (name === 'onplay') {
                return this.wzLoadToChildColl(child, _md.onPlay, this.statements);
            }
            else if (name === 'onload') {
                return this.wzLoadToChildColl(child, _md.onLoad, this.statements);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'reduce') {
                return this.wzLoadToChildColl(child, _md.reduce, this.statements);
            }
            else if (name === 'return') {
                return this.wzLoadToChildColl(child, _md.xreturn, this.statements);
            }
            else if (name === 'reactf') {
                return this.wzLoadToChildColl(child, _md.reactFunction, this.statements);
            }
            else if (name === 'render') {
                return this.wzLoadToChildColl(child, _md.render, this.statements);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'switch') {
                return this.wzLoadToChildColl(child, _md.xswitch, this.statements);
            }
        }
        if (_l == 6 && _ch == 't') {
            if (name === 'tohtml') {
                return this.wzLoadToChildColl(child, _md.tohtml, this.statements);
            }
        }
        if (_l == 6 && _ch == 'w') {
            if (name === 'wz-var') {
                return this.wzLoadToChildColl(child, _md.wzVar, this.statements);
            }
            else if (name === 'wziife') {
                return this.wzLoadToChildColl(child, _md.wzIife, this.statements);
            }
        }
        if (_l == 7 && _ch == ':') {
            if (name === ':import') {
                return this.wzLoadToChildColl(child, _md.typeImport, this.statements);
            }
            else if (name === ':export') {
                return this.wzLoadToChildColl(child, _md.typeExport, this.statements);
            }
        }
        if (_l == 7 && _ch == '@') {
            if (name === '@filter') {
                return this.wzLoadToChildColl(child, _md.htmlFilter, this.statements);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'async=>') {
                return this.wzLoadToChildColl(child, _md.asyncarrowfunction, this.statements);
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'default') {
                return this.wzLoadToChildColl(child, _md.xdefault, this.statements);
            }
            else if (name === 'doctype') {
                return this.wzLoadToChildColl(child, _md.doctype, this.statements);
            }
        }
        if (_l == 7 && _ch == 'f') {
            if (name === 'foreach') {
                return this.wzLoadToChildColl(child, _md.foreach, this.statements);
            }
            else if (name === 'finally') {
                return this.wzLoadToChildColl(child, _md.xfinally, this.statements);
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'html_ng') {
                return this.wzLoadToChildColl(child, _md.html_ng, this.statements);
            }
            else if (name === 'html_hb') {
                return this.wzLoadToChildColl(child, _md.html_hb, this.statements);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'itasync') {
                return this.wzLoadToChildColl(child, _md.itAsync, this.statements);
            }
        }
        if (_l == 7 && _ch == 'o') {
            if (name === 'onpaste') {
                return this.wzLoadToChildColl(child, _md.onPaste, this.statements);
            }
            else if (name === 'onkeyup') {
                return this.wzLoadToChildColl(child, _md.onKeyUp, this.statements);
            }
            else if (name === 'onfocus') {
                return this.wzLoadToChildColl(child, _md.onFocus, this.statements);
            }
            else if (name === 'oninput') {
                return this.wzLoadToChildColl(child, _md.onInput, this.statements);
            }
            else if (name === 'onclick') {
                return this.wzLoadToChildColl(child, _md.onClick, this.statements);
            }
            else if (name === 'onwheel') {
                return this.wzLoadToChildColl(child, _md.onWheel, this.statements);
            }
            else if (name === 'onabort') {
                return this.wzLoadToChildColl(child, _md.onAbort, this.statements);
            }
            else if (name === 'onended') {
                return this.wzLoadToChildColl(child, _md.onEnded, this.statements);
            }
            else if (name === 'onerror') {
                return this.wzLoadToChildColl(child, _md.onError, this.statements);
            }
            else if (name === 'onpause') {
                return this.wzLoadToChildColl(child, _md.onPause, this.statements);
            }
            else if (name === 'onpaste') {
                return this.wzLoadToChildColl(child, _md.onPaste, this.statements);
            }
            else if (name === 'onkeyup') {
                return this.wzLoadToChildColl(child, _md.onKeyUp, this.statements);
            }
            else if (name === 'onfocus') {
                return this.wzLoadToChildColl(child, _md.onFocus, this.statements);
            }
            else if (name === 'oninput') {
                return this.wzLoadToChildColl(child, _md.onInput, this.statements);
            }
            else if (name === 'onclick') {
                return this.wzLoadToChildColl(child, _md.onClick, this.statements);
            }
            else if (name === 'onwheel') {
                return this.wzLoadToChildColl(child, _md.onWheel, this.statements);
            }
            else if (name === 'onabort') {
                return this.wzLoadToChildColl(child, _md.onAbort, this.statements);
            }
            else if (name === 'onended') {
                return this.wzLoadToChildColl(child, _md.onEnded, this.statements);
            }
            else if (name === 'onerror') {
                return this.wzLoadToChildColl(child, _md.onError, this.statements);
            }
            else if (name === 'onpause') {
                return this.wzLoadToChildColl(child, _md.onPause, this.statements);
            }
            else if (name === 'onpaste') {
                return this.wzLoadToChildColl(child, _md.onPaste, this.statements);
            }
            else if (name === 'onkeyup') {
                return this.wzLoadToChildColl(child, _md.onKeyUp, this.statements);
            }
            else if (name === 'onfocus') {
                return this.wzLoadToChildColl(child, _md.onFocus, this.statements);
            }
            else if (name === 'oninput') {
                return this.wzLoadToChildColl(child, _md.onInput, this.statements);
            }
            else if (name === 'onclick') {
                return this.wzLoadToChildColl(child, _md.onClick, this.statements);
            }
            else if (name === 'onwheel') {
                return this.wzLoadToChildColl(child, _md.onWheel, this.statements);
            }
            else if (name === 'onabort') {
                return this.wzLoadToChildColl(child, _md.onAbort, this.statements);
            }
            else if (name === 'onended') {
                return this.wzLoadToChildColl(child, _md.onEnded, this.statements);
            }
            else if (name === 'onerror') {
                return this.wzLoadToChildColl(child, _md.onError, this.statements);
            }
            else if (name === 'onpause') {
                return this.wzLoadToChildColl(child, _md.onPause, this.statements);
            }
            else if (name === 'onpaste') {
                return this.wzLoadToChildColl(child, _md.onPaste, this.statements);
            }
            else if (name === 'onkeyup') {
                return this.wzLoadToChildColl(child, _md.onKeyUp, this.statements);
            }
            else if (name === 'onfocus') {
                return this.wzLoadToChildColl(child, _md.onFocus, this.statements);
            }
            else if (name === 'oninput') {
                return this.wzLoadToChildColl(child, _md.onInput, this.statements);
            }
            else if (name === 'onclick') {
                return this.wzLoadToChildColl(child, _md.onClick, this.statements);
            }
            else if (name === 'onwheel') {
                return this.wzLoadToChildColl(child, _md.onWheel, this.statements);
            }
            else if (name === 'onabort') {
                return this.wzLoadToChildColl(child, _md.onAbort, this.statements);
            }
            else if (name === 'onended') {
                return this.wzLoadToChildColl(child, _md.onEnded, this.statements);
            }
            else if (name === 'onerror') {
                return this.wzLoadToChildColl(child, _md.onError, this.statements);
            }
            else if (name === 'onpause') {
                return this.wzLoadToChildColl(child, _md.onPause, this.statements);
            }
        }
        if (_l == 7 && _ch == 'r') {
            if (name === 'require') {
                return this.wzLoadToChildColl(child, _md.xrequire, this.statements);
            }
            else if (name === 'react-f') {
                return this.wzLoadToChildColl(child, _md.reactFunction, this.statements);
            }
        }
        if (_l == 7 && _ch == 'w') {
            if (name === 'wzconst') {
                return this.wzLoadToChildColl(child, _md.wzConst, this.statements);
            }
            else if (name === 'wz-iife') {
                return this.wzLoadToChildColl(child, _md.wzIife, this.statements);
            }
            else if (name === 'wzclass') {
                return this.wzLoadToChildColl(child, _md.wzClass, this.statements);
            }
        }
        if (_l == 8 && _ch == ':') {
            if (name === ':require') {
                return this.wzLoadToChildColl(child, _md.typeRequire, this.statements);
            }
        }
        if (_l == 8 && _ch == 'b') {
            if (name === 'backeach') {
                return this.wzLoadToChildColl(child, _md.backeach, this.statements);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'continue') {
                return this.wzLoadToChildColl(child, _md.xcontinue, this.statements);
            }
        }
        if (_l == 8 && _ch == 'd') {
            if (name === 'didmount') {
                return this.wzLoadToChildColl(child, _md.didMount, this.statements);
            }
            else if (name === 'describe') {
                return this.wzLoadToChildColl(child, _md.describe, this.statements);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'function') {
                return this.wzLoadToChildColl(child, _md.xfunction, this.statements);
            }
        }
        if (_l == 8 && _ch == 'h') {
            if (name === 'html_dom') {
                return this.wzLoadToChildColl(child, _md.html_dom, this.statements);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'it-async') {
                return this.wzLoadToChildColl(child, _md.itAsync, this.statements);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'onchange') {
                return this.wzLoadToChildColl(child, _md.onChange, this.statements);
            }
            else if (name === 'onsubmit') {
                return this.wzLoadToChildColl(child, _md.onSubmit, this.statements);
            }
            else if (name === 'onselect') {
                return this.wzLoadToChildColl(child, _md.onSelect, this.statements);
            }
            else if (name === 'onscroll') {
                return this.wzLoadToChildColl(child, _md.onScroll, this.statements);
            }
            else if (name === 'onseeked') {
                return this.wzLoadToChildColl(child, _md.onSeeked, this.statements);
            }
            else if (name === 'onchange') {
                return this.wzLoadToChildColl(child, _md.onChange, this.statements);
            }
            else if (name === 'onsubmit') {
                return this.wzLoadToChildColl(child, _md.onSubmit, this.statements);
            }
            else if (name === 'onselect') {
                return this.wzLoadToChildColl(child, _md.onSelect, this.statements);
            }
            else if (name === 'onscroll') {
                return this.wzLoadToChildColl(child, _md.onScroll, this.statements);
            }
            else if (name === 'onseeked') {
                return this.wzLoadToChildColl(child, _md.onSeeked, this.statements);
            }
            else if (name === 'onchange') {
                return this.wzLoadToChildColl(child, _md.onChange, this.statements);
            }
            else if (name === 'onsubmit') {
                return this.wzLoadToChildColl(child, _md.onSubmit, this.statements);
            }
            else if (name === 'onselect') {
                return this.wzLoadToChildColl(child, _md.onSelect, this.statements);
            }
            else if (name === 'onscroll') {
                return this.wzLoadToChildColl(child, _md.onScroll, this.statements);
            }
            else if (name === 'onseeked') {
                return this.wzLoadToChildColl(child, _md.onSeeked, this.statements);
            }
            else if (name === 'onchange') {
                return this.wzLoadToChildColl(child, _md.onChange, this.statements);
            }
            else if (name === 'onsubmit') {
                return this.wzLoadToChildColl(child, _md.onSubmit, this.statements);
            }
            else if (name === 'onselect') {
                return this.wzLoadToChildColl(child, _md.onSelect, this.statements);
            }
            else if (name === 'onscroll') {
                return this.wzLoadToChildColl(child, _md.onScroll, this.statements);
            }
            else if (name === 'onseeked') {
                return this.wzLoadToChildColl(child, _md.onSeeked, this.statements);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                return this.wzLoadToChildColl(child, _md.property, this.statements);
            }
        }
        if (_l == 8 && _ch == 's') {
            if (name === 'sequence') {
                return this.wzLoadToChildColl(child, _md.sequence, this.statements);
            }
            else if (name === 'setstate') {
                return this.wzLoadToChildColl(child, _md.setState, this.statements);
            }
            else if (name === 'stylejsx') {
                return this.wzLoadToChildColl(child, _md.styleJsx, this.statements);
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'template') {
                return this.wzLoadToChildColl(child, _md.template, this.statements);
            }
        }
        if (_l == 8 && _ch == 'w') {
            if (name === 'wz-const') {
                return this.wzLoadToChildColl(child, _md.wzConst, this.statements);
            }
            else if (name === 'wz-class') {
                return this.wzLoadToChildColl(child, _md.wzClass, this.statements);
            }
        }
        if (_l == 9 && _ch == ':') {
            if (name === ':exportns') {
                return this.wzLoadToChildColl(child, _md.typeExportNamespace, this.statements);
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'aftereach') {
                return this.wzLoadToChildColl(child, _md.afterEach, this.statements);
            }
        }
        if (_l == 9 && _ch == 'd') {
            if (name === 'did-mount') {
                return this.wzLoadToChildColl(child, _md.didMount, this.statements);
            }
            else if (name === 'didupdate') {
                return this.wzLoadToChildColl(child, _md.didUpdate, this.statements);
            }
        }
        if (_l == 9 && _ch == 'f') {
            if (name === 'function*') {
                return this.wzLoadToChildColl(child, _md.generatorfunction, this.statements);
            }
        }
        if (_l == 9 && _ch == 'h') {
            if (name === 'htmlevent') {
                return this.wzLoadToChildColl(child, _md.htmlevent, this.statements);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'onkeydown') {
                return this.wzLoadToChildColl(child, _md.onKeyDown, this.statements);
            }
            else if (name === 'ondragend') {
                return this.wzLoadToChildColl(child, _md.onDragEnd, this.statements);
            }
            else if (name === 'onmouseup') {
                return this.wzLoadToChildColl(child, _md.onMouseUp, this.statements);
            }
            else if (name === 'oncanplay') {
                return this.wzLoadToChildColl(child, _md.onCanPlay, this.statements);
            }
            else if (name === 'onemptied') {
                return this.wzLoadToChildColl(child, _md.onEmptied, this.statements);
            }
            else if (name === 'onplaying') {
                return this.wzLoadToChildColl(child, _md.onPlaying, this.statements);
            }
            else if (name === 'onseeking') {
                return this.wzLoadToChildColl(child, _md.onSeeking, this.statements);
            }
            else if (name === 'onstalled') {
                return this.wzLoadToChildColl(child, _md.onStalled, this.statements);
            }
            else if (name === 'onsuspend') {
                return this.wzLoadToChildColl(child, _md.onSuspend, this.statements);
            }
            else if (name === 'onwaiting') {
                return this.wzLoadToChildColl(child, _md.onWaiting, this.statements);
            }
            else if (name === 'onkeydown') {
                return this.wzLoadToChildColl(child, _md.onKeyDown, this.statements);
            }
            else if (name === 'ondragend') {
                return this.wzLoadToChildColl(child, _md.onDragEnd, this.statements);
            }
            else if (name === 'onmouseup') {
                return this.wzLoadToChildColl(child, _md.onMouseUp, this.statements);
            }
            else if (name === 'oncanplay') {
                return this.wzLoadToChildColl(child, _md.onCanPlay, this.statements);
            }
            else if (name === 'onemptied') {
                return this.wzLoadToChildColl(child, _md.onEmptied, this.statements);
            }
            else if (name === 'onplaying') {
                return this.wzLoadToChildColl(child, _md.onPlaying, this.statements);
            }
            else if (name === 'onseeking') {
                return this.wzLoadToChildColl(child, _md.onSeeking, this.statements);
            }
            else if (name === 'onstalled') {
                return this.wzLoadToChildColl(child, _md.onStalled, this.statements);
            }
            else if (name === 'onsuspend') {
                return this.wzLoadToChildColl(child, _md.onSuspend, this.statements);
            }
            else if (name === 'onwaiting') {
                return this.wzLoadToChildColl(child, _md.onWaiting, this.statements);
            }
            else if (name === 'onkeydown') {
                return this.wzLoadToChildColl(child, _md.onKeyDown, this.statements);
            }
            else if (name === 'ondragend') {
                return this.wzLoadToChildColl(child, _md.onDragEnd, this.statements);
            }
            else if (name === 'onmouseup') {
                return this.wzLoadToChildColl(child, _md.onMouseUp, this.statements);
            }
            else if (name === 'oncanplay') {
                return this.wzLoadToChildColl(child, _md.onCanPlay, this.statements);
            }
            else if (name === 'onemptied') {
                return this.wzLoadToChildColl(child, _md.onEmptied, this.statements);
            }
            else if (name === 'onplaying') {
                return this.wzLoadToChildColl(child, _md.onPlaying, this.statements);
            }
            else if (name === 'onseeking') {
                return this.wzLoadToChildColl(child, _md.onSeeking, this.statements);
            }
            else if (name === 'onstalled') {
                return this.wzLoadToChildColl(child, _md.onStalled, this.statements);
            }
            else if (name === 'onsuspend') {
                return this.wzLoadToChildColl(child, _md.onSuspend, this.statements);
            }
            else if (name === 'onwaiting') {
                return this.wzLoadToChildColl(child, _md.onWaiting, this.statements);
            }
            else if (name === 'onkeydown') {
                return this.wzLoadToChildColl(child, _md.onKeyDown, this.statements);
            }
            else if (name === 'ondragend') {
                return this.wzLoadToChildColl(child, _md.onDragEnd, this.statements);
            }
            else if (name === 'onmouseup') {
                return this.wzLoadToChildColl(child, _md.onMouseUp, this.statements);
            }
            else if (name === 'oncanplay') {
                return this.wzLoadToChildColl(child, _md.onCanPlay, this.statements);
            }
            else if (name === 'onemptied') {
                return this.wzLoadToChildColl(child, _md.onEmptied, this.statements);
            }
            else if (name === 'onplaying') {
                return this.wzLoadToChildColl(child, _md.onPlaying, this.statements);
            }
            else if (name === 'onseeking') {
                return this.wzLoadToChildColl(child, _md.onSeeking, this.statements);
            }
            else if (name === 'onstalled') {
                return this.wzLoadToChildColl(child, _md.onStalled, this.statements);
            }
            else if (name === 'onsuspend') {
                return this.wzLoadToChildColl(child, _md.onSuspend, this.statements);
            }
            else if (name === 'onwaiting') {
                return this.wzLoadToChildColl(child, _md.onWaiting, this.statements);
            }
        }
        if (_l == 9 && _ch == 's') {
            if (name === 'set-state') {
                return this.wzLoadToChildColl(child, _md.setState, this.statements);
            }
            else if (name === 'style-jsx') {
                return this.wzLoadToChildColl(child, _md.styleJsx, this.statements);
            }
        }
        if (_l == 9 && _ch == 'w') {
            if (name === 'willmount') {
                return this.wzLoadToChildColl(child, _md.willMount, this.statements);
            }
            else if (name === 'wzrequire') {
                return this.wzLoadToChildColl(child, _md.wzRequire, this.statements);
            }
        }
        if (_l == 10 && _ch == ':') {
            if (name === ':export-ns') {
                return this.wzLoadToChildColl(child, _md.typeExportNamespace, this.statements);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'afterasync') {
                return this.wzLoadToChildColl(child, _md.afterAsync, this.statements);
            }
            else if (name === 'after-each') {
                return this.wzLoadToChildColl(child, _md.afterEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'b') {
            if (name === 'beforeeach') {
                return this.wzLoadToChildColl(child, _md.beforeEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'd') {
            if (name === 'did-update') {
                return this.wzLoadToChildColl(child, _md.didUpdate, this.statements);
            }
        }
        if (_l == 10 && _ch == 'o') {
            if (name === 'onkeypress') {
                return this.wzLoadToChildColl(child, _md.onKeyPress, this.statements);
            }
            else if (name === 'ondragexit') {
                return this.wzLoadToChildColl(child, _md.onDragExit, this.statements);
            }
            else if (name === 'ondragover') {
                return this.wzLoadToChildColl(child, _md.onDragOver, this.statements);
            }
            else if (name === 'onmouseout') {
                return this.wzLoadToChildColl(child, _md.onMouseOut, this.statements);
            }
            else if (name === 'ontouchend') {
                return this.wzLoadToChildColl(child, _md.onTouchEnd, this.statements);
            }
            else if (name === 'onprogress') {
                return this.wzLoadToChildColl(child, _md.onProgress, this.statements);
            }
            else if (name === 'onkeypress') {
                return this.wzLoadToChildColl(child, _md.onKeyPress, this.statements);
            }
            else if (name === 'ondragexit') {
                return this.wzLoadToChildColl(child, _md.onDragExit, this.statements);
            }
            else if (name === 'ondragover') {
                return this.wzLoadToChildColl(child, _md.onDragOver, this.statements);
            }
            else if (name === 'onmouseout') {
                return this.wzLoadToChildColl(child, _md.onMouseOut, this.statements);
            }
            else if (name === 'ontouchend') {
                return this.wzLoadToChildColl(child, _md.onTouchEnd, this.statements);
            }
            else if (name === 'onprogress') {
                return this.wzLoadToChildColl(child, _md.onProgress, this.statements);
            }
            else if (name === 'onkeypress') {
                return this.wzLoadToChildColl(child, _md.onKeyPress, this.statements);
            }
            else if (name === 'ondragexit') {
                return this.wzLoadToChildColl(child, _md.onDragExit, this.statements);
            }
            else if (name === 'ondragover') {
                return this.wzLoadToChildColl(child, _md.onDragOver, this.statements);
            }
            else if (name === 'onmouseout') {
                return this.wzLoadToChildColl(child, _md.onMouseOut, this.statements);
            }
            else if (name === 'ontouchend') {
                return this.wzLoadToChildColl(child, _md.onTouchEnd, this.statements);
            }
            else if (name === 'onprogress') {
                return this.wzLoadToChildColl(child, _md.onProgress, this.statements);
            }
            else if (name === 'onkeypress') {
                return this.wzLoadToChildColl(child, _md.onKeyPress, this.statements);
            }
            else if (name === 'ondragexit') {
                return this.wzLoadToChildColl(child, _md.onDragExit, this.statements);
            }
            else if (name === 'ondragover') {
                return this.wzLoadToChildColl(child, _md.onDragOver, this.statements);
            }
            else if (name === 'onmouseout') {
                return this.wzLoadToChildColl(child, _md.onMouseOut, this.statements);
            }
            else if (name === 'ontouchend') {
                return this.wzLoadToChildColl(child, _md.onTouchEnd, this.statements);
            }
            else if (name === 'onprogress') {
                return this.wzLoadToChildColl(child, _md.onProgress, this.statements);
            }
        }
        if (_l == 10 && _ch == 'w') {
            if (name === 'wzfunction') {
                return this.wzLoadToChildColl(child, _md.wzFunction, this.statements);
            }
            else if (name === 'will-mount') {
                return this.wzLoadToChildColl(child, _md.willMount, this.statements);
            }
            else if (name === 'willupdate') {
                return this.wzLoadToChildColl(child, _md.willUpdate, this.statements);
            }
            else if (name === 'wz-require') {
                return this.wzLoadToChildColl(child, _md.wzRequire, this.statements);
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'after-async') {
                return this.wzLoadToChildColl(child, _md.afterAsync, this.statements);
            }
        }
        if (_l == 11 && _ch == 'b') {
            if (name === 'beforeasync') {
                return this.wzLoadToChildColl(child, _md.beforeAsync, this.statements);
            }
            else if (name === 'before-each') {
                return this.wzLoadToChildColl(child, _md.beforeEach, this.statements);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'ondragenter') {
                return this.wzLoadToChildColl(child, _md.onDragEnter, this.statements);
            }
            else if (name === 'ondragleave') {
                return this.wzLoadToChildColl(child, _md.onDragLeave, this.statements);
            }
            else if (name === 'ondragstart') {
                return this.wzLoadToChildColl(child, _md.onDragStart, this.statements);
            }
            else if (name === 'onmousedown') {
                return this.wzLoadToChildColl(child, _md.onMouseDown, this.statements);
            }
            else if (name === 'onmousemove') {
                return this.wzLoadToChildColl(child, _md.onMouseMove, this.statements);
            }
            else if (name === 'onmouseover') {
                return this.wzLoadToChildColl(child, _md.onMouseOver, this.statements);
            }
            else if (name === 'ontouchmove') {
                return this.wzLoadToChildColl(child, _md.onTouchMove, this.statements);
            }
            else if (name === 'onencrypted') {
                return this.wzLoadToChildColl(child, _md.onEncrypted, this.statements);
            }
            else if (name === 'onloadstart') {
                return this.wzLoadToChildColl(child, _md.onLoadStart, this.statements);
            }
            else if (name === 'ondragenter') {
                return this.wzLoadToChildColl(child, _md.onDragEnter, this.statements);
            }
            else if (name === 'ondragleave') {
                return this.wzLoadToChildColl(child, _md.onDragLeave, this.statements);
            }
            else if (name === 'ondragstart') {
                return this.wzLoadToChildColl(child, _md.onDragStart, this.statements);
            }
            else if (name === 'onmousedown') {
                return this.wzLoadToChildColl(child, _md.onMouseDown, this.statements);
            }
            else if (name === 'onmousemove') {
                return this.wzLoadToChildColl(child, _md.onMouseMove, this.statements);
            }
            else if (name === 'onmouseover') {
                return this.wzLoadToChildColl(child, _md.onMouseOver, this.statements);
            }
            else if (name === 'ontouchmove') {
                return this.wzLoadToChildColl(child, _md.onTouchMove, this.statements);
            }
            else if (name === 'onencrypted') {
                return this.wzLoadToChildColl(child, _md.onEncrypted, this.statements);
            }
            else if (name === 'onloadstart') {
                return this.wzLoadToChildColl(child, _md.onLoadStart, this.statements);
            }
            else if (name === 'ondragenter') {
                return this.wzLoadToChildColl(child, _md.onDragEnter, this.statements);
            }
            else if (name === 'ondragleave') {
                return this.wzLoadToChildColl(child, _md.onDragLeave, this.statements);
            }
            else if (name === 'ondragstart') {
                return this.wzLoadToChildColl(child, _md.onDragStart, this.statements);
            }
            else if (name === 'onmousedown') {
                return this.wzLoadToChildColl(child, _md.onMouseDown, this.statements);
            }
            else if (name === 'onmousemove') {
                return this.wzLoadToChildColl(child, _md.onMouseMove, this.statements);
            }
            else if (name === 'onmouseover') {
                return this.wzLoadToChildColl(child, _md.onMouseOver, this.statements);
            }
            else if (name === 'ontouchmove') {
                return this.wzLoadToChildColl(child, _md.onTouchMove, this.statements);
            }
            else if (name === 'onencrypted') {
                return this.wzLoadToChildColl(child, _md.onEncrypted, this.statements);
            }
            else if (name === 'onloadstart') {
                return this.wzLoadToChildColl(child, _md.onLoadStart, this.statements);
            }
            else if (name === 'ondragenter') {
                return this.wzLoadToChildColl(child, _md.onDragEnter, this.statements);
            }
            else if (name === 'ondragleave') {
                return this.wzLoadToChildColl(child, _md.onDragLeave, this.statements);
            }
            else if (name === 'ondragstart') {
                return this.wzLoadToChildColl(child, _md.onDragStart, this.statements);
            }
            else if (name === 'onmousedown') {
                return this.wzLoadToChildColl(child, _md.onMouseDown, this.statements);
            }
            else if (name === 'onmousemove') {
                return this.wzLoadToChildColl(child, _md.onMouseMove, this.statements);
            }
            else if (name === 'onmouseover') {
                return this.wzLoadToChildColl(child, _md.onMouseOver, this.statements);
            }
            else if (name === 'ontouchmove') {
                return this.wzLoadToChildColl(child, _md.onTouchMove, this.statements);
            }
            else if (name === 'onencrypted') {
                return this.wzLoadToChildColl(child, _md.onEncrypted, this.statements);
            }
            else if (name === 'onloadstart') {
                return this.wzLoadToChildColl(child, _md.onLoadStart, this.statements);
            }
        }
        if (_l == 11 && _ch == 'w') {
            if (name === 'wz-function') {
                return this.wzLoadToChildColl(child, _md.wzFunction, this.statements);
            }
            else if (name === 'willunmount') {
                return this.wzLoadToChildColl(child, _md.willUnmount, this.statements);
            }
            else if (name === 'will-update') {
                return this.wzLoadToChildColl(child, _md.willUpdate, this.statements);
            }
        }
        if (_l == 12 && _ch == 'b') {
            if (name === 'before-async') {
                return this.wzLoadToChildColl(child, _md.beforeAsync, this.statements);
            }
        }
        if (_l == 12 && _ch == 'g') {
            if (name === 'graphqlquery') {
                return this.wzLoadToChildColl(child, _md.graphqlQuery, this.statements);
            }
        }
        if (_l == 12 && _ch == 'o') {
            if (name === 'onmouseenter') {
                return this.wzLoadToChildColl(child, _md.onMouseEnter, this.statements);
            }
            else if (name === 'onmouseleave') {
                return this.wzLoadToChildColl(child, _md.onMouseLeave, this.statements);
            }
            else if (name === 'ontouchstart') {
                return this.wzLoadToChildColl(child, _md.onTouchStart, this.statements);
            }
            else if (name === 'onloadeddata') {
                return this.wzLoadToChildColl(child, _md.onLoadedData, this.statements);
            }
            else if (name === 'onratechange') {
                return this.wzLoadToChildColl(child, _md.onRateChange, this.statements);
            }
            else if (name === 'ontimeupdate') {
                return this.wzLoadToChildColl(child, _md.onTimeUpdate, this.statements);
            }
            else if (name === 'onmouseenter') {
                return this.wzLoadToChildColl(child, _md.onMouseEnter, this.statements);
            }
            else if (name === 'onmouseleave') {
                return this.wzLoadToChildColl(child, _md.onMouseLeave, this.statements);
            }
            else if (name === 'ontouchstart') {
                return this.wzLoadToChildColl(child, _md.onTouchStart, this.statements);
            }
            else if (name === 'onloadeddata') {
                return this.wzLoadToChildColl(child, _md.onLoadedData, this.statements);
            }
            else if (name === 'onratechange') {
                return this.wzLoadToChildColl(child, _md.onRateChange, this.statements);
            }
            else if (name === 'ontimeupdate') {
                return this.wzLoadToChildColl(child, _md.onTimeUpdate, this.statements);
            }
            else if (name === 'onmouseenter') {
                return this.wzLoadToChildColl(child, _md.onMouseEnter, this.statements);
            }
            else if (name === 'onmouseleave') {
                return this.wzLoadToChildColl(child, _md.onMouseLeave, this.statements);
            }
            else if (name === 'ontouchstart') {
                return this.wzLoadToChildColl(child, _md.onTouchStart, this.statements);
            }
            else if (name === 'onloadeddata') {
                return this.wzLoadToChildColl(child, _md.onLoadedData, this.statements);
            }
            else if (name === 'onratechange') {
                return this.wzLoadToChildColl(child, _md.onRateChange, this.statements);
            }
            else if (name === 'ontimeupdate') {
                return this.wzLoadToChildColl(child, _md.onTimeUpdate, this.statements);
            }
            else if (name === 'onmouseenter') {
                return this.wzLoadToChildColl(child, _md.onMouseEnter, this.statements);
            }
            else if (name === 'onmouseleave') {
                return this.wzLoadToChildColl(child, _md.onMouseLeave, this.statements);
            }
            else if (name === 'ontouchstart') {
                return this.wzLoadToChildColl(child, _md.onTouchStart, this.statements);
            }
            else if (name === 'onloadeddata') {
                return this.wzLoadToChildColl(child, _md.onLoadedData, this.statements);
            }
            else if (name === 'onratechange') {
                return this.wzLoadToChildColl(child, _md.onRateChange, this.statements);
            }
            else if (name === 'ontimeupdate') {
                return this.wzLoadToChildColl(child, _md.onTimeUpdate, this.statements);
            }
        }
        if (_l == 12 && _ch == 's') {
            if (name === 'shouldupdate') {
                return this.wzLoadToChildColl(child, _md.shouldUpdate, this.statements);
            }
        }
        if (_l == 12 && _ch == 'w') {
            if (name === 'will-unmount') {
                return this.wzLoadToChildColl(child, _md.willUnmount, this.statements);
            }
        }
        if (_l == 13 && _ch == 'a') {
            if (name === 'asyncfunction') {
                return this.wzLoadToChildColl(child, _md.asyncfunction, this.statements);
            }
        }
        if (_l == 13 && _ch == 'e') {
            if (name === 'exportdefault') {
                return this.wzLoadToChildColl(child, _md.exportDefault, this.statements);
            }
        }
        if (_l == 13 && _ch == 'g') {
            if (name === 'graphql-query') {
                return this.wzLoadToChildColl(child, _md.graphqlQuery, this.statements);
            }
        }
        if (_l == 13 && _ch == 'o') {
            if (name === 'oncontextmenu') {
                return this.wzLoadToChildColl(child, _md.onContextMenu, this.statements);
            }
            else if (name === 'ondoubleclick') {
                return this.wzLoadToChildColl(child, _md.onDoubleClick, this.statements);
            }
            else if (name === 'ontouchcancel') {
                return this.wzLoadToChildColl(child, _md.onTouchCancel, this.statements);
            }
            else if (name === 'oncontextmenu') {
                return this.wzLoadToChildColl(child, _md.onContextMenu, this.statements);
            }
            else if (name === 'ondoubleclick') {
                return this.wzLoadToChildColl(child, _md.onDoubleClick, this.statements);
            }
            else if (name === 'ontouchcancel') {
                return this.wzLoadToChildColl(child, _md.onTouchCancel, this.statements);
            }
            else if (name === 'oncontextmenu') {
                return this.wzLoadToChildColl(child, _md.onContextMenu, this.statements);
            }
            else if (name === 'ondoubleclick') {
                return this.wzLoadToChildColl(child, _md.onDoubleClick, this.statements);
            }
            else if (name === 'ontouchcancel') {
                return this.wzLoadToChildColl(child, _md.onTouchCancel, this.statements);
            }
            else if (name === 'oncontextmenu') {
                return this.wzLoadToChildColl(child, _md.onContextMenu, this.statements);
            }
            else if (name === 'ondoubleclick') {
                return this.wzLoadToChildColl(child, _md.onDoubleClick, this.statements);
            }
            else if (name === 'ontouchcancel') {
                return this.wzLoadToChildColl(child, _md.onTouchCancel, this.statements);
            }
        }
        if (_l == 13 && _ch == 's') {
            if (name === 'should-update') {
                return this.wzLoadToChildColl(child, _md.shouldUpdate, this.statements);
            }
        }
        if (_l == 14 && _ch == 'a') {
            if (name === 'async-function') {
                return this.wzLoadToChildColl(child, _md.asyncfunction, this.statements);
            }
        }
        if (_l == 14 && _ch == 'e') {
            if (name === 'export-default') {
                return this.wzLoadToChildColl(child, _md.exportDefault, this.statements);
            }
        }
        if (_l == 14 && _ch == 'o') {
            if (name === 'onvolumechange') {
                return this.wzLoadToChildColl(child, _md.onVolumeChange, this.statements);
            }
            else if (name === 'onvolumechange') {
                return this.wzLoadToChildColl(child, _md.onVolumeChange, this.statements);
            }
            else if (name === 'onvolumechange') {
                return this.wzLoadToChildColl(child, _md.onVolumeChange, this.statements);
            }
            else if (name === 'onvolumechange') {
                return this.wzLoadToChildColl(child, _md.onVolumeChange, this.statements);
            }
        }
        if (_l == 15 && _ch == 'g') {
            if (name === 'graphqlmutation') {
                return this.wzLoadToChildColl(child, _md.graphqlMutation, this.statements);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'ontransitionend') {
                return this.wzLoadToChildColl(child, _md.onTransitionEnd, this.statements);
            }
            else if (name === 'ontransitionend') {
                return this.wzLoadToChildColl(child, _md.onTransitionEnd, this.statements);
            }
            else if (name === 'ontransitionend') {
                return this.wzLoadToChildColl(child, _md.onTransitionEnd, this.statements);
            }
            else if (name === 'ontransitionend') {
                return this.wzLoadToChildColl(child, _md.onTransitionEnd, this.statements);
            }
        }
        if (_l == 16 && _ch == 'g') {
            if (name === 'graphql-mutation') {
                return this.wzLoadToChildColl(child, _md.graphqlMutation, this.statements);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'oncompositionend') {
                return this.wzLoadToChildColl(child, _md.onCompositionEnd, this.statements);
            }
            else if (name === 'oncanplaythrough') {
                return this.wzLoadToChildColl(child, _md.onCanPlayThrough, this.statements);
            }
            else if (name === 'ondurationchange') {
                return this.wzLoadToChildColl(child, _md.onDurationChange, this.statements);
            }
            else if (name === 'onloadedmetadata') {
                return this.wzLoadToChildColl(child, _md.onLoadedMetadata, this.statements);
            }
            else if (name === 'oncompositionend') {
                return this.wzLoadToChildColl(child, _md.onCompositionEnd, this.statements);
            }
            else if (name === 'oncanplaythrough') {
                return this.wzLoadToChildColl(child, _md.onCanPlayThrough, this.statements);
            }
            else if (name === 'ondurationchange') {
                return this.wzLoadToChildColl(child, _md.onDurationChange, this.statements);
            }
            else if (name === 'onloadedmetadata') {
                return this.wzLoadToChildColl(child, _md.onLoadedMetadata, this.statements);
            }
            else if (name === 'oncompositionend') {
                return this.wzLoadToChildColl(child, _md.onCompositionEnd, this.statements);
            }
            else if (name === 'oncanplaythrough') {
                return this.wzLoadToChildColl(child, _md.onCanPlayThrough, this.statements);
            }
            else if (name === 'ondurationchange') {
                return this.wzLoadToChildColl(child, _md.onDurationChange, this.statements);
            }
            else if (name === 'onloadedmetadata') {
                return this.wzLoadToChildColl(child, _md.onLoadedMetadata, this.statements);
            }
            else if (name === 'oncompositionend') {
                return this.wzLoadToChildColl(child, _md.onCompositionEnd, this.statements);
            }
            else if (name === 'oncanplaythrough') {
                return this.wzLoadToChildColl(child, _md.onCanPlayThrough, this.statements);
            }
            else if (name === 'ondurationchange') {
                return this.wzLoadToChildColl(child, _md.onDurationChange, this.statements);
            }
            else if (name === 'onloadedmetadata') {
                return this.wzLoadToChildColl(child, _md.onLoadedMetadata, this.statements);
            }
        }
        if (_l == 16 && _ch == 'w') {
            if (name === 'willreceiveprops') {
                return this.wzLoadToChildColl(child, _md.willReceiveProps, this.statements);
            }
        }
        if (_l == 18 && _ch == 'o') {
            if (name === 'oncompositionstart') {
                return this.wzLoadToChildColl(child, _md.onCompositionStart, this.statements);
            }
            else if (name === 'oncompositionstart') {
                return this.wzLoadToChildColl(child, _md.onCompositionStart, this.statements);
            }
            else if (name === 'oncompositionstart') {
                return this.wzLoadToChildColl(child, _md.onCompositionStart, this.statements);
            }
            else if (name === 'oncompositionstart') {
                return this.wzLoadToChildColl(child, _md.onCompositionStart, this.statements);
            }
        }
        if (_l == 18 && _ch == 'w') {
            if (name === 'will-receive-props') {
                return this.wzLoadToChildColl(child, _md.willReceiveProps, this.statements);
            }
        }
        if (_l == 19 && _ch == 'o') {
            if (name === 'oncompositionupdate') {
                return this.wzLoadToChildColl(child, _md.onCompositionUpdate, this.statements);
            }
            else if (name === 'oncompositionupdate') {
                return this.wzLoadToChildColl(child, _md.onCompositionUpdate, this.statements);
            }
            else if (name === 'oncompositionupdate') {
                return this.wzLoadToChildColl(child, _md.onCompositionUpdate, this.statements);
            }
            else if (name === 'oncompositionupdate') {
                return this.wzLoadToChildColl(child, _md.onCompositionUpdate, this.statements);
            }
        }
        return ok;
    }
    statement.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    statement.prototype.wzVerify = function(ctx) {
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzVerify(ctx);
        }
        _md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    statement.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzInitialize(ctx);
        }
        _md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return statement;
})(jsBase);

_md.statement = statement;
// element comment
var comment = (function (statement) {
    _inherits(comment, statement);
    function comment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    return comment;
})(statement);

_md.comment = comment;
// element commentmultiline
var commentmultiline = (function (statement) {
    _inherits(commentmultiline, statement);
    function commentmultiline(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(commentmultiline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, commentmultiline);
        this.wzElement = "commentmultiline";
    }
    return commentmultiline;
})(statement);

_md.commentmultiline = commentmultiline;
/**
    element module
     The root element of the js schema.
*/
var module = (function (statement) {
    _inherits(module, statement);
    function module(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(module.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, module);
        this.allowedKINDS = [ "jsfile", "nodejs.bin", "react", "es6"];
        this.KIND_JSFILE = "jsfile";
        this.KIND_NODEJS_BIN = "nodejs.bin";
        this.KIND_REACT = "react";
        this.KIND_ES6 = "es6";
        this.allowedECMAS = [ "es5", "es6"];
        this.ECMA_ES5 = "es5";
        this.ECMA_ES6 = "es6";
        this.wzElement = "module";
        this.kind = "jsfile";
        this.ecma = "es5";
        this.no_strict = false;
        // relation feature
        this.features = [];
    }
    module.KIND_JSFILE = "jsfile";module.KIND_NODEJS_BIN = "nodejs.bin";module.KIND_REACT = "react";module.KIND_ES6 = "es6";module.ECMA_ES5 = "es5";module.ECMA_ES6 = "es6";module.prototype.addFeature = function(name, sourceLineInfo) {
        var retval = new _md.feature(name, sourceLineInfo);
        retval.wzParent = this;
        this.features.push(retval);
        return retval;
    }
    module.prototype.getFeature = function(name) {
        var found = null;
        this.features.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    module.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'e') {
            if (name === 'ecma') {
                this.ecma = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'f') {
            if (name === 'feature') {
                return this.wzLoadToChildColl(child, _md.feature, this.features);
            }
        }
        if (_l == 9 && _ch == 'n') {
            if (name === 'no_strict') {
                this.no_strict = parseboolean(child.v, null, child); return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    module.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    module.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("module", "kind", this.kind, this.allowedKINDS, this);
        ctx.verifyEnum("module", "ecma", this.ecma, this.allowedECMAS, this);
        var i, i_items=this.features, i_len=this.features.length, item;
        for (i=0; i<i_len; i++) {
            item = this.features[i];
            item.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    module.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.features, i_len=this.features.length, item;
        for (i=0; i<i_len; i++) {
            item = this.features[i];
            item.wzInitialize(ctx);
        }
        if (this.kind === 'react' || this.kind === 'es6') {
            this.ecma = 'es6';
        }
        this.wzModelState = ctx.modelState = {};
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    module.prototype.hasFeature = function(name) {
        var i, i_items=this.features, i_len=this.features.length, f;
        for (i=0; i<i_len; i++) {
            f = this.features[i];
            if (f.wzName === name) {
                return true;
            }
        }
        return false;
    }
    return module;
})(statement);

_md.module = module;
/**
    element feature
     A known feature that this module require. The list of available features
     is enumerated in the restrict element of the 'kind' attribute.
     Most features are autodetected during schema initialization.
*/
var feature = (function (jsBase) {
    _inherits(feature, jsBase);
    function feature(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(feature.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, feature);
        this.allowedKINDS = [ "argument-check"];
        this.KIND_ARGUMENT_CHECK = "argument-check";
        this.wzElement = "feature";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.kind = null
    }
    feature.KIND_ARGUMENT_CHECK = "argument-check";feature.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        return ok;
    }
    feature.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    feature.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("feature", "kind", this.kind, this.allowedKINDS, this);
        _md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    return feature;
})(jsBase);

_md.feature = feature;
/**
    element statementmultiline
     Inside an html tag means a text node preceded by a line feed
*/
var statementmultiline = (function (statement) {
    _inherits(statementmultiline, statement);
    function statementmultiline(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(statementmultiline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, statementmultiline);
        this.wzElement = "statementmultiline";
    }
    return statementmultiline;
})(statement);

_md.statementmultiline = statementmultiline;
/**
    element param
    
     The 'param' element defines a simple, not typed and not restricted
     function parameter.
     A function with 'params' parameters has no argument checking
     ittf
     function Foo
     param group
     param options
    
     A function with typed parameters or 'params' with constraints facets
     has argument checking.
     ittf
     function Foo
     string group
     required
     { options
     number level
     required
     range 0 - 3
     string size
     required
     one-of small, medium, large
    
*/
var param = (function (jsBase) {
    _inherits(param, jsBase);
    function param(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(param.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, param);
        this.wzElement = "param";
        this.isOptional = false;
        // relation restrict
        this.restrict = null;
        // relation facet
        this.facets = [];
        // relation comment
        this.comments = [];
    }
    param.prototype.getFacet = function(name) {
        var found = null;
        this.facets.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    param.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    param.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    param.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumFacet, this.facets);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOf, this.facets);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'range') {
                return this.wzLoadToChildColl(child, _md.rangeFacet, this.facets);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOf, this.facets);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'regexp') {
                return this.wzLoadToChildColl(child, _md.regexpFacet, this.facets);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'arrayof') {
                return this.wzLoadToChildColl(child, _md.arrayOf, this.facets);
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'array-of') {
                return this.wzLoadToChildColl(child, _md.arrayOf, this.facets);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'maxvalue') {
                return this.wzLoadToChildColl(child, _md.maxValueFacet, this.facets);
            }
            else if (name === 'minvalue') {
                return this.wzLoadToChildColl(child, _md.minValueFacet, this.facets);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'optional') {
                this.isOptional = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'restrict') {
                return this.wzLoadOneToOne(child, _md.restrict, 'restrict');
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'maxlength') {
                return this.wzLoadToChildColl(child, _md.maxLengthFacet, this.facets);
            }
            else if (name === 'minlength') {
                return this.wzLoadToChildColl(child, _md.minLengthFacet, this.facets);
            }
            else if (name === 'max-value') {
                return this.wzLoadToChildColl(child, _md.maxValueFacet, this.facets);
            }
            else if (name === 'min-value') {
                return this.wzLoadToChildColl(child, _md.minValueFacet, this.facets);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfType, this.facets);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOf, this.facets);
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'max-length') {
                return this.wzLoadToChildColl(child, _md.maxLengthFacet, this.facets);
            }
            else if (name === 'min-length') {
                return this.wzLoadToChildColl(child, _md.minLengthFacet, this.facets);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOf, this.facets);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfType, this.facets);
            }
        }
        return ok;
    }
    param.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    param.prototype.wzVerify = function(ctx) {
        if (this.restrict != null) {
            this.restrict.wzVerify(ctx);
        }
        var i, i_items=this.facets, i_len=this.facets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.facets[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        _md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    param.prototype.wzInitialize = function(ctx) {
        if (this.restrict != null) {
            this.restrict.wzInitialize(ctx);
        }
        var i, i_items=this.facets, i_len=this.facets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.facets[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        if (this.wzElement !== 'param' && !this.paramObjectPattern && !this.paramArrayPattern) {
            this.isRequired = true;
            if (isDescendentOf(this, 'prop') == false) {
                var r = this.wzRoot();
                if (r.hasFeature('argument-check') === false) {
                    r.addFeature('argument-check', this.wzSourceLineInfo);
                }
            }
        }
        else {
            this.isRequired = false;
        }
        if (this.isOptional) {
            this.isRequired = false;
        }
        _md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return param;
})(jsBase);

_md.param = param;
// element stringParam
var stringParam = (function (param) {
    _inherits(stringParam, param);
    function stringParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringParam);
        this.wzElement = "stringParam";
    }
    return stringParam;
})(param);

_md.stringParam = stringParam;
// element booleanParam
var booleanParam = (function (param) {
    _inherits(booleanParam, param);
    function booleanParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanParam);
        this.wzElement = "booleanParam";
    }
    return booleanParam;
})(param);

_md.booleanParam = booleanParam;
// element numberParam
var numberParam = (function (param) {
    _inherits(numberParam, param);
    function numberParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(numberParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, numberParam);
        this.wzElement = "numberParam";
    }
    return numberParam;
})(param);

_md.numberParam = numberParam;
// element dateParam
var dateParam = (function (param) {
    _inherits(dateParam, param);
    function dateParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(dateParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dateParam);
        this.wzElement = "dateParam";
    }
    return dateParam;
})(param);

_md.dateParam = dateParam;
// element functionParam
var functionParam = (function (param) {
    _inherits(functionParam, param);
    function functionParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(functionParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, functionParam);
        this.wzElement = "functionParam";
    }
    return functionParam;
})(param);

_md.functionParam = functionParam;
/**
    element symbolParam
     react param
*/
var symbolParam = (function (param) {
    _inherits(symbolParam, param);
    function symbolParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(symbolParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, symbolParam);
        this.wzElement = "symbolParam";
    }
    return symbolParam;
})(param);

_md.symbolParam = symbolParam;
/**
    element nodeParam
     react param
*/
var nodeParam = (function (param) {
    _inherits(nodeParam, param);
    function nodeParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(nodeParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nodeParam);
        this.wzElement = "nodeParam";
    }
    return nodeParam;
})(param);

_md.nodeParam = nodeParam;
/**
    element elementParam
     react param
*/
var elementParam = (function (param) {
    _inherits(elementParam, param);
    function elementParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(elementParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, elementParam);
        this.wzElement = "elementParam";
    }
    return elementParam;
})(param);

_md.elementParam = elementParam;
// element exactParam
var exactParam = (function (param) {
    _inherits(exactParam, param);
    function exactParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(exactParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, exactParam);
        this.wzElement = "exactParam";
    }
    return exactParam;
})(param);

_md.exactParam = exactParam;
// element anyParam
var anyParam = (function (param) {
    _inherits(anyParam, param);
    function anyParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(anyParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, anyParam);
        this.wzElement = "anyParam";
    }
    return anyParam;
})(param);

_md.anyParam = anyParam;
// element callbackParam
var callbackParam = (function (param) {
    _inherits(callbackParam, param);
    function callbackParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(callbackParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, callbackParam);
        this.wzElement = "callbackParam";
        // relation param
        this.params = [];
    }
    callbackParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    callbackParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    callbackParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    callbackParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    callbackParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    callbackParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return callbackParam;
})(param);

_md.callbackParam = callbackParam;
// element optionsCallbackParam
var optionsCallbackParam = (function (param) {
    _inherits(optionsCallbackParam, param);
    function optionsCallbackParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(optionsCallbackParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, optionsCallbackParam);
        this.wzElement = "optionsCallbackParam";
        // relation param
        this.params = [];
    }
    optionsCallbackParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    optionsCallbackParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    optionsCallbackParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    optionsCallbackParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    optionsCallbackParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    optionsCallbackParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return optionsCallbackParam;
})(param);

_md.optionsCallbackParam = optionsCallbackParam;
// element arrayParam
var arrayParam = (function (param) {
    _inherits(arrayParam, param);
    function arrayParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayParam);
        this.wzElement = "arrayParam";
        // relation param
        this.params = [];
        // relation jsPropertyOrValue
        this.jsPropertyOrValues = [];
    }
    arrayParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    arrayParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    arrayParam.prototype.addJsPropertyOrValue = function(name, sourceLineInfo) {
        var retval = new _md.jsPropertyOrValue(name, sourceLineInfo);
        retval.wzParent = this;
        this.jsPropertyOrValues.push(retval);
        return retval;
    }
    arrayParam.prototype.getJsPropertyOrValue = function(name) {
        var found = null;
        this.jsPropertyOrValues.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    arrayParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.jsPropertyOrValue, this.jsPropertyOrValues);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    arrayParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    arrayParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    arrayParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzInitialize(ctx);
        }
        if (this.params.length == 0 && this.jsPropertyOrValues.length > 0) {
            this.paramArrayPattern = true;
            var acc = [];
            var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
            for (i=0; i<i_len; i++) {
                item = this.jsPropertyOrValues[i];
                acc.push(item.wzName);
            }
            this.textified = '[' + acc.join(', ') + ']';
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return arrayParam;
})(param);

_md.arrayParam = arrayParam;
// element arrayOrObjectParam
var arrayOrObjectParam = (function (param) {
    _inherits(arrayOrObjectParam, param);
    function arrayOrObjectParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayOrObjectParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayOrObjectParam);
        this.wzElement = "arrayOrObjectParam";
        // relation param
        this.params = [];
    }
    arrayOrObjectParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    arrayOrObjectParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    arrayOrObjectParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    arrayOrObjectParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    arrayOrObjectParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    arrayOrObjectParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return arrayOrObjectParam;
})(param);

_md.arrayOrObjectParam = arrayOrObjectParam;
// element objectParam
var objectParam = (function (param) {
    _inherits(objectParam, param);
    function objectParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectParam);
        this.wzElement = "objectParam";
        // relation param
        this.params = [];
        // relation jsPropertyOrValue
        this.jsPropertyOrValues = [];
    }
    objectParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    objectParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectParam.prototype.addJsPropertyOrValue = function(name, sourceLineInfo) {
        var retval = new _md.jsPropertyOrValue(name, sourceLineInfo);
        retval.wzParent = this;
        this.jsPropertyOrValues.push(retval);
        return retval;
    }
    objectParam.prototype.getJsPropertyOrValue = function(name) {
        var found = null;
        this.jsPropertyOrValues.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.jsPropertyOrValue, this.jsPropertyOrValues);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    objectParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    objectParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzInitialize(ctx);
        }
        if (this.params.length == 0 && this.jsPropertyOrValues.length > 0) {
            this.paramObjectPattern = true;
            var acc = [];
            var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
            for (i=0; i<i_len; i++) {
                item = this.jsPropertyOrValues[i];
                var ss = item.wzName.split(' ');
                if (ss.length > 1) {
                    if (ss.length == 2 && ss[0] === ss[1]) {
                        acc.push(ss[0]);
                    }
                    else if (ss[1] === '=') {
                        acc.push(item.wzName);
                    }
                    else {
                        acc.push(ss[0] + ': ' + ss.slice(1, ss.lenght).join(' '));
                    }
                }
                else {
                    acc.push(ss[0]);
                }
            }
            this.textified = '{' + acc.join(', ') + '}';
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return objectParam;
})(param);

_md.objectParam = objectParam;
// element oneOfParam
var oneOfParam = (function (param) {
    _inherits(oneOfParam, param);
    function oneOfParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(oneOfParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, oneOfParam);
        this.wzElement = "oneOfParam";
        // relation jsPropertyOrValue
        this.jsPropertyOrValues = [];
    }
    oneOfParam.prototype.addJsPropertyOrValue = function(name, sourceLineInfo) {
        var retval = new _md.jsPropertyOrValue(name, sourceLineInfo);
        retval.wzParent = this;
        this.jsPropertyOrValues.push(retval);
        return retval;
    }
    oneOfParam.prototype.getJsPropertyOrValue = function(name) {
        var found = null;
        this.jsPropertyOrValues.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    oneOfParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.jsPropertyOrValue, this.jsPropertyOrValues);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    oneOfParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    oneOfParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    oneOfParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.jsPropertyOrValues, i_len=this.jsPropertyOrValues.length, item;
        for (i=0; i<i_len; i++) {
            item = this.jsPropertyOrValues[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return oneOfParam;
})(param);

_md.oneOfParam = oneOfParam;
// element oneOfTypeParam
var oneOfTypeParam = (function (param) {
    _inherits(oneOfTypeParam, param);
    function oneOfTypeParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(oneOfTypeParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, oneOfTypeParam);
        this.wzElement = "oneOfTypeParam";
        // relation param
        this.params = [];
    }
    oneOfTypeParam.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    oneOfTypeParam.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    oneOfTypeParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    oneOfTypeParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    oneOfTypeParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    oneOfTypeParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return oneOfTypeParam;
})(param);

_md.oneOfTypeParam = oneOfTypeParam;
// element instanceOfParam
var instanceOfParam = (function (param) {
    _inherits(instanceOfParam, param);
    function instanceOfParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(instanceOfParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, instanceOfParam);
        this.wzElement = "instanceOfParam";
    }
    return instanceOfParam;
})(param);

_md.instanceOfParam = instanceOfParam;
// element reactStyleParam
var reactStyleParam = (function (param) {
    _inherits(reactStyleParam, param);
    function reactStyleParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reactStyleParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reactStyleParam);
        this.wzElement = "reactStyleParam";
    }
    return reactStyleParam;
})(param);

_md.reactStyleParam = reactStyleParam;
// element shapeParam
var shapeParam = (function (param) {
    _inherits(shapeParam, param);
    function shapeParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(shapeParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, shapeParam);
        this.wzElement = "shapeParam";
        // relation prop
        this.props = [];
    }
    shapeParam.prototype.addProp = function(name, sourceLineInfo) {
        var retval = new _md.prop(name, sourceLineInfo);
        retval.wzParent = this;
        this.props.push(retval);
        return retval;
    }
    shapeParam.prototype.getProp = function(name) {
        var found = null;
        this.props.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    shapeParam.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'p') {
            if (name === 'prop') {
                return this.wzLoadToChildColl(child, _md.prop, this.props);
            }
        }
        ok = _md.param.prototype.loadChild.call(this, child);
        return ok;
    }
    shapeParam.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    shapeParam.prototype.wzVerify = function(ctx) {
        var i, i_items=this.props, i_len=this.props.length, item;
        for (i=0; i<i_len; i++) {
            item = this.props[i];
            item.wzVerify(ctx);
        }
        _md.param.prototype.wzVerify.call(this, ctx);
    }
    shapeParam.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.props, i_len=this.props.length, item;
        for (i=0; i<i_len; i++) {
            item = this.props[i];
            item.wzInitialize(ctx);
        }
        _md.param.prototype.wzInitialize.call(this, ctx);
    }
    return shapeParam;
})(param);

_md.shapeParam = shapeParam;
/**
    element restrict
     Group of restrictions to the element or attribute values
*/
var restrict = (function (jsBase) {
    _inherits(restrict, jsBase);
    function restrict(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(restrict.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, restrict);
        this.wzElement = "restrict";
        // relation facet
        this.facets = [];
        // relation comment
        this.comments = [];
    }
    restrict.prototype.getFacet = function(name) {
        var found = null;
        this.facets.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    restrict.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    restrict.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    restrict.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumFacet, this.facets);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOf, this.facets);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'range') {
                return this.wzLoadToChildColl(child, _md.rangeFacet, this.facets);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOf, this.facets);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'regexp') {
                return this.wzLoadToChildColl(child, _md.regexpFacet, this.facets);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'arrayof') {
                return this.wzLoadToChildColl(child, _md.arrayOf, this.facets);
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'array-of') {
                return this.wzLoadToChildColl(child, _md.arrayOf, this.facets);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'maxvalue') {
                return this.wzLoadToChildColl(child, _md.maxValueFacet, this.facets);
            }
            else if (name === 'minvalue') {
                return this.wzLoadToChildColl(child, _md.minValueFacet, this.facets);
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'maxlength') {
                return this.wzLoadToChildColl(child, _md.maxLengthFacet, this.facets);
            }
            else if (name === 'minlength') {
                return this.wzLoadToChildColl(child, _md.minLengthFacet, this.facets);
            }
            else if (name === 'max-value') {
                return this.wzLoadToChildColl(child, _md.maxValueFacet, this.facets);
            }
            else if (name === 'min-value') {
                return this.wzLoadToChildColl(child, _md.minValueFacet, this.facets);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfType, this.facets);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOf, this.facets);
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'max-length') {
                return this.wzLoadToChildColl(child, _md.maxLengthFacet, this.facets);
            }
            else if (name === 'min-length') {
                return this.wzLoadToChildColl(child, _md.minLengthFacet, this.facets);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOf, this.facets);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfType, this.facets);
            }
        }
        return ok;
    }
    restrict.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    restrict.prototype.wzVerify = function(ctx) {
        var i, i_items=this.facets, i_len=this.facets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.facets[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        _md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    restrict.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.facets, i_len=this.facets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.facets[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        _md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return restrict;
})(jsBase);

_md.restrict = restrict;
/**
    element facet
     The abstract base class for facet restrictions
*/
var facet = (function (jsBase) {
    _inherits(facet, jsBase);
    function facet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(facet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, facet);
        this.wzElement = "facet";
        // relation comment
        this.comments = [];
    }
    facet.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    facet.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    facet.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        return ok;
    }
    facet.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    facet.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        _md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    facet.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        _md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return facet;
})(jsBase);

_md.facet = facet;
/**
    element enumFacet
     A restriction of type enumeration
*/
var enumFacet = (function (facet) {
    _inherits(enumFacet, facet);
    function enumFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumFacet);
        this.wzElement = "enumFacet";
    }
    return enumFacet;
})(facet);

_md.enumFacet = enumFacet;
/**
    element maxLengthFacet
     A restriction of type maximum length
*/
var maxLengthFacet = (function (facet) {
    _inherits(maxLengthFacet, facet);
    function maxLengthFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(maxLengthFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, maxLengthFacet);
        this.wzElement = "maxLengthFacet";
    }
    return maxLengthFacet;
})(facet);

_md.maxLengthFacet = maxLengthFacet;
/**
    element minLengthFacet
     A restriction of type minimum length
*/
var minLengthFacet = (function (facet) {
    _inherits(minLengthFacet, facet);
    function minLengthFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(minLengthFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, minLengthFacet);
        this.wzElement = "minLengthFacet";
    }
    return minLengthFacet;
})(facet);

_md.minLengthFacet = minLengthFacet;
/**
    element maxValueFacet
     A restriction of type maximum value
*/
var maxValueFacet = (function (facet) {
    _inherits(maxValueFacet, facet);
    function maxValueFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(maxValueFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, maxValueFacet);
        this.wzElement = "maxValueFacet";
    }
    return maxValueFacet;
})(facet);

_md.maxValueFacet = maxValueFacet;
/**
    element minValueFacet
     A restriction of type minimum value
*/
var minValueFacet = (function (facet) {
    _inherits(minValueFacet, facet);
    function minValueFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(minValueFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, minValueFacet);
        this.wzElement = "minValueFacet";
    }
    return minValueFacet;
})(facet);

_md.minValueFacet = minValueFacet;
/**
    element rangeFacet
     A restriction of type range (from to)
*/
var rangeFacet = (function (facet) {
    _inherits(rangeFacet, facet);
    function rangeFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(rangeFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, rangeFacet);
        this.wzElement = "rangeFacet";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.from = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.to = null
    }
    rangeFacet.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 't') {
            if (name === 'to') {
                this.to = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = _md.facet.prototype.loadChild.call(this, child);
        return ok;
    }
    rangeFacet.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    rangeFacet.prototype.wzInitialize = function(ctx) {
        if (this.wzName && this.wzName.length > 0) {
            var ss = this.wzName.split('-');
            if (ss.length == 2) {
                this.from = ss[0].trim();
                this.to = ss[1].trim();
            }
            else {
                ss = this.wzName.split(' ');
                if (ss.length == 2) {
                    this.from = ss[0].trim();
                    this.to = ss[1].trim();
                }
            }
        }
        _md.facet.prototype.wzInitialize.call(this, ctx);
    }
    return rangeFacet;
})(facet);

_md.rangeFacet = rangeFacet;
/**
    element regexpFacet
     A restriction of type regular expression
*/
var regexpFacet = (function (facet) {
    _inherits(regexpFacet, facet);
    function regexpFacet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(regexpFacet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, regexpFacet);
        this.wzElement = "regexpFacet";
    }
    return regexpFacet;
})(facet);

_md.regexpFacet = regexpFacet;
/**
    element arrayOf
     A restriction to an array of items of a particular type
*/
var arrayOf = (function (facet) {
    _inherits(arrayOf, facet);
    function arrayOf(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayOf.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayOf);
        this.wzElement = "arrayOf";
    }
    return arrayOf;
})(facet);

_md.arrayOf = arrayOf;
/**
    element instanceOf
     A restriction to an object of a particular type
*/
var instanceOf = (function (facet) {
    _inherits(instanceOf, facet);
    function instanceOf(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(instanceOf.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, instanceOf);
        this.wzElement = "instanceOf";
    }
    return instanceOf;
})(facet);

_md.instanceOf = instanceOf;
/**
    element oneOf
     A restriction to an object of a particular type
*/
var oneOf = (function (facet) {
    _inherits(oneOf, facet);
    function oneOf(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(oneOf.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, oneOf);
        this.wzElement = "oneOf";
    }
    return oneOf;
})(facet);

_md.oneOf = oneOf;
/**
    element oneOfType
     A restriction to an object of a particular type
*/
var oneOfType = (function (facet) {
    _inherits(oneOfType, facet);
    function oneOfType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(oneOfType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, oneOfType);
        this.wzElement = "oneOfType";
    }
    return oneOfType;
})(facet);

_md.oneOfType = oneOfType;
/**
    element xvar
     ittf:
     var i
     var i = 0
     var f_alpha
     function
     param p
     var obj_beta
     {                |
     @ name stefi
     js:
     var i;
     var i = 0;
     var alpha = function(p) {
     ...
     };
     var obj_beta = { name: 'stefi' };
*/
var xvar = (function (statement) {
    _inherits(xvar, statement);
    function xvar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xvar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xvar);
        this.wzElement = "xvar";
    }
    xvar.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xvar.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return xvar;
})(statement);

_md.xvar = xvar;
/**
    element decl
     ittf:
     var i
     decl x = 0
     decl a
     {
     js:
     var i, x = 0, a = {};
*/
var decl = (function (statement) {
    _inherits(decl, statement);
    function decl(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(decl.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decl);
        this.wzElement = "decl";
    }
    return decl;
})(statement);

_md.decl = decl;
/**
    element xconst
     ittf
     same as var element
*/
var xconst = (function (statement) {
    _inherits(xconst, statement);
    function xconst(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xconst.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xconst);
        this.wzElement = "xconst";
    }
    xconst.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xconst.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return xconst;
})(statement);

_md.xconst = xconst;
/**
    element xlet
     ittf
     same as var element
*/
var xlet = (function (statement) {
    _inherits(xlet, statement);
    function xlet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xlet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xlet);
        this.wzElement = "xlet";
    }
    return xlet;
})(statement);

_md.xlet = xlet;
// element initValue
var initValue = (function (statement) {
    _inherits(initValue, statement);
    function initValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(initValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, initValue);
        this.wzElement = "initValue";
    }
    return initValue;
})(statement);

_md.initValue = initValue;
// element identifier
var identifier = (function (statement) {
    _inherits(identifier, statement);
    function identifier(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(identifier.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, identifier);
        this.wzElement = "identifier";
    }
    return identifier;
})(statement);

_md.identifier = identifier;
// element expressionMember
var expressionMember = (function (statement) {
    _inherits(expressionMember, statement);
    function expressionMember(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(expressionMember.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, expressionMember);
        this.wzElement = "expressionMember";
    }
    return expressionMember;
})(statement);

_md.expressionMember = expressionMember;
/**
    element iif
     ittf:
     iif a === b
     then 0
     else 1
     js:
     ( a === b ) ? 0 : 1
*/
var iif = (function (statement) {
    _inherits(iif, statement);
    function iif(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(iif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, iif);
        this.wzElement = "iif";
    }
    return iif;
})(statement);

_md.iif = iif;
// element test
var test = (function (statement) {
    _inherits(test, statement);
    function test(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(test.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, test);
        this.wzElement = "test";
    }
    return test;
})(statement);

_md.test = test;
// element then
var then = (function (statement) {
    _inherits(then, statement);
    function then(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(then.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, then);
        this.wzElement = "then";
    }
    return then;
})(statement);

_md.then = then;
// element xvoid
var xvoid = (function (statement) {
    _inherits(xvoid, statement);
    function xvoid(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xvoid.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xvoid);
        this.wzElement = "xvoid";
    }
    return xvoid;
})(statement);

_md.xvoid = xvoid;
// element not
var not = (function (statement) {
    _inherits(not, statement);
    function not(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(not.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, not);
        this.wzElement = "not";
    }
    return not;
})(statement);

_md.not = not;
// element or
var or = (function (statement) {
    _inherits(or, statement);
    function or(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(or.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, or);
        this.wzElement = "or";
    }
    return or;
})(statement);

_md.or = or;
// element and
var and = (function (statement) {
    _inherits(and, statement);
    function and(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(and.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, and);
        this.wzElement = "and";
    }
    return and;
})(statement);

_md.and = and;
// element op_eq_strict
var op_eq_strict = (function (statement) {
    _inherits(op_eq_strict, statement);
    function op_eq_strict(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_eq_strict.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_eq_strict);
        this.wzElement = "op_eq_strict";
    }
    return op_eq_strict;
})(statement);

_md.op_eq_strict = op_eq_strict;
// element op_noteq_strict
var op_noteq_strict = (function (statement) {
    _inherits(op_noteq_strict, statement);
    function op_noteq_strict(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_noteq_strict.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_noteq_strict);
        this.wzElement = "op_noteq_strict";
    }
    return op_noteq_strict;
})(statement);

_md.op_noteq_strict = op_noteq_strict;
// element op_eq
var op_eq = (function (statement) {
    _inherits(op_eq, statement);
    function op_eq(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_eq.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_eq);
        this.wzElement = "op_eq";
    }
    return op_eq;
})(statement);

_md.op_eq = op_eq;
// element op_noteq
var op_noteq = (function (statement) {
    _inherits(op_noteq, statement);
    function op_noteq(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_noteq.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_noteq);
        this.wzElement = "op_noteq";
    }
    return op_noteq;
})(statement);

_md.op_noteq = op_noteq;
// element op_minus
var op_minus = (function (statement) {
    _inherits(op_minus, statement);
    function op_minus(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_minus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_minus);
        this.wzElement = "op_minus";
    }
    return op_minus;
})(statement);

_md.op_minus = op_minus;
// element op_plus
var op_plus = (function (statement) {
    _inherits(op_plus, statement);
    function op_plus(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_plus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_plus);
        this.wzElement = "op_plus";
    }
    return op_plus;
})(statement);

_md.op_plus = op_plus;
// element op_times
var op_times = (function (statement) {
    _inherits(op_times, statement);
    function op_times(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_times.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_times);
        this.wzElement = "op_times";
    }
    return op_times;
})(statement);

_md.op_times = op_times;
// element op_div
var op_div = (function (statement) {
    _inherits(op_div, statement);
    function op_div(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_div.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_div);
        this.wzElement = "op_div";
    }
    return op_div;
})(statement);

_md.op_div = op_div;
// element op_power
var op_power = (function (statement) {
    _inherits(op_power, statement);
    function op_power(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_power.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_power);
        this.wzElement = "op_power";
    }
    return op_power;
})(statement);

_md.op_power = op_power;
// element op_mod
var op_mod = (function (statement) {
    _inherits(op_mod, statement);
    function op_mod(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_mod.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_mod);
        this.wzElement = "op_mod";
    }
    return op_mod;
})(statement);

_md.op_mod = op_mod;
// element bit_and
var bit_and = (function (statement) {
    _inherits(bit_and, statement);
    function bit_and(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bit_and.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bit_and);
        this.wzElement = "bit_and";
    }
    return bit_and;
})(statement);

_md.bit_and = bit_and;
// element bit_or
var bit_or = (function (statement) {
    _inherits(bit_or, statement);
    function bit_or(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bit_or.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bit_or);
        this.wzElement = "bit_or";
    }
    return bit_or;
})(statement);

_md.bit_or = bit_or;
// element op_xor
var op_xor = (function (statement) {
    _inherits(op_xor, statement);
    function op_xor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_xor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_xor);
        this.wzElement = "op_xor";
    }
    return op_xor;
})(statement);

_md.op_xor = op_xor;
// element op_xand
var op_xand = (function (statement) {
    _inherits(op_xand, statement);
    function op_xand(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_xand.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_xand);
        this.wzElement = "op_xand";
    }
    return op_xand;
})(statement);

_md.op_xand = op_xand;
// element bit_not
var bit_not = (function (statement) {
    _inherits(bit_not, statement);
    function bit_not(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bit_not.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bit_not);
        this.wzElement = "bit_not";
    }
    return bit_not;
})(statement);

_md.bit_not = bit_not;
// element bit_left_shift
var bit_left_shift = (function (statement) {
    _inherits(bit_left_shift, statement);
    function bit_left_shift(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bit_left_shift.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bit_left_shift);
        this.wzElement = "bit_left_shift";
    }
    return bit_left_shift;
})(statement);

_md.bit_left_shift = bit_left_shift;
// element bit_right_shift
var bit_right_shift = (function (statement) {
    _inherits(bit_right_shift, statement);
    function bit_right_shift(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bit_right_shift.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bit_right_shift);
        this.wzElement = "bit_right_shift";
    }
    return bit_right_shift;
})(statement);

_md.bit_right_shift = bit_right_shift;
// element zero_fill_right_shift
var zero_fill_right_shift = (function (statement) {
    _inherits(zero_fill_right_shift, statement);
    function zero_fill_right_shift(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(zero_fill_right_shift.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, zero_fill_right_shift);
        this.wzElement = "zero_fill_right_shift";
    }
    return zero_fill_right_shift;
})(statement);

_md.zero_fill_right_shift = zero_fill_right_shift;
/**
    element op_gt
     ittf
     var foo
     gt
     _ price
     @ id
     @ 100
*/
var op_gt = (function (statement) {
    _inherits(op_gt, statement);
    function op_gt(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_gt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_gt);
        this.wzElement = "op_gt";
    }
    return op_gt;
})(statement);

_md.op_gt = op_gt;
/**
    element op_ge
     ittf
     var foo
     >=
     _ price
     @ id
     @ 100
*/
var op_ge = (function (statement) {
    _inherits(op_ge, statement);
    function op_ge(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_ge.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_ge);
        this.wzElement = "op_ge";
    }
    return op_ge;
})(statement);

_md.op_ge = op_ge;
/**
    element op_lt
     ittf
     var foo
     lt
     _ price
     @ id
     @ 100
*/
var op_lt = (function (statement) {
    _inherits(op_lt, statement);
    function op_lt(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_lt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_lt);
        this.wzElement = "op_lt";
    }
    return op_lt;
})(statement);

_md.op_lt = op_lt;
/**
    element op_le
     ittf
     var foo
     <=
     _ price
     @ id
     @ 100
*/
var op_le = (function (statement) {
    _inherits(op_le, statement);
    function op_le(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(op_le.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_le);
        this.wzElement = "op_le";
    }
    return op_le;
})(statement);

_md.op_le = op_le;
// element xrequire
var xrequire = (function (statement) {
    _inherits(xrequire, statement);
    function xrequire(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xrequire.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xrequire);
        this.wzElement = "xrequire";
    }
    return xrequire;
})(statement);

_md.xrequire = xrequire;
/**
    element set
    
     The set element do not relate to any javascript synthax element but is
     fundamental in the 'js' language schema.
     A wizzi schema cannot have free node names (tags). User names
     cannot be node names but always must be node values.
     Whenever javascript has a left hand side item that is an user name
     must be preceded by set.
    
     ittf
     set user.name = 'stefi'
     js
     user.name = 'stefi';
    
     In a 'set' element the wzName is written as is. If it is a top statement
     the semicolon is added.
    
*/
var set = (function (statement) {
    _inherits(set, statement);
    function set(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(set.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, set);
        this.wzElement = "set";
    }
    return set;
})(statement);

_md.set = set;
/**
    element ximport
     reference http://2ality.com/2014/09/es6-modules-final.html
*/
var ximport = (function (statement) {
    _inherits(ximport, statement);
    function ximport(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ximport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ximport);
        this.wzElement = "ximport";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.from = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.xas = null
    }
    ximport.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 'a') {
            if (name === 'as') {
                this.xas = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    ximport.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    ximport.prototype.wzInitialize = function(ctx) {
        this.specifiers = [];
        var temp = [];
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            if (item.wzElement === 'jsPropertyOrValue') {
                this.specifiers.push(item);
            }
            else {
                temp.push(item);
            }
        }
        this.statements = temp;
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return ximport;
})(statement);

_md.ximport = ximport;
// element typeImport
var typeImport = (function (statement) {
    _inherits(typeImport, statement);
    function typeImport(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeImport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeImport);
        this.wzElement = "typeImport";
    }
    return typeImport;
})(statement);

_md.typeImport = typeImport;
/**
    element xexport
     reference http://2ality.com/2014/09/es6-modules-final.html
     ittf
     export var|let|const foo = Math.sqrt(2)
     export
     var|let|const foo = Math.sqrt(2)
     export
     var|let|const foo
     {
     @ name 'stefi'
     export
     function foo
     param x
     export default
     function
     { options
*/
var xexport = (function (statement) {
    _inherits(xexport, statement);
    function xexport(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xexport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xexport);
        this.wzElement = "xexport";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.from = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.xas = null
    }
    xexport.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 'a') {
            if (name === 'as') {
                this.xas = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xexport.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xexport.prototype.wzInitialize = function(ctx) {
        this.specifiers = [];
        var temp = [];
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            if (item.wzElement === 'jsPropertyOrValue') {
                this.specifiers.push(item);
            }
            else {
                temp.push(item);
            }
        }
        this.statements = temp;
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return xexport;
})(statement);

_md.xexport = xexport;
// element exportDefault
var exportDefault = (function (statement) {
    _inherits(exportDefault, statement);
    function exportDefault(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(exportDefault.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, exportDefault);
        this.wzElement = "exportDefault";
    }
    return exportDefault;
})(statement);

_md.exportDefault = exportDefault;
// element typeExport
var typeExport = (function (statement) {
    _inherits(typeExport, statement);
    function typeExport(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeExport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeExport);
        this.wzElement = "typeExport";
    }
    return typeExport;
})(statement);

_md.typeExport = typeExport;
// element typeExportNamespace
var typeExportNamespace = (function (statement) {
    _inherits(typeExportNamespace, statement);
    function typeExportNamespace(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeExportNamespace.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeExportNamespace);
        this.wzElement = "typeExportNamespace";
    }
    return typeExportNamespace;
})(statement);

_md.typeExportNamespace = typeExportNamespace;
// element typeRequire
var typeRequire = (function (statement) {
    _inherits(typeRequire, statement);
    function typeRequire(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeRequire.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeRequire);
        this.wzElement = "typeRequire";
    }
    return typeRequire;
})(statement);

_md.typeRequire = typeRequire;
/**
    element xif
    
     ittf:
     if a === b
     elif a === c
     else
     js:
     if ( a === b ) {
     }
     else if ( a === c ) {
     }
     else {
     }
    
*/
var xif = (function (statement) {
    _inherits(xif, statement);
    function xif(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xif);
        this.wzElement = "xif";
    }
    return xif;
})(statement);

_md.xif = xif;
/**
    element elif
     ittf
     see 'if' element
*/
var elif = (function (statement) {
    _inherits(elif, statement);
    function elif(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(elif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, elif);
        this.wzElement = "elif";
    }
    return elif;
})(statement);

_md.elif = elif;
/**
    element xelse
     ittf
     see 'if' element
*/
var xelse = (function (statement) {
    _inherits(xelse, statement);
    function xelse(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xelse.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xelse);
        this.wzElement = "xelse";
    }
    return xelse;
})(statement);

_md.xelse = xelse;
/**
    element xfor
     ittf
     for var k in object3
     log k, object3[k]
    
*/
var xfor = (function (statement) {
    _inherits(xfor, statement);
    function xfor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xfor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfor);
        this.wzElement = "xfor";
    }
    return xfor;
})(statement);

_md.xfor = xfor;
/**
    element foreach
     ittf
     foreach item in arr5
     log 'item ', i, item
    
     js
     var i, i_len=arr5.length, item;
     for (i=0; i<i_len; i++) {
     item = arr5[i];
     console.log('item ', i, item);
     }
    
*/
var foreach = (function (statement) {
    _inherits(foreach, statement);
    function foreach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(foreach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, foreach);
        this.wzElement = "foreach";
    }
    return foreach;
})(statement);

_md.foreach = foreach;
/**
    element backeach
     ittf
     backeach item in arr5
     log 'item ', i, item
     js
     var i, i_len=arr5.length, item;
     for (i= (i_len-1); i>-1; i--) {
     item = arr5[i];
     console.log('item ', i, item);
     }
    
*/
var backeach = (function (statement) {
    _inherits(backeach, statement);
    function backeach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(backeach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, backeach);
        this.wzElement = "backeach";
    }
    return backeach;
})(statement);

_md.backeach = backeach;
/**
    element each
     ittf
     each item in arr5 [this]
     log 'item ', i, item
     js
     arr5.forEach(function(item, i, array) {
     console.log('item ', i, item);
     }, this);
    
*/
var each = (function (statement) {
    _inherits(each, statement);
    function each(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(each.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, each);
        this.wzElement = "each";
    }
    return each;
})(statement);

_md.each = each;
/**
    element filter
     ittf
     filter item in arr5 [this]
     return item > 20
     js
     arr5.filter(function(item, i, array) {
     return item > 20
     }, this);
    
*/
var filter = (function (statement) {
    _inherits(filter, statement);
    function filter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(filter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, filter);
        this.wzElement = "filter";
    }
    return filter;
})(statement);

_md.filter = filter;
/**
    element find
     ittf
     find item in arr5 [this]
     return item == 20
     js
     arr5.item(function(item, i, array) {
     return item == 20
     }, this);
    
*/
var find = (function (statement) {
    _inherits(find, statement);
    function find(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(find.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, find);
        this.wzElement = "find";
    }
    return find;
})(statement);

_md.find = find;
/**
    element reduce
     ittf
     reduce item in arr5 0
     return item_acc + item
     js
     arr5.reduce(function(acc, item, item_index, array) {
     return item_acc + item
     }, 0);
    
*/
var reduce = (function (statement) {
    _inherits(reduce, statement);
    function reduce(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reduce.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reduce);
        this.wzElement = "reduce";
    }
    return reduce;
})(statement);

_md.reduce = reduce;
/**
    element concat
     ittf
     concat arr5
     @ 'item1'
     [
     @ 'item2'
     @ 'item3'
     js
     arr5.concat('item1', ['item2', 'item3']);
    
*/
var concat = (function (statement) {
    _inherits(concat, statement);
    function concat(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(concat.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, concat);
        this.wzElement = "concat";
    }
    return concat;
})(statement);

_md.concat = concat;
/**
    element xbreak
     ittf
     foreach item in arr5
     ...
     break
    
*/
var xbreak = (function (statement) {
    _inherits(xbreak, statement);
    function xbreak(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xbreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xbreak);
        this.wzElement = "xbreak";
    }
    return xbreak;
})(statement);

_md.xbreak = xbreak;
/**
    element xcontinue
     ittf
     foreach item in arr5
     ...
     continue
    
*/
var xcontinue = (function (statement) {
    _inherits(xcontinue, statement);
    function xcontinue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xcontinue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcontinue);
        this.wzElement = "xcontinue";
    }
    return xcontinue;
})(statement);

_md.xcontinue = xcontinue;
/**
    element label
     ittf
     var i, j
     label loop1
     for i = 0; i < 3; i++
     # The first for statement is labeled "loop1"
     label loop2
     for j = 0; j < 3; j++
     # The second for statement is labeled "loop2"
     if i === 1 && j === 1
     continue loop1
     log 'i = ' + i + ', j = ' + j
*/
var label = (function (statement) {
    _inherits(label, statement);
    function label(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(label.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, label);
        this.wzElement = "label";
    }
    return label;
})(statement);

_md.label = label;
/**
    element xwhile
    
     ittf
     set parent = node.parent
     while parent
     set parent = parent.parent
    
*/
var xwhile = (function (statement) {
    _inherits(xwhile, statement);
    function xwhile(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xwhile.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xwhile);
        this.wzElement = "xwhile";
    }
    return xwhile;
})(statement);

_md.xwhile = xwhile;
/**
    element xdo
    
     ittf
     var result = ''
     var i = 0
     do i < 5
     set i += 1
     set result += i + ' '
    
     js
     var result = '';
     var i = 0;
     do {
     i += 1;
     result += i + ' ';
     } while (i < 5);
    
*/
var xdo = (function (statement) {
    _inherits(xdo, statement);
    function xdo(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xdo.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdo);
        this.wzElement = "xdo";
    }
    return xdo;
})(statement);

_md.xdo = xdo;
/**
    element xswitch
    
     ittf
     switch key
     case 1
     _ first()
     case 2
     _ second()
     default
     _ last()
    
*/
var xswitch = (function (statement) {
    _inherits(xswitch, statement);
    function xswitch(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xswitch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xswitch);
        this.wzElement = "xswitch";
    }
    return xswitch;
})(statement);

_md.xswitch = xswitch;
/**
    element xcase
     ittf
     see 'switch' element
*/
var xcase = (function (statement) {
    _inherits(xcase, statement);
    function xcase(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xcase.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcase);
        this.wzElement = "xcase";
    }
    return xcase;
})(statement);

_md.xcase = xcase;
/**
    element xdefault
     ittf
     see 'switch' element
*/
var xdefault = (function (statement) {
    _inherits(xdefault, statement);
    function xdefault(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xdefault.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdefault);
        this.wzElement = "xdefault";
    }
    return xdefault;
})(statement);

_md.xdefault = xdefault;
/**
    element xtry
    
     ittf
     try
     set num =/ 0
     catch ex
     log ex.message
     finally
     _ reset()
    
*/
var xtry = (function (statement) {
    _inherits(xtry, statement);
    function xtry(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xtry.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xtry);
        this.wzElement = "xtry";
    }
    return xtry;
})(statement);

_md.xtry = xtry;
/**
    element xcatch
     ittf
     see 'try' element
*/
var xcatch = (function (statement) {
    _inherits(xcatch, statement);
    function xcatch(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xcatch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcatch);
        this.wzElement = "xcatch";
    }
    return xcatch;
})(statement);

_md.xcatch = xcatch;
/**
    element xfinally
     ittf
     see 'try' element
*/
var xfinally = (function (statement) {
    _inherits(xfinally, statement);
    function xfinally(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xfinally.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfinally);
        this.wzElement = "xfinally";
    }
    return xfinally;
})(statement);

_md.xfinally = xfinally;
/**
    element xthrow
     ittf
     see 'try' element
*/
var xthrow = (function (statement) {
    _inherits(xthrow, statement);
    function xthrow(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xthrow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xthrow);
        this.wzElement = "xthrow";
    }
    return xthrow;
})(statement);

_md.xthrow = xthrow;
/**
    element xdelete
     ittf
     delete myvar
*/
var xdelete = (function (statement) {
    _inherits(xdelete, statement);
    function xdelete(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xdelete.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdelete);
        this.wzElement = "xdelete";
    }
    return xdelete;
})(statement);

_md.xdelete = xdelete;
// element sequence
var sequence = (function (statement) {
    _inherits(sequence, statement);
    function sequence(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(sequence.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, sequence);
        this.wzElement = "sequence";
    }
    return sequence;
})(statement);

_md.sequence = sequence;
// element typeParameterInst
var typeParameterInst = (function (statement) {
    _inherits(typeParameterInst, statement);
    function typeParameterInst(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeParameterInst.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeParameterInst);
        this.wzElement = "typeParameterInst";
    }
    return typeParameterInst;
})(statement);

_md.typeParameterInst = typeParameterInst;
/**
    element call
     A function call.
     ittf:
     _ sayHello('stefi', 10)
     _ init
     {
     @ key 0
     function
     param value
     return calc(value)
*/
var call = (function (statement) {
    _inherits(call, statement);
    function call(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(call.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, call);
        this.wzElement = "call";
        // relation typeParameterInst
        this.typeParameterInsts = [];
    }
    call.prototype.addTypeParameterInst = function(name, sourceLineInfo) {
        var retval = new _md.typeParameterInst(name, sourceLineInfo);
        retval.wzParent = this;
        this.typeParameterInsts.push(retval);
        return retval;
    }
    call.prototype.getTypeParameterInst = function(name) {
        var found = null;
        this.typeParameterInsts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    call.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == ':') {
            if (name === ':param') {
                return this.wzLoadToChildColl(child, _md.typeParameterInst, this.typeParameterInsts);
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    call.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    call.prototype.wzVerify = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    call.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzInitialize(ctx);
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return call;
})(statement);

_md.call = call;
/**
    element memberCall
     ittf:
     set value
     _ init
     ._calc
     js:
     value = init().calc()
*/
var memberCall = (function (statement) {
    _inherits(memberCall, statement);
    function memberCall(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(memberCall.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberCall);
        this.wzElement = "memberCall";
        // relation typeParameterInst
        this.typeParameterInsts = [];
    }
    memberCall.prototype.addTypeParameterInst = function(name, sourceLineInfo) {
        var retval = new _md.typeParameterInst(name, sourceLineInfo);
        retval.wzParent = this;
        this.typeParameterInsts.push(retval);
        return retval;
    }
    memberCall.prototype.getTypeParameterInst = function(name) {
        var found = null;
        this.typeParameterInsts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    memberCall.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == ':') {
            if (name === ':param') {
                return this.wzLoadToChildColl(child, _md.typeParameterInst, this.typeParameterInsts);
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    memberCall.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    memberCall.prototype.wzVerify = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    memberCall.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzInitialize(ctx);
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return memberCall;
})(statement);

_md.memberCall = memberCall;
/**
    element decoratorCall
     ittf:
     @_ alpha
     @ 200
     function
     return 'a';
     js:
     @alpha(200, function() { return 'a'; })
*/
var decoratorCall = (function (statement) {
    _inherits(decoratorCall, statement);
    function decoratorCall(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(decoratorCall.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decoratorCall);
        this.wzElement = "decoratorCall";
        // relation typeParameterInst
        this.typeParameterInsts = [];
    }
    decoratorCall.prototype.addTypeParameterInst = function(name, sourceLineInfo) {
        var retval = new _md.typeParameterInst(name, sourceLineInfo);
        retval.wzParent = this;
        this.typeParameterInsts.push(retval);
        return retval;
    }
    decoratorCall.prototype.getTypeParameterInst = function(name) {
        var found = null;
        this.typeParameterInsts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    decoratorCall.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == ':') {
            if (name === ':param') {
                return this.wzLoadToChildColl(child, _md.typeParameterInst, this.typeParameterInsts);
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    decoratorCall.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    decoratorCall.prototype.wzVerify = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    decoratorCall.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.typeParameterInsts, i_len=this.typeParameterInsts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeParameterInsts[i];
            item.wzInitialize(ctx);
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return decoratorCall;
})(statement);

_md.decoratorCall = decoratorCall;
/**
    element callOnValue
     ittf:
     _ getFunction()
     (
     @ 'stefi'
     js:
     getFunction()('stefi')
*/
var callOnValue = (function (statement) {
    _inherits(callOnValue, statement);
    function callOnValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(callOnValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, callOnValue);
        this.wzElement = "callOnValue";
    }
    return callOnValue;
})(statement);

_md.callOnValue = callOnValue;
/**
    element memberAccess
     ittf:
     set name = obj
     . name
     js:
     name = obj.name
*/
var memberAccess = (function (statement) {
    _inherits(memberAccess, statement);
    function memberAccess(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(memberAccess.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberAccess);
        this.wzElement = "memberAccess";
    }
    return memberAccess;
})(statement);

_md.memberAccess = memberAccess;
/**
    element memberAccessComputed
     ittf:
     set name = obj
     .[ name
     js:
     name = obj[name]
*/
var memberAccessComputed = (function (statement) {
    _inherits(memberAccessComputed, statement);
    function memberAccessComputed(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(memberAccessComputed.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberAccessComputed);
        this.wzElement = "memberAccessComputed";
    }
    return memberAccessComputed;
})(statement);

_md.memberAccessComputed = memberAccessComputed;
/**
    element jsObject
     Declares an object structure.
     ittf:
     var user
     {
     @ name 'stefi'
     @ birth 1957
    
     It can be used everywhere an object can be used
     ittf
     var user
     _ db.getUser
     {
     @ name 'arthur'
    
*/
var jsObject = (function (statement) {
    _inherits(jsObject, statement);
    function jsObject(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsObject.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsObject);
        this.wzElement = "jsObject";
    }
    jsObject.prototype.wzInitialize = function(ctx) {
        this.isDslCall = false;
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            if (item.wzElement === 'namedCallParam') {
                this.isDslCall = true;
            }
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return jsObject;
})(statement);

_md.jsObject = jsObject;
/**
    element jsArray
     Declares an array structure.
     ittf:
     var users
     [
     {
     @ name 'stefi'
     @ birth 1957
     {
     @ name 'arthur'
     @ birth 1955
    
*/
var jsArray = (function (statement) {
    _inherits(jsArray, statement);
    function jsArray(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsArray.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsArray);
        this.wzElement = "jsArray";
    }
    return jsArray;
})(statement);

_md.jsArray = jsArray;
/**
    element jsPropertyOrValue
     used by import/export specifiers
     This element is used in many contexts with a different semantic.
    
     As children of a 'jsObject' element it is an object property.
     ittf
     var user
     {
     @ name 'annie'
    
     As children of a 'call', 'memberCall', 'decoratorCall', 'callOnValue' element
     is a function call argument.
     ittf
     var user
     _ db.getUser
     @ name 'annie'
    
     As a children of an element derived from the 'htmlelement' element
     is an html element attribute.
     ittf
     m render
     return
     div
     button Press me
     @ onClick { this.handleClick() }
    
     As a children of a 'import' element
     ittf
     import
     @ functionX
     from 'module-a'
    
*/
var jsPropertyOrValue = (function (statement) {
    _inherits(jsPropertyOrValue, statement);
    function jsPropertyOrValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsPropertyOrValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsPropertyOrValue);
        this.wzElement = "jsPropertyOrValue";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.xas = null
    }
    jsPropertyOrValue.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 'a') {
            if (name === 'as') {
                this.xas = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    jsPropertyOrValue.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    jsPropertyOrValue.prototype.wzInitialize = function(ctx) {
        this.isDslCall = false;
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            if (item.wzElement === 'namedCallParam') {
                this.isDslCall = true;
            }
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return jsPropertyOrValue;
})(statement);

_md.jsPropertyOrValue = jsPropertyOrValue;
// element jsRest
var jsRest = (function (statement) {
    _inherits(jsRest, statement);
    function jsRest(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsRest.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsRest);
        this.wzElement = "jsRest";
    }
    return jsRest;
})(statement);

_md.jsRest = jsRest;
/**
    element namedCallParam
     graphql-query
     { allMarkdownRemark
     : sort
     {
     @ order DESC
     @ fields
     [
     @ frontmatter___date
     : limit 1000
*/
var namedCallParam = (function (statement) {
    _inherits(namedCallParam, statement);
    function namedCallParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(namedCallParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, namedCallParam);
        this.wzElement = "namedCallParam";
    }
    return namedCallParam;
})(statement);

_md.namedCallParam = namedCallParam;
/**
    element jsonStatementTree
     Contains the stringified tree structure of a statement element.
     Normally this element is generated and is usefull when the 'js' ittf document
     is itself a generated artifact.
    
     The artifact generator will JSON.parse the wzName property
     of this element and will obtain a 'statement' element to process.
*/
var jsonStatementTree = (function (statement) {
    _inherits(jsonStatementTree, statement);
    function jsonStatementTree(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsonStatementTree.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsonStatementTree);
        this.wzElement = "jsonStatementTree";
    }
    return jsonStatementTree;
})(statement);

_md.jsonStatementTree = jsonStatementTree;
/**
    element xfunction
    
     ittf
     function sum
     param a
     param a
     return a + b
    
*/
var xfunction = (function (statement) {
    _inherits(xfunction, statement);
    function xfunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfunction);
        this.wzElement = "xfunction";
        this.xasync = false;
        this.xgenerator = false;
        // relation param
        this.params = [];
    }
    xfunction.prototype.addParam = function(name, sourceLineInfo) {
        var retval = new _md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    xfunction.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xfunction.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayParam, this.params);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectParam, this.params);
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadToChildColl(child, _md.arrayOrObjectParam, this.params);
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadToChildColl(child, _md.anyParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadToChildColl(child, _md.dateParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadToChildColl(child, _md.functionParam, this.params);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, _md.nodeParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'a') {
            if (name === 'async') {
                this.xasync = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadToChildColl(child, _md.exactParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, _md.param, this.params);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadToChildColl(child, _md.shapeParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadToChildColl(child, _md.numberParam, this.params);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadToChildColl(child, _md.oneOfParam, this.params);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringParam, this.params);
            }
            else if (name === 'symbol') {
                return this.wzLoadToChildColl(child, _md.symbolParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanParam, this.params);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, _md.elementParam, this.params);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadToChildColl(child, _md.callbackParam, this.params);
            }
        }
        if (_l == 9 && _ch == 'g') {
            if (name === 'generator') {
                this.xgenerator = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadToChildColl(child, _md.instanceOfParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadToChildColl(child, _md.oneOfTypeParam, this.params);
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadToChildColl(child, _md.reactStyleParam, this.params);
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadToChildColl(child, _md.optionsCallbackParam, this.params);
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xfunction.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xfunction.prototype.wzVerify = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    xfunction.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        this.paramNames = [];
        this.constrainedParams = [];
        this.hasCallbackParam = false;
        this.hasOptionsCallbackParam = false;
        var i, i_items=this.params, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            if (item.wzElement === 'callbackParam') {
                this.paramNames.push('callback');
                this.hasCallbackParam = true;
            }
            else if (item.wzElement === 'optionsCallbackParam') {
                this.paramNames.push('options');
                this.paramNames.push('callback');
                this.hasOptionsCallbackParam = true;
            }
            else {
                if (item.textified && item.textified.length > 0) {
                    this.paramNames.push(item.textified);
                }
                else {
                    this.paramNames.push(item.wzName);
                }
            }
            this.constrainedParams.push(item);
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return xfunction;
})(statement);

_md.xfunction = xfunction;
/**
    element iife
     ittf
     iife
     unary-prefix ;
     param x
     param y
     return alpha = x + ': ' + y
     (
     @ key
     @ id
     js
     ;(function(x, y) {
     return alpha = x + ': ' + y;
     })(key, id)
    
*/
var iife = (function (xfunction) {
    _inherits(iife, xfunction);
    function iife(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(iife.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, iife);
        this.wzElement = "iife";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.unary_prefix = null
    }
    iife.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 12 && _ch == 'u') {
            if (name === 'unary-prefix') {
                this.unary_prefix = child.v; return true;
            }
            else if (name === 'unary_prefix') {
                this.unary_prefix = child.v; return true;
            }
        }
        ok = _md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    iife.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return iife;
})(xfunction);

_md.iife = iife;
/**
    element arrowfunction
     es6 feature
    
     ittf
     var handler
     =>
     param event
    
*/
var arrowfunction = (function (xfunction) {
    _inherits(arrowfunction, xfunction);
    function arrowfunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrowfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrowfunction);
        this.wzElement = "arrowfunction";
    }
    return arrowfunction;
})(xfunction);

_md.arrowfunction = arrowfunction;
/**
    element asyncarrowfunction
     es6 feature
    
     ittf
     var handler
     async=>
     param event
    
*/
var asyncarrowfunction = (function (xfunction) {
    _inherits(asyncarrowfunction, xfunction);
    function asyncarrowfunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(asyncarrowfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, asyncarrowfunction);
        this.wzElement = "asyncarrowfunction";
    }
    return asyncarrowfunction;
})(xfunction);

_md.asyncarrowfunction = asyncarrowfunction;
/**
    element generatorfunction
     es6 feature
     reference https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Operators/yield
     ittf
     function* foo
     var index = 0
     while index <= 2
     yield index++
    
*/
var generatorfunction = (function (xfunction) {
    _inherits(generatorfunction, xfunction);
    function generatorfunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(generatorfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, generatorfunction);
        this.wzElement = "generatorfunction";
    }
    return generatorfunction;
})(xfunction);

_md.generatorfunction = generatorfunction;
/**
    element asyncfunction
     es6 feature
     reference https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function
     ittf
     async-function foo
*/
var asyncfunction = (function (xfunction) {
    _inherits(asyncfunction, xfunction);
    function asyncfunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(asyncfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, asyncfunction);
        this.wzElement = "asyncfunction";
    }
    return asyncfunction;
})(xfunction);

_md.asyncfunction = asyncfunction;
/**
    element xyield
     es6 feature
     reference https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Operators/yield
     ittf
     function* foo
     var index = 0
     while index <= 2
     yield index++
*/
var xyield = (function (statement) {
    _inherits(xyield, statement);
    function xyield(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xyield.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xyield);
        this.wzElement = "xyield";
    }
    return xyield;
})(statement);

_md.xyield = xyield;
/**
    element xawait
     es6 feature
     reference https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await
     ittf
     async-function foo
     var index
     await
     _ mypromisefunc
    
*/
var xawait = (function (statement) {
    _inherits(xawait, statement);
    function xawait(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xawait.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xawait);
        this.wzElement = "xawait";
    }
    return xawait;
})(statement);

_md.xawait = xawait;
/**
    element xreturn
     Can return any object or function.
    
     ittf
     return 0
     return
     {
     @ result a + b
    
     return
     _ Math.sum
     @ a
     @ b
    
     return
     function
     param a
     param b
     ...
*/
var xreturn = (function (statement) {
    _inherits(xreturn, statement);
    function xreturn(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xreturn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xreturn);
        this.wzElement = "xreturn";
    }
    return xreturn;
})(statement);

_md.xreturn = xreturn;
/**
    element xclass
     A javascript class
    
     ittf
     class Horse
     super Animal
     ctor
     string name
     required
     { options
     boolean canSpeakLikeAHuman
     required
     set this.name = name
     set this.options = options
     m sayHello
     if this.options.canSpeakLikeAHuman
     log 'Hello i am ' + this.name
     else
     log 'Hii i am ' + this.name
    
*/
var xclass = (function (statement) {
    _inherits(xclass, statement);
    function xclass(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xclass.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xclass);
        this.wzElement = "xclass";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.super = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.extends = null
    }
    xclass.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 's') {
            if (name === 'super') {
                this.super = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'extends') {
                this.extends = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xclass.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xclass.prototype.wzInitialize = function(ctx) {
        ctx.modelState = ctx.modelState || {};
        ctx.modelState.hasClasses = true;
        if (this.extends && this.extends.length > 0) {
            this.super = this.extends;
        }
        else {
            var tokens = this.wzName.split(':');
            if (tokens.length == 2) {
                this.wzName = tokens[0];
                this.super = tokens[1];
            }
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    xclass.prototype.findCtor = function() {
        return _.find(this.statements, function(item) { return item.wzElement === 'ctor' });
    }
    return xclass;
})(statement);

_md.xclass = xclass;
/**
    element ctor
    
     ittf
     class Horse
     super Animal
     ctor
     string name
     base name
    
*/
var ctor = (function (xfunction) {
    _inherits(ctor, xfunction);
    function ctor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ctor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ctor);
        this.wzElement = "ctor";
        // relation base
        this.bases = [];
    }
    ctor.prototype.addBase = function(name, sourceLineInfo) {
        var retval = new _md.base(name, sourceLineInfo);
        retval.wzParent = this;
        this.bases.push(retval);
        return retval;
    }
    ctor.prototype.getBase = function(name) {
        var found = null;
        this.bases.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    ctor.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'b') {
            if (name === 'base') {
                return this.wzLoadToChildColl(child, _md.base, this.bases);
            }
        }
        ok = _md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    ctor.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    ctor.prototype.wzVerify = function(ctx) {
        var i, i_items=this.bases, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            item.wzVerify(ctx);
        }
        _md.xfunction.prototype.wzVerify.call(this, ctx);
    }
    ctor.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.bases, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            item.wzInitialize(ctx);
        }
        _md.xfunction.prototype.wzInitialize.call(this, ctx);
    }
    ctor.prototype.getBaseArgs = function() {
        var ret = [];
        var i, i_items=this.bases, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            ret.push(item.wzName);
        }
        return ret;
    }
    return ctor;
})(xfunction);

_md.ctor = ctor;
/**
    element base
    
     ittf
     see 'ctor' elementg example
*/
var base = (function (statement) {
    _inherits(base, statement);
    function base(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(base.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, base);
        this.wzElement = "base";
    }
    return base;
})(statement);

_md.base = base;
/**
    element method
     ittf
     class Foo
     m sayHello
     string name
     log 'Hello ' + name
*/
var method = (function (xfunction) {
    _inherits(method, xfunction);
    function method(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(method.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, method);
        this.wzElement = "method";
        this.static = false;
        this.async = false;
    }
    method.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 'a') {
            if (name === 'async') {
                this.async = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'static') {
                this.static = parseboolean(child.v, true, child); return true;
            }
        }
        ok = _md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    method.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return method;
})(xfunction);

_md.method = method;
/**
    element property
     ittf
     class Foo
     property options
*/
var property = (function (xfunction) {
    _inherits(property, xfunction);
    function property(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(property.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, property);
        this.wzElement = "property";
        this.static = false;
    }
    property.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 's') {
            if (name === 'static') {
                this.static = parseboolean(child.v, true, child); return true;
            }
        }
        ok = _md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    property.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return property;
})(xfunction);

_md.property = property;
/**
    element get
     es6 - Defines a getter on a new object in the object initializer
     reference https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Functions/get
    
     ittf
     var obj
     {
     @ log ['test']
     get latest
     if this.log.length == 0
     return undefined
     return this.log[this.log.length - 1]
    
*/
var get = (function (statement) {
    _inherits(get, statement);
    function get(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(get.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, get);
        this.wzElement = "get";
    }
    return get;
})(statement);

_md.get = get;
/**
    element xnew
     ittf:
     var h
     new Hello
     var j
     new Hello
     function
     param p
     + ...
     js:
     var h = new Hello();
     var j = new Hello(function(p) { ... });
*/
var xnew = (function (statement) {
    _inherits(xnew, statement);
    function xnew(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xnew.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xnew);
        this.wzElement = "xnew";
    }
    return xnew;
})(statement);

_md.xnew = xnew;
/**
    element type
     used by the 'new' element
     see wizzi-codegen.js.statements.var
     TODO example
     FIXME Cannot find examples and the reason for this element
    
*/
var type = (function (statement) {
    _inherits(type, statement);
    function type(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(type.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, type);
        this.wzElement = "type";
    }
    return type;
})(statement);

_md.type = type;
// element template
var template = (function (statement) {
    _inherits(template, statement);
    function template(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(template.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, template);
        this.wzElement = "template";
    }
    template.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.__templateChild = true;
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return template;
})(statement);

_md.template = template;
// element taggedTemplate
var taggedTemplate = (function (statement) {
    _inherits(taggedTemplate, statement);
    function taggedTemplate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(taggedTemplate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, taggedTemplate);
        this.wzElement = "taggedTemplate";
    }
    taggedTemplate.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.__templateChild = true;
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return taggedTemplate;
})(statement);

_md.taggedTemplate = taggedTemplate;
/**
    element tagFunctionCall
     ittf:
     _` fname
     + bla bla
     + bla bla
     js:
     fname`
     bla bla
     bla bla
     `;
*/
var tagFunctionCall = (function (statement) {
    _inherits(tagFunctionCall, statement);
    function tagFunctionCall(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tagFunctionCall.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tagFunctionCall);
        this.wzElement = "tagFunctionCall";
    }
    tagFunctionCall.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.statements, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.__templateChild = true;
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return tagFunctionCall;
})(statement);

_md.tagFunctionCall = tagFunctionCall;
// element macroExpr
var macroExpr = (function (statement) {
    _inherits(macroExpr, statement);
    function macroExpr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(macroExpr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, macroExpr);
        this.wzElement = "macroExpr";
    }
    return macroExpr;
})(statement);

_md.macroExpr = macroExpr;
// element reactComponent
var reactComponent = (function (statement) {
    _inherits(reactComponent, statement);
    function reactComponent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reactComponent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reactComponent);
        this.wzElement = "reactComponent";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.super = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.extends = null
    }
    reactComponent.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 's') {
            if (name === 'super') {
                this.super = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'extends') {
                this.extends = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    reactComponent.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    reactComponent.prototype.wzInitialize = function(ctx) {
        ctx.modelState = ctx.modelState || {};
        ctx.modelState.hasClasses = true;
        if (this.extends && this.extends.length > 0) {
            this.super = this.extends;
        }
        else {
            var tokens = this.wzName.split(':');
            if (tokens.length == 2) {
                this.wzName = tokens[0];
                this.super = tokens[1];
            }
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return reactComponent;
})(statement);

_md.reactComponent = reactComponent;
// element reactFunction
var reactFunction = (function (statement) {
    _inherits(reactFunction, statement);
    function reactFunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reactFunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reactFunction);
        this.wzElement = "reactFunction";
    }
    return reactFunction;
})(statement);

_md.reactFunction = reactFunction;
// element style
var style = (function (statement) {
    _inherits(style, statement);
    function style(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, style);
        this.wzElement = "style";
    }
    return style;
})(statement);

_md.style = style;
// element prop
var prop = (function (statement) {
    _inherits(prop, statement);
    function prop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(prop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, prop);
        this.wzElement = "prop";
        this.isRequired = false;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.defaultValue = null
        // relation param
        // react propType
        this.param = null;
    }
    prop.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadOneToOne(child, _md.arrayParam, 'param');
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.objectParam, 'param');
            }
        }
        if (_l == 2 && _ch == '[') {
            if (name === '[{') {
                return this.wzLoadOneToOne(child, _md.arrayOrObjectParam, 'param');
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'any') {
                return this.wzLoadOneToOne(child, _md.anyParam, 'param');
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'date') {
                return this.wzLoadOneToOne(child, _md.dateParam, 'param');
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'func') {
                return this.wzLoadOneToOne(child, _md.functionParam, 'param');
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadOneToOne(child, _md.nodeParam, 'param');
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'exact') {
                return this.wzLoadOneToOne(child, _md.exactParam, 'param');
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'oneof') {
                return this.wzLoadOneToOne(child, _md.oneOfParam, 'param');
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadOneToOne(child, _md.param, 'param');
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'shape') {
                return this.wzLoadOneToOne(child, _md.shapeParam, 'param');
            }
        }
        if (_l == 6 && _ch == 'n') {
            if (name === 'number') {
                return this.wzLoadOneToOne(child, _md.numberParam, 'param');
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'one-of') {
                return this.wzLoadOneToOne(child, _md.oneOfParam, 'param');
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadOneToOne(child, _md.stringParam, 'param');
            }
            else if (name === 'symbol') {
                return this.wzLoadOneToOne(child, _md.symbolParam, 'param');
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadOneToOne(child, _md.booleanParam, 'param');
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'default') {
                this.defaultValue = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadOneToOne(child, _md.elementParam, 'param');
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'callback') {
                return this.wzLoadOneToOne(child, _md.callbackParam, 'param');
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'required') {
                this.isRequired = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'oneoftype') {
                return this.wzLoadOneToOne(child, _md.oneOfTypeParam, 'param');
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'instanceof') {
                return this.wzLoadOneToOne(child, _md.instanceOfParam, 'param');
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'reactstyle') {
                return this.wzLoadOneToOne(child, _md.reactStyleParam, 'param');
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'instance-of') {
                return this.wzLoadOneToOne(child, _md.instanceOfParam, 'param');
            }
        }
        if (_l == 11 && _ch == 'o') {
            if (name === 'one-of-type') {
                return this.wzLoadOneToOne(child, _md.oneOfTypeParam, 'param');
            }
        }
        if (_l == 11 && _ch == 'r') {
            if (name === 'react-style') {
                return this.wzLoadOneToOne(child, _md.reactStyleParam, 'param');
            }
        }
        if (_l == 15 && _ch == 'o') {
            if (name === 'optionscallback') {
                return this.wzLoadOneToOne(child, _md.optionsCallbackParam, 'param');
            }
        }
        if (_l == 16 && _ch == 'o') {
            if (name === 'options-callback') {
                return this.wzLoadOneToOne(child, _md.optionsCallbackParam, 'param');
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    prop.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    prop.prototype.wzVerify = function(ctx) {
        if (this.param != null) {
            this.param.wzVerify(ctx);
        }
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    prop.prototype.wzInitialize = function(ctx) {
        if (this.param != null) {
            this.param.wzInitialize(ctx);
        }
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return prop;
})(statement);

_md.prop = prop;
// element reactMember
var reactMember = (function (statement) {
    _inherits(reactMember, statement);
    function reactMember(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reactMember.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reactMember);
        this.wzElement = "reactMember";
    }
    reactMember.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    reactMember.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return reactMember;
})(statement);

_md.reactMember = reactMember;
// element state
var state = (function (reactMember) {
    _inherits(state, reactMember);
    function state(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(state.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, state);
        this.wzElement = "state";
    }
    return state;
})(reactMember);

_md.state = state;
// element setState
var setState = (function (reactMember) {
    _inherits(setState, reactMember);
    function setState(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(setState.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, setState);
        this.wzElement = "setState";
    }
    return setState;
})(reactMember);

_md.setState = setState;
// element render
var render = (function (reactMember) {
    _inherits(render, reactMember);
    function render(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(render.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, render);
        this.wzElement = "render";
    }
    return render;
})(reactMember);

_md.render = render;
// element willMount
var willMount = (function (reactMember) {
    _inherits(willMount, reactMember);
    function willMount(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(willMount.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, willMount);
        this.wzElement = "willMount";
    }
    return willMount;
})(reactMember);

_md.willMount = willMount;
// element didMount
var didMount = (function (reactMember) {
    _inherits(didMount, reactMember);
    function didMount(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(didMount.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, didMount);
        this.wzElement = "didMount";
    }
    return didMount;
})(reactMember);

_md.didMount = didMount;
// element willUnmount
var willUnmount = (function (reactMember) {
    _inherits(willUnmount, reactMember);
    function willUnmount(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(willUnmount.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, willUnmount);
        this.wzElement = "willUnmount";
    }
    return willUnmount;
})(reactMember);

_md.willUnmount = willUnmount;
// element shouldUpdate
var shouldUpdate = (function (reactMember) {
    _inherits(shouldUpdate, reactMember);
    function shouldUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(shouldUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, shouldUpdate);
        this.wzElement = "shouldUpdate";
    }
    return shouldUpdate;
})(reactMember);

_md.shouldUpdate = shouldUpdate;
// element didUpdate
var didUpdate = (function (reactMember) {
    _inherits(didUpdate, reactMember);
    function didUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(didUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, didUpdate);
        this.wzElement = "didUpdate";
    }
    return didUpdate;
})(reactMember);

_md.didUpdate = didUpdate;
// element willUpdate
var willUpdate = (function (reactMember) {
    _inherits(willUpdate, reactMember);
    function willUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(willUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, willUpdate);
        this.wzElement = "willUpdate";
    }
    return willUpdate;
})(reactMember);

_md.willUpdate = willUpdate;
// element willReceiveProps
var willReceiveProps = (function (reactMember) {
    _inherits(willReceiveProps, reactMember);
    function willReceiveProps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(willReceiveProps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, willReceiveProps);
        this.wzElement = "willReceiveProps";
    }
    return willReceiveProps;
})(reactMember);

_md.willReceiveProps = willReceiveProps;
// element htmlevent
var htmlevent = (function (statement) {
    _inherits(htmlevent, statement);
    function htmlevent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlevent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlevent);
        this.wzElement = "htmlevent";
    }
    htmlevent.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    htmlevent.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return htmlevent;
})(statement);

_md.htmlevent = htmlevent;
// element onCopy
var onCopy = (function (htmlevent) {
    _inherits(onCopy, htmlevent);
    function onCopy(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCopy.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCopy);
        this.wzElement = "onCopy";
    }
    return onCopy;
})(htmlevent);

_md.onCopy = onCopy;
// element onCut
var onCut = (function (htmlevent) {
    _inherits(onCut, htmlevent);
    function onCut(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCut.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCut);
        this.wzElement = "onCut";
    }
    return onCut;
})(htmlevent);

_md.onCut = onCut;
// element onPaste
var onPaste = (function (htmlevent) {
    _inherits(onPaste, htmlevent);
    function onPaste(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPaste.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPaste);
        this.wzElement = "onPaste";
    }
    return onPaste;
})(htmlevent);

_md.onPaste = onPaste;
// element on
var on = (function (htmlevent) {
    _inherits(on, htmlevent);
    function on(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(on.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, on);
        this.wzElement = "on";
    }
    return on;
})(htmlevent);

_md.on = on;
// element onCompositionEnd
var onCompositionEnd = (function (htmlevent) {
    _inherits(onCompositionEnd, htmlevent);
    function onCompositionEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionEnd);
        this.wzElement = "onCompositionEnd";
    }
    return onCompositionEnd;
})(htmlevent);

_md.onCompositionEnd = onCompositionEnd;
// element onCompositionStart
var onCompositionStart = (function (htmlevent) {
    _inherits(onCompositionStart, htmlevent);
    function onCompositionStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionStart);
        this.wzElement = "onCompositionStart";
    }
    return onCompositionStart;
})(htmlevent);

_md.onCompositionStart = onCompositionStart;
// element onCompositionUpdate
var onCompositionUpdate = (function (htmlevent) {
    _inherits(onCompositionUpdate, htmlevent);
    function onCompositionUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionUpdate);
        this.wzElement = "onCompositionUpdate";
    }
    return onCompositionUpdate;
})(htmlevent);

_md.onCompositionUpdate = onCompositionUpdate;
// element onKeyDown
var onKeyDown = (function (htmlevent) {
    _inherits(onKeyDown, htmlevent);
    function onKeyDown(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyDown.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyDown);
        this.wzElement = "onKeyDown";
    }
    return onKeyDown;
})(htmlevent);

_md.onKeyDown = onKeyDown;
// element onKeyPress
var onKeyPress = (function (htmlevent) {
    _inherits(onKeyPress, htmlevent);
    function onKeyPress(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyPress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyPress);
        this.wzElement = "onKeyPress";
    }
    return onKeyPress;
})(htmlevent);

_md.onKeyPress = onKeyPress;
// element onKeyUp
var onKeyUp = (function (htmlevent) {
    _inherits(onKeyUp, htmlevent);
    function onKeyUp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyUp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyUp);
        this.wzElement = "onKeyUp";
    }
    return onKeyUp;
})(htmlevent);

_md.onKeyUp = onKeyUp;
// element onFocus
var onFocus = (function (htmlevent) {
    _inherits(onFocus, htmlevent);
    function onFocus(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onFocus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onFocus);
        this.wzElement = "onFocus";
    }
    return onFocus;
})(htmlevent);

_md.onFocus = onFocus;
// element onBlur
var onBlur = (function (htmlevent) {
    _inherits(onBlur, htmlevent);
    function onBlur(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onBlur.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onBlur);
        this.wzElement = "onBlur";
    }
    return onBlur;
})(htmlevent);

_md.onBlur = onBlur;
// element onChange
var onChange = (function (htmlevent) {
    _inherits(onChange, htmlevent);
    function onChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onChange);
        this.wzElement = "onChange";
    }
    return onChange;
})(htmlevent);

_md.onChange = onChange;
// element onInput
var onInput = (function (htmlevent) {
    _inherits(onInput, htmlevent);
    function onInput(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onInput.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onInput);
        this.wzElement = "onInput";
    }
    return onInput;
})(htmlevent);

_md.onInput = onInput;
// element onSubmit
var onSubmit = (function (htmlevent) {
    _inherits(onSubmit, htmlevent);
    function onSubmit(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSubmit.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSubmit);
        this.wzElement = "onSubmit";
    }
    return onSubmit;
})(htmlevent);

_md.onSubmit = onSubmit;
// element onClick
var onClick = (function (htmlevent) {
    _inherits(onClick, htmlevent);
    function onClick(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onClick.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onClick);
        this.wzElement = "onClick";
    }
    return onClick;
})(htmlevent);

_md.onClick = onClick;
// element onContextMenu
var onContextMenu = (function (htmlevent) {
    _inherits(onContextMenu, htmlevent);
    function onContextMenu(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onContextMenu.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onContextMenu);
        this.wzElement = "onContextMenu";
    }
    return onContextMenu;
})(htmlevent);

_md.onContextMenu = onContextMenu;
// element onDoubleClick
var onDoubleClick = (function (htmlevent) {
    _inherits(onDoubleClick, htmlevent);
    function onDoubleClick(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDoubleClick.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDoubleClick);
        this.wzElement = "onDoubleClick";
    }
    return onDoubleClick;
})(htmlevent);

_md.onDoubleClick = onDoubleClick;
// element onDrag
var onDrag = (function (htmlevent) {
    _inherits(onDrag, htmlevent);
    function onDrag(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDrag.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDrag);
        this.wzElement = "onDrag";
    }
    return onDrag;
})(htmlevent);

_md.onDrag = onDrag;
// element onDragEnd
var onDragEnd = (function (htmlevent) {
    _inherits(onDragEnd, htmlevent);
    function onDragEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragEnd);
        this.wzElement = "onDragEnd";
    }
    return onDragEnd;
})(htmlevent);

_md.onDragEnd = onDragEnd;
// element onDragEnter
var onDragEnter = (function (htmlevent) {
    _inherits(onDragEnter, htmlevent);
    function onDragEnter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragEnter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragEnter);
        this.wzElement = "onDragEnter";
    }
    return onDragEnter;
})(htmlevent);

_md.onDragEnter = onDragEnter;
// element onDragExit
var onDragExit = (function (htmlevent) {
    _inherits(onDragExit, htmlevent);
    function onDragExit(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragExit.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragExit);
        this.wzElement = "onDragExit";
    }
    return onDragExit;
})(htmlevent);

_md.onDragExit = onDragExit;
// element onDragLeave
var onDragLeave = (function (htmlevent) {
    _inherits(onDragLeave, htmlevent);
    function onDragLeave(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragLeave.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragLeave);
        this.wzElement = "onDragLeave";
    }
    return onDragLeave;
})(htmlevent);

_md.onDragLeave = onDragLeave;
// element onDragOver
var onDragOver = (function (htmlevent) {
    _inherits(onDragOver, htmlevent);
    function onDragOver(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragOver.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragOver);
        this.wzElement = "onDragOver";
    }
    return onDragOver;
})(htmlevent);

_md.onDragOver = onDragOver;
// element onDragStart
var onDragStart = (function (htmlevent) {
    _inherits(onDragStart, htmlevent);
    function onDragStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragStart);
        this.wzElement = "onDragStart";
    }
    return onDragStart;
})(htmlevent);

_md.onDragStart = onDragStart;
// element onDrop
var onDrop = (function (htmlevent) {
    _inherits(onDrop, htmlevent);
    function onDrop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDrop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDrop);
        this.wzElement = "onDrop";
    }
    return onDrop;
})(htmlevent);

_md.onDrop = onDrop;
// element onMouseDown
var onMouseDown = (function (htmlevent) {
    _inherits(onMouseDown, htmlevent);
    function onMouseDown(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseDown.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseDown);
        this.wzElement = "onMouseDown";
    }
    return onMouseDown;
})(htmlevent);

_md.onMouseDown = onMouseDown;
// element onMouseEnter
var onMouseEnter = (function (htmlevent) {
    _inherits(onMouseEnter, htmlevent);
    function onMouseEnter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseEnter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseEnter);
        this.wzElement = "onMouseEnter";
    }
    return onMouseEnter;
})(htmlevent);

_md.onMouseEnter = onMouseEnter;
// element onMouseLeave
var onMouseLeave = (function (htmlevent) {
    _inherits(onMouseLeave, htmlevent);
    function onMouseLeave(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseLeave.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseLeave);
        this.wzElement = "onMouseLeave";
    }
    return onMouseLeave;
})(htmlevent);

_md.onMouseLeave = onMouseLeave;
// element onMouseMove
var onMouseMove = (function (htmlevent) {
    _inherits(onMouseMove, htmlevent);
    function onMouseMove(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseMove.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseMove);
        this.wzElement = "onMouseMove";
    }
    return onMouseMove;
})(htmlevent);

_md.onMouseMove = onMouseMove;
// element onMouseOut
var onMouseOut = (function (htmlevent) {
    _inherits(onMouseOut, htmlevent);
    function onMouseOut(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseOut.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseOut);
        this.wzElement = "onMouseOut";
    }
    return onMouseOut;
})(htmlevent);

_md.onMouseOut = onMouseOut;
// element onMouseOver
var onMouseOver = (function (htmlevent) {
    _inherits(onMouseOver, htmlevent);
    function onMouseOver(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseOver.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseOver);
        this.wzElement = "onMouseOver";
    }
    return onMouseOver;
})(htmlevent);

_md.onMouseOver = onMouseOver;
// element onMouseUp
var onMouseUp = (function (htmlevent) {
    _inherits(onMouseUp, htmlevent);
    function onMouseUp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseUp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseUp);
        this.wzElement = "onMouseUp";
    }
    return onMouseUp;
})(htmlevent);

_md.onMouseUp = onMouseUp;
// element onSelect
var onSelect = (function (htmlevent) {
    _inherits(onSelect, htmlevent);
    function onSelect(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSelect.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSelect);
        this.wzElement = "onSelect";
    }
    return onSelect;
})(htmlevent);

_md.onSelect = onSelect;
// element onTouchCancel
var onTouchCancel = (function (htmlevent) {
    _inherits(onTouchCancel, htmlevent);
    function onTouchCancel(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchCancel.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchCancel);
        this.wzElement = "onTouchCancel";
    }
    return onTouchCancel;
})(htmlevent);

_md.onTouchCancel = onTouchCancel;
// element onTouchEnd
var onTouchEnd = (function (htmlevent) {
    _inherits(onTouchEnd, htmlevent);
    function onTouchEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchEnd);
        this.wzElement = "onTouchEnd";
    }
    return onTouchEnd;
})(htmlevent);

_md.onTouchEnd = onTouchEnd;
// element onTouchMove
var onTouchMove = (function (htmlevent) {
    _inherits(onTouchMove, htmlevent);
    function onTouchMove(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchMove.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchMove);
        this.wzElement = "onTouchMove";
    }
    return onTouchMove;
})(htmlevent);

_md.onTouchMove = onTouchMove;
// element onTouchStart
var onTouchStart = (function (htmlevent) {
    _inherits(onTouchStart, htmlevent);
    function onTouchStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchStart);
        this.wzElement = "onTouchStart";
    }
    return onTouchStart;
})(htmlevent);

_md.onTouchStart = onTouchStart;
// element onScroll
var onScroll = (function (htmlevent) {
    _inherits(onScroll, htmlevent);
    function onScroll(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onScroll.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onScroll);
        this.wzElement = "onScroll";
    }
    return onScroll;
})(htmlevent);

_md.onScroll = onScroll;
// element onWheel
var onWheel = (function (htmlevent) {
    _inherits(onWheel, htmlevent);
    function onWheel(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onWheel.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onWheel);
        this.wzElement = "onWheel";
    }
    return onWheel;
})(htmlevent);

_md.onWheel = onWheel;
// element onAbort
var onAbort = (function (htmlevent) {
    _inherits(onAbort, htmlevent);
    function onAbort(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onAbort.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onAbort);
        this.wzElement = "onAbort";
    }
    return onAbort;
})(htmlevent);

_md.onAbort = onAbort;
// element onCanPlay
var onCanPlay = (function (htmlevent) {
    _inherits(onCanPlay, htmlevent);
    function onCanPlay(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCanPlay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCanPlay);
        this.wzElement = "onCanPlay";
    }
    return onCanPlay;
})(htmlevent);

_md.onCanPlay = onCanPlay;
// element onCanPlayThrough
var onCanPlayThrough = (function (htmlevent) {
    _inherits(onCanPlayThrough, htmlevent);
    function onCanPlayThrough(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCanPlayThrough.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCanPlayThrough);
        this.wzElement = "onCanPlayThrough";
    }
    return onCanPlayThrough;
})(htmlevent);

_md.onCanPlayThrough = onCanPlayThrough;
// element onDurationChange
var onDurationChange = (function (htmlevent) {
    _inherits(onDurationChange, htmlevent);
    function onDurationChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDurationChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDurationChange);
        this.wzElement = "onDurationChange";
    }
    return onDurationChange;
})(htmlevent);

_md.onDurationChange = onDurationChange;
// element onEmptied
var onEmptied = (function (htmlevent) {
    _inherits(onEmptied, htmlevent);
    function onEmptied(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEmptied.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEmptied);
        this.wzElement = "onEmptied";
    }
    return onEmptied;
})(htmlevent);

_md.onEmptied = onEmptied;
// element onEncrypted
var onEncrypted = (function (htmlevent) {
    _inherits(onEncrypted, htmlevent);
    function onEncrypted(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEncrypted.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEncrypted);
        this.wzElement = "onEncrypted";
    }
    return onEncrypted;
})(htmlevent);

_md.onEncrypted = onEncrypted;
// element onEnded
var onEnded = (function (htmlevent) {
    _inherits(onEnded, htmlevent);
    function onEnded(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEnded.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEnded);
        this.wzElement = "onEnded";
    }
    return onEnded;
})(htmlevent);

_md.onEnded = onEnded;
// element onError
var onError = (function (htmlevent) {
    _inherits(onError, htmlevent);
    function onError(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onError.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onError);
        this.wzElement = "onError";
    }
    return onError;
})(htmlevent);

_md.onError = onError;
// element onLoadedData
var onLoadedData = (function (htmlevent) {
    _inherits(onLoadedData, htmlevent);
    function onLoadedData(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadedData.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadedData);
        this.wzElement = "onLoadedData";
    }
    return onLoadedData;
})(htmlevent);

_md.onLoadedData = onLoadedData;
// element onLoadedMetadata
var onLoadedMetadata = (function (htmlevent) {
    _inherits(onLoadedMetadata, htmlevent);
    function onLoadedMetadata(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadedMetadata.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadedMetadata);
        this.wzElement = "onLoadedMetadata";
    }
    return onLoadedMetadata;
})(htmlevent);

_md.onLoadedMetadata = onLoadedMetadata;
// element onLoadStart
var onLoadStart = (function (htmlevent) {
    _inherits(onLoadStart, htmlevent);
    function onLoadStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadStart);
        this.wzElement = "onLoadStart";
    }
    return onLoadStart;
})(htmlevent);

_md.onLoadStart = onLoadStart;
// element onPause
var onPause = (function (htmlevent) {
    _inherits(onPause, htmlevent);
    function onPause(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPause.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPause);
        this.wzElement = "onPause";
    }
    return onPause;
})(htmlevent);

_md.onPause = onPause;
// element onPlay
var onPlay = (function (htmlevent) {
    _inherits(onPlay, htmlevent);
    function onPlay(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPlay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPlay);
        this.wzElement = "onPlay";
    }
    return onPlay;
})(htmlevent);

_md.onPlay = onPlay;
// element onPlaying
var onPlaying = (function (htmlevent) {
    _inherits(onPlaying, htmlevent);
    function onPlaying(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPlaying.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPlaying);
        this.wzElement = "onPlaying";
    }
    return onPlaying;
})(htmlevent);

_md.onPlaying = onPlaying;
// element onProgress
var onProgress = (function (htmlevent) {
    _inherits(onProgress, htmlevent);
    function onProgress(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onProgress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onProgress);
        this.wzElement = "onProgress";
    }
    return onProgress;
})(htmlevent);

_md.onProgress = onProgress;
// element onRateChange
var onRateChange = (function (htmlevent) {
    _inherits(onRateChange, htmlevent);
    function onRateChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onRateChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onRateChange);
        this.wzElement = "onRateChange";
    }
    return onRateChange;
})(htmlevent);

_md.onRateChange = onRateChange;
// element onSeeked
var onSeeked = (function (htmlevent) {
    _inherits(onSeeked, htmlevent);
    function onSeeked(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSeeked.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSeeked);
        this.wzElement = "onSeeked";
    }
    return onSeeked;
})(htmlevent);

_md.onSeeked = onSeeked;
// element onSeeking
var onSeeking = (function (htmlevent) {
    _inherits(onSeeking, htmlevent);
    function onSeeking(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSeeking.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSeeking);
        this.wzElement = "onSeeking";
    }
    return onSeeking;
})(htmlevent);

_md.onSeeking = onSeeking;
// element onStalled
var onStalled = (function (htmlevent) {
    _inherits(onStalled, htmlevent);
    function onStalled(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onStalled.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onStalled);
        this.wzElement = "onStalled";
    }
    return onStalled;
})(htmlevent);

_md.onStalled = onStalled;
// element onSuspend
var onSuspend = (function (htmlevent) {
    _inherits(onSuspend, htmlevent);
    function onSuspend(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSuspend.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSuspend);
        this.wzElement = "onSuspend";
    }
    return onSuspend;
})(htmlevent);

_md.onSuspend = onSuspend;
// element onTimeUpdate
var onTimeUpdate = (function (htmlevent) {
    _inherits(onTimeUpdate, htmlevent);
    function onTimeUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTimeUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTimeUpdate);
        this.wzElement = "onTimeUpdate";
    }
    return onTimeUpdate;
})(htmlevent);

_md.onTimeUpdate = onTimeUpdate;
// element onVolumeChange
var onVolumeChange = (function (htmlevent) {
    _inherits(onVolumeChange, htmlevent);
    function onVolumeChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onVolumeChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onVolumeChange);
        this.wzElement = "onVolumeChange";
    }
    return onVolumeChange;
})(htmlevent);

_md.onVolumeChange = onVolumeChange;
// element onWaiting
var onWaiting = (function (htmlevent) {
    _inherits(onWaiting, htmlevent);
    function onWaiting(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onWaiting.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onWaiting);
        this.wzElement = "onWaiting";
    }
    return onWaiting;
})(htmlevent);

_md.onWaiting = onWaiting;
// element onLoad
var onLoad = (function (htmlevent) {
    _inherits(onLoad, htmlevent);
    function onLoad(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoad.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoad);
        this.wzElement = "onLoad";
    }
    return onLoad;
})(htmlevent);

_md.onLoad = onLoad;
// element onTransitionEnd
var onTransitionEnd = (function (htmlevent) {
    _inherits(onTransitionEnd, htmlevent);
    function onTransitionEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTransitionEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTransitionEnd);
        this.wzElement = "onTransitionEnd";
    }
    return onTransitionEnd;
})(htmlevent);

_md.onTransitionEnd = onTransitionEnd;
// element htmlelement
var htmlelement = (function (statement) {
    _inherits(htmlelement, statement);
    function htmlelement(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlelement.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlelement);
        this.wzElement = "htmlelement";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.autoCapitalize = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.autoCorrect = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.property = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.itemProp = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.itemScope = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.itemType = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.itemRef = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.itemID = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.unselectable = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.results = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.autoSave = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.class = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.aria__ = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.data__ = null
    }
    htmlelement.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 'c') {
            if (name === 'class') {
                this.class = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'itemid') {
                this.itemID = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'itemref') {
                this.itemRef = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'r') {
            if (name === 'results') {
                this.results = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'autosave') {
                this.autoSave = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemprop') {
                this.itemProp = child.v; return true;
            }
            else if (name === 'itemtype') {
                this.itemType = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                this.property = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'itemscope') {
                this.itemScope = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'autocorrect') {
                this.autoCorrect = child.v; return true;
            }
        }
        if (_l == 12 && _ch == 'u') {
            if (name === 'unselectable') {
                this.unselectable = child.v; return true;
            }
        }
        if (_l == 14 && _ch == 'a') {
            if (name === 'autocapitalize') {
                this.autoCapitalize = child.v; return true;
            }
        }
        if (name.substr(0, 5) == "aria-") {
            this[name] = child.v;
            return true;
        }
        if (name.substr(0, 5) == "data-") {
            this[name] = child.v;
            return true;
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    htmlelement.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return htmlelement;
})(statement);

_md.htmlelement = htmlelement;
// element doctype
var doctype = (function (htmlelement) {
    _inherits(doctype, htmlelement);
    function doctype(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(doctype.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, doctype);
        this.wzElement = "doctype";
    }
    return doctype;
})(htmlelement);

_md.doctype = doctype;
// element p
var p = (function (htmlelement) {
    _inherits(p, htmlelement);
    function p(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(p.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, p);
        this.wzElement = "p";
        this.static = false;
    }
    p.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 's') {
            if (name === 'static') {
                this.static = parseboolean(child.v, true, child); return true;
            }
        }
        ok = _md.htmlelement.prototype.loadChild.call(this, child);
        return ok;
    }
    p.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return p;
})(htmlelement);

_md.p = p;
// element htmlevent
var htmlevent = (function (htmlelement) {
    _inherits(htmlevent, htmlelement);
    function htmlevent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlevent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlevent);
        this.wzElement = "htmlevent";
        this.isEvent = true;
    }
    htmlevent.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 7 && _ch == 'i') {
            if (name === 'isevent') {
                this.isEvent = parseboolean(child.v, null, child); return true;
            }
        }
        ok = _md.htmlelement.prototype.loadChild.call(this, child);
        return ok;
    }
    htmlevent.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return htmlevent;
})(htmlelement);

_md.htmlevent = htmlevent;
// element onCopy
var onCopy = (function (htmlevent) {
    _inherits(onCopy, htmlevent);
    function onCopy(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCopy.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCopy);
        this.wzElement = "onCopy";
    }
    return onCopy;
})(htmlevent);

_md.onCopy = onCopy;
// element onCut
var onCut = (function (htmlevent) {
    _inherits(onCut, htmlevent);
    function onCut(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCut.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCut);
        this.wzElement = "onCut";
    }
    return onCut;
})(htmlevent);

_md.onCut = onCut;
// element onPaste
var onPaste = (function (htmlevent) {
    _inherits(onPaste, htmlevent);
    function onPaste(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPaste.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPaste);
        this.wzElement = "onPaste";
    }
    return onPaste;
})(htmlevent);

_md.onPaste = onPaste;
// element on
var on = (function (htmlevent) {
    _inherits(on, htmlevent);
    function on(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(on.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, on);
        this.wzElement = "on";
    }
    return on;
})(htmlevent);

_md.on = on;
// element onCompositionEnd
var onCompositionEnd = (function (htmlevent) {
    _inherits(onCompositionEnd, htmlevent);
    function onCompositionEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionEnd);
        this.wzElement = "onCompositionEnd";
    }
    return onCompositionEnd;
})(htmlevent);

_md.onCompositionEnd = onCompositionEnd;
// element onCompositionStart
var onCompositionStart = (function (htmlevent) {
    _inherits(onCompositionStart, htmlevent);
    function onCompositionStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionStart);
        this.wzElement = "onCompositionStart";
    }
    return onCompositionStart;
})(htmlevent);

_md.onCompositionStart = onCompositionStart;
// element onCompositionUpdate
var onCompositionUpdate = (function (htmlevent) {
    _inherits(onCompositionUpdate, htmlevent);
    function onCompositionUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCompositionUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCompositionUpdate);
        this.wzElement = "onCompositionUpdate";
    }
    return onCompositionUpdate;
})(htmlevent);

_md.onCompositionUpdate = onCompositionUpdate;
// element onKeyDown
var onKeyDown = (function (htmlevent) {
    _inherits(onKeyDown, htmlevent);
    function onKeyDown(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyDown.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyDown);
        this.wzElement = "onKeyDown";
    }
    return onKeyDown;
})(htmlevent);

_md.onKeyDown = onKeyDown;
// element onKeyPress
var onKeyPress = (function (htmlevent) {
    _inherits(onKeyPress, htmlevent);
    function onKeyPress(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyPress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyPress);
        this.wzElement = "onKeyPress";
    }
    return onKeyPress;
})(htmlevent);

_md.onKeyPress = onKeyPress;
// element onKeyUp
var onKeyUp = (function (htmlevent) {
    _inherits(onKeyUp, htmlevent);
    function onKeyUp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onKeyUp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onKeyUp);
        this.wzElement = "onKeyUp";
    }
    return onKeyUp;
})(htmlevent);

_md.onKeyUp = onKeyUp;
// element onFocus
var onFocus = (function (htmlevent) {
    _inherits(onFocus, htmlevent);
    function onFocus(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onFocus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onFocus);
        this.wzElement = "onFocus";
    }
    return onFocus;
})(htmlevent);

_md.onFocus = onFocus;
// element onBlur
var onBlur = (function (htmlevent) {
    _inherits(onBlur, htmlevent);
    function onBlur(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onBlur.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onBlur);
        this.wzElement = "onBlur";
    }
    return onBlur;
})(htmlevent);

_md.onBlur = onBlur;
// element onChange
var onChange = (function (htmlevent) {
    _inherits(onChange, htmlevent);
    function onChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onChange);
        this.wzElement = "onChange";
    }
    return onChange;
})(htmlevent);

_md.onChange = onChange;
// element onInput
var onInput = (function (htmlevent) {
    _inherits(onInput, htmlevent);
    function onInput(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onInput.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onInput);
        this.wzElement = "onInput";
    }
    return onInput;
})(htmlevent);

_md.onInput = onInput;
// element onSubmit
var onSubmit = (function (htmlevent) {
    _inherits(onSubmit, htmlevent);
    function onSubmit(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSubmit.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSubmit);
        this.wzElement = "onSubmit";
    }
    return onSubmit;
})(htmlevent);

_md.onSubmit = onSubmit;
// element onClick
var onClick = (function (htmlevent) {
    _inherits(onClick, htmlevent);
    function onClick(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onClick.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onClick);
        this.wzElement = "onClick";
    }
    return onClick;
})(htmlevent);

_md.onClick = onClick;
// element onContextMenu
var onContextMenu = (function (htmlevent) {
    _inherits(onContextMenu, htmlevent);
    function onContextMenu(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onContextMenu.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onContextMenu);
        this.wzElement = "onContextMenu";
    }
    return onContextMenu;
})(htmlevent);

_md.onContextMenu = onContextMenu;
// element onDoubleClick
var onDoubleClick = (function (htmlevent) {
    _inherits(onDoubleClick, htmlevent);
    function onDoubleClick(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDoubleClick.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDoubleClick);
        this.wzElement = "onDoubleClick";
    }
    return onDoubleClick;
})(htmlevent);

_md.onDoubleClick = onDoubleClick;
// element onDrag
var onDrag = (function (htmlevent) {
    _inherits(onDrag, htmlevent);
    function onDrag(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDrag.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDrag);
        this.wzElement = "onDrag";
    }
    return onDrag;
})(htmlevent);

_md.onDrag = onDrag;
// element onDragEnd
var onDragEnd = (function (htmlevent) {
    _inherits(onDragEnd, htmlevent);
    function onDragEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragEnd);
        this.wzElement = "onDragEnd";
    }
    return onDragEnd;
})(htmlevent);

_md.onDragEnd = onDragEnd;
// element onDragEnter
var onDragEnter = (function (htmlevent) {
    _inherits(onDragEnter, htmlevent);
    function onDragEnter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragEnter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragEnter);
        this.wzElement = "onDragEnter";
    }
    return onDragEnter;
})(htmlevent);

_md.onDragEnter = onDragEnter;
// element onDragExit
var onDragExit = (function (htmlevent) {
    _inherits(onDragExit, htmlevent);
    function onDragExit(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragExit.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragExit);
        this.wzElement = "onDragExit";
    }
    return onDragExit;
})(htmlevent);

_md.onDragExit = onDragExit;
// element onDragLeave
var onDragLeave = (function (htmlevent) {
    _inherits(onDragLeave, htmlevent);
    function onDragLeave(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragLeave.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragLeave);
        this.wzElement = "onDragLeave";
    }
    return onDragLeave;
})(htmlevent);

_md.onDragLeave = onDragLeave;
// element onDragOver
var onDragOver = (function (htmlevent) {
    _inherits(onDragOver, htmlevent);
    function onDragOver(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragOver.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragOver);
        this.wzElement = "onDragOver";
    }
    return onDragOver;
})(htmlevent);

_md.onDragOver = onDragOver;
// element onDragStart
var onDragStart = (function (htmlevent) {
    _inherits(onDragStart, htmlevent);
    function onDragStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDragStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDragStart);
        this.wzElement = "onDragStart";
    }
    return onDragStart;
})(htmlevent);

_md.onDragStart = onDragStart;
// element onDrop
var onDrop = (function (htmlevent) {
    _inherits(onDrop, htmlevent);
    function onDrop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDrop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDrop);
        this.wzElement = "onDrop";
    }
    return onDrop;
})(htmlevent);

_md.onDrop = onDrop;
// element onMouseDown
var onMouseDown = (function (htmlevent) {
    _inherits(onMouseDown, htmlevent);
    function onMouseDown(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseDown.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseDown);
        this.wzElement = "onMouseDown";
    }
    return onMouseDown;
})(htmlevent);

_md.onMouseDown = onMouseDown;
// element onMouseEnter
var onMouseEnter = (function (htmlevent) {
    _inherits(onMouseEnter, htmlevent);
    function onMouseEnter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseEnter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseEnter);
        this.wzElement = "onMouseEnter";
    }
    return onMouseEnter;
})(htmlevent);

_md.onMouseEnter = onMouseEnter;
// element onMouseLeave
var onMouseLeave = (function (htmlevent) {
    _inherits(onMouseLeave, htmlevent);
    function onMouseLeave(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseLeave.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseLeave);
        this.wzElement = "onMouseLeave";
    }
    return onMouseLeave;
})(htmlevent);

_md.onMouseLeave = onMouseLeave;
// element onMouseMove
var onMouseMove = (function (htmlevent) {
    _inherits(onMouseMove, htmlevent);
    function onMouseMove(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseMove.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseMove);
        this.wzElement = "onMouseMove";
    }
    return onMouseMove;
})(htmlevent);

_md.onMouseMove = onMouseMove;
// element onMouseOut
var onMouseOut = (function (htmlevent) {
    _inherits(onMouseOut, htmlevent);
    function onMouseOut(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseOut.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseOut);
        this.wzElement = "onMouseOut";
    }
    return onMouseOut;
})(htmlevent);

_md.onMouseOut = onMouseOut;
// element onMouseOver
var onMouseOver = (function (htmlevent) {
    _inherits(onMouseOver, htmlevent);
    function onMouseOver(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseOver.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseOver);
        this.wzElement = "onMouseOver";
    }
    return onMouseOver;
})(htmlevent);

_md.onMouseOver = onMouseOver;
// element onMouseUp
var onMouseUp = (function (htmlevent) {
    _inherits(onMouseUp, htmlevent);
    function onMouseUp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onMouseUp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onMouseUp);
        this.wzElement = "onMouseUp";
    }
    return onMouseUp;
})(htmlevent);

_md.onMouseUp = onMouseUp;
// element onSelect
var onSelect = (function (htmlevent) {
    _inherits(onSelect, htmlevent);
    function onSelect(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSelect.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSelect);
        this.wzElement = "onSelect";
    }
    return onSelect;
})(htmlevent);

_md.onSelect = onSelect;
// element onTouchCancel
var onTouchCancel = (function (htmlevent) {
    _inherits(onTouchCancel, htmlevent);
    function onTouchCancel(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchCancel.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchCancel);
        this.wzElement = "onTouchCancel";
    }
    return onTouchCancel;
})(htmlevent);

_md.onTouchCancel = onTouchCancel;
// element onTouchEnd
var onTouchEnd = (function (htmlevent) {
    _inherits(onTouchEnd, htmlevent);
    function onTouchEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchEnd);
        this.wzElement = "onTouchEnd";
    }
    return onTouchEnd;
})(htmlevent);

_md.onTouchEnd = onTouchEnd;
// element onTouchMove
var onTouchMove = (function (htmlevent) {
    _inherits(onTouchMove, htmlevent);
    function onTouchMove(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchMove.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchMove);
        this.wzElement = "onTouchMove";
    }
    return onTouchMove;
})(htmlevent);

_md.onTouchMove = onTouchMove;
// element onTouchStart
var onTouchStart = (function (htmlevent) {
    _inherits(onTouchStart, htmlevent);
    function onTouchStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTouchStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTouchStart);
        this.wzElement = "onTouchStart";
    }
    return onTouchStart;
})(htmlevent);

_md.onTouchStart = onTouchStart;
// element onScroll
var onScroll = (function (htmlevent) {
    _inherits(onScroll, htmlevent);
    function onScroll(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onScroll.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onScroll);
        this.wzElement = "onScroll";
    }
    return onScroll;
})(htmlevent);

_md.onScroll = onScroll;
// element onWheel
var onWheel = (function (htmlevent) {
    _inherits(onWheel, htmlevent);
    function onWheel(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onWheel.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onWheel);
        this.wzElement = "onWheel";
    }
    return onWheel;
})(htmlevent);

_md.onWheel = onWheel;
// element onAbort
var onAbort = (function (htmlevent) {
    _inherits(onAbort, htmlevent);
    function onAbort(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onAbort.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onAbort);
        this.wzElement = "onAbort";
    }
    return onAbort;
})(htmlevent);

_md.onAbort = onAbort;
// element onCanPlay
var onCanPlay = (function (htmlevent) {
    _inherits(onCanPlay, htmlevent);
    function onCanPlay(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCanPlay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCanPlay);
        this.wzElement = "onCanPlay";
    }
    return onCanPlay;
})(htmlevent);

_md.onCanPlay = onCanPlay;
// element onCanPlayThrough
var onCanPlayThrough = (function (htmlevent) {
    _inherits(onCanPlayThrough, htmlevent);
    function onCanPlayThrough(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onCanPlayThrough.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onCanPlayThrough);
        this.wzElement = "onCanPlayThrough";
    }
    return onCanPlayThrough;
})(htmlevent);

_md.onCanPlayThrough = onCanPlayThrough;
// element onDurationChange
var onDurationChange = (function (htmlevent) {
    _inherits(onDurationChange, htmlevent);
    function onDurationChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onDurationChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onDurationChange);
        this.wzElement = "onDurationChange";
    }
    return onDurationChange;
})(htmlevent);

_md.onDurationChange = onDurationChange;
// element onEmptied
var onEmptied = (function (htmlevent) {
    _inherits(onEmptied, htmlevent);
    function onEmptied(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEmptied.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEmptied);
        this.wzElement = "onEmptied";
    }
    return onEmptied;
})(htmlevent);

_md.onEmptied = onEmptied;
// element onEncrypted
var onEncrypted = (function (htmlevent) {
    _inherits(onEncrypted, htmlevent);
    function onEncrypted(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEncrypted.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEncrypted);
        this.wzElement = "onEncrypted";
    }
    return onEncrypted;
})(htmlevent);

_md.onEncrypted = onEncrypted;
// element onEnded
var onEnded = (function (htmlevent) {
    _inherits(onEnded, htmlevent);
    function onEnded(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onEnded.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onEnded);
        this.wzElement = "onEnded";
    }
    return onEnded;
})(htmlevent);

_md.onEnded = onEnded;
// element onError
var onError = (function (htmlevent) {
    _inherits(onError, htmlevent);
    function onError(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onError.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onError);
        this.wzElement = "onError";
    }
    return onError;
})(htmlevent);

_md.onError = onError;
// element onLoadedData
var onLoadedData = (function (htmlevent) {
    _inherits(onLoadedData, htmlevent);
    function onLoadedData(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadedData.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadedData);
        this.wzElement = "onLoadedData";
    }
    return onLoadedData;
})(htmlevent);

_md.onLoadedData = onLoadedData;
// element onLoadedMetadata
var onLoadedMetadata = (function (htmlevent) {
    _inherits(onLoadedMetadata, htmlevent);
    function onLoadedMetadata(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadedMetadata.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadedMetadata);
        this.wzElement = "onLoadedMetadata";
    }
    return onLoadedMetadata;
})(htmlevent);

_md.onLoadedMetadata = onLoadedMetadata;
// element onLoadStart
var onLoadStart = (function (htmlevent) {
    _inherits(onLoadStart, htmlevent);
    function onLoadStart(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoadStart.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoadStart);
        this.wzElement = "onLoadStart";
    }
    return onLoadStart;
})(htmlevent);

_md.onLoadStart = onLoadStart;
// element onPause
var onPause = (function (htmlevent) {
    _inherits(onPause, htmlevent);
    function onPause(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPause.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPause);
        this.wzElement = "onPause";
    }
    return onPause;
})(htmlevent);

_md.onPause = onPause;
// element onPlay
var onPlay = (function (htmlevent) {
    _inherits(onPlay, htmlevent);
    function onPlay(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPlay.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPlay);
        this.wzElement = "onPlay";
    }
    return onPlay;
})(htmlevent);

_md.onPlay = onPlay;
// element onPlaying
var onPlaying = (function (htmlevent) {
    _inherits(onPlaying, htmlevent);
    function onPlaying(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onPlaying.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onPlaying);
        this.wzElement = "onPlaying";
    }
    return onPlaying;
})(htmlevent);

_md.onPlaying = onPlaying;
// element onProgress
var onProgress = (function (htmlevent) {
    _inherits(onProgress, htmlevent);
    function onProgress(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onProgress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onProgress);
        this.wzElement = "onProgress";
    }
    return onProgress;
})(htmlevent);

_md.onProgress = onProgress;
// element onRateChange
var onRateChange = (function (htmlevent) {
    _inherits(onRateChange, htmlevent);
    function onRateChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onRateChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onRateChange);
        this.wzElement = "onRateChange";
    }
    return onRateChange;
})(htmlevent);

_md.onRateChange = onRateChange;
// element onSeeked
var onSeeked = (function (htmlevent) {
    _inherits(onSeeked, htmlevent);
    function onSeeked(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSeeked.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSeeked);
        this.wzElement = "onSeeked";
    }
    return onSeeked;
})(htmlevent);

_md.onSeeked = onSeeked;
// element onSeeking
var onSeeking = (function (htmlevent) {
    _inherits(onSeeking, htmlevent);
    function onSeeking(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSeeking.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSeeking);
        this.wzElement = "onSeeking";
    }
    return onSeeking;
})(htmlevent);

_md.onSeeking = onSeeking;
// element onStalled
var onStalled = (function (htmlevent) {
    _inherits(onStalled, htmlevent);
    function onStalled(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onStalled.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onStalled);
        this.wzElement = "onStalled";
    }
    return onStalled;
})(htmlevent);

_md.onStalled = onStalled;
// element onSuspend
var onSuspend = (function (htmlevent) {
    _inherits(onSuspend, htmlevent);
    function onSuspend(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onSuspend.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onSuspend);
        this.wzElement = "onSuspend";
    }
    return onSuspend;
})(htmlevent);

_md.onSuspend = onSuspend;
// element onTimeUpdate
var onTimeUpdate = (function (htmlevent) {
    _inherits(onTimeUpdate, htmlevent);
    function onTimeUpdate(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTimeUpdate.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTimeUpdate);
        this.wzElement = "onTimeUpdate";
    }
    return onTimeUpdate;
})(htmlevent);

_md.onTimeUpdate = onTimeUpdate;
// element onVolumeChange
var onVolumeChange = (function (htmlevent) {
    _inherits(onVolumeChange, htmlevent);
    function onVolumeChange(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onVolumeChange.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onVolumeChange);
        this.wzElement = "onVolumeChange";
    }
    return onVolumeChange;
})(htmlevent);

_md.onVolumeChange = onVolumeChange;
// element onWaiting
var onWaiting = (function (htmlevent) {
    _inherits(onWaiting, htmlevent);
    function onWaiting(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onWaiting.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onWaiting);
        this.wzElement = "onWaiting";
    }
    return onWaiting;
})(htmlevent);

_md.onWaiting = onWaiting;
// element onLoad
var onLoad = (function (htmlevent) {
    _inherits(onLoad, htmlevent);
    function onLoad(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onLoad.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onLoad);
        this.wzElement = "onLoad";
    }
    return onLoad;
})(htmlevent);

_md.onLoad = onLoad;
// element onTransitionEnd
var onTransitionEnd = (function (htmlevent) {
    _inherits(onTransitionEnd, htmlevent);
    function onTransitionEnd(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(onTransitionEnd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, onTransitionEnd);
        this.wzElement = "onTransitionEnd";
    }
    return onTransitionEnd;
})(htmlevent);

_md.onTransitionEnd = onTransitionEnd;
// element js
var js = (function (htmlelement) {
    _inherits(js, htmlelement);
    function js(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(js.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, js);
        this.wzElement = "js";
    }
    return js;
})(htmlelement);

_md.js = js;
// element css
var css = (function (htmlelement) {
    _inherits(css, htmlelement);
    function css(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(css.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, css);
        this.wzElement = "css";
    }
    return css;
})(htmlelement);

_md.css = css;
// element styleJsx
var styleJsx = (function (htmlelement) {
    _inherits(styleJsx, htmlelement);
    function styleJsx(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(styleJsx.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, styleJsx);
        this.wzElement = "styleJsx";
        this.global = false;
        this.css_css_items = [];
    }
    styleJsx.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 'c') {
            if (name === 'css') {
                // generated by wizzi/lib/wizzi/models/bootstrap/t/wfschema/t/element_load;
                this.css_css_items.push(child);
                var err, wizziModel;
                this.wzRoot().wzFactory.loadModelFromMtree( //;
                    'css',  //;
                    { nodes: [ child ], loadHistory: this.wzRoot().loadHistory }, //;
                    function(cberr, cbwizziModel) { //;
                        err = cberr;
                        wizziModel = cbwizziModel;
                    });
                this.get_css = function(callback) { //;
                    // We must wait until the async loadModelFromMtree(..) has returned a wizziModel or an err;
                    var iv = setInterval(function() { //;
                        if (err || wizziModel) { //;
                            clearInterval(iv);
                            if (callback) { //;
                                callback(err, wizziModel);
                                callback = null;
                            } //;
                        } //;
                    }, 100);
                };
                return true;
            }
        }
        if (_l == 6 && _ch == 'g') {
            if (name === 'global') {
                this.global = parseboolean(child.v, true, child); return true;
            }
        }
        ok = _md.htmlelement.prototype.loadChild.call(this, child);
        return ok;
    }
    styleJsx.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return styleJsx;
})(htmlelement);

_md.styleJsx = styleJsx;
// element htmlParam
var htmlParam = (function (htmlelement) {
    _inherits(htmlParam, htmlelement);
    function htmlParam(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlParam.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlParam);
        this.wzElement = "htmlParam";
    }
    return htmlParam;
})(htmlelement);

_md.htmlParam = htmlParam;
// element htmlFilter
var htmlFilter = (function (htmlelement) {
    _inherits(htmlFilter, htmlelement);
    function htmlFilter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlFilter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlFilter);
        this.wzElement = "htmlFilter";
    }
    return htmlFilter;
})(htmlelement);

_md.htmlFilter = htmlFilter;
// element ready
var ready = (function (statement) {
    _inherits(ready, statement);
    function ready(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ready.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ready);
        this.allowedKINDS = [ "jquery", "window"];
        this.KIND_JQUERY = "jquery";
        this.KIND_WINDOW = "window";
        this.wzElement = "ready";
        this.kind = "jquery";
    }
    ready.KIND_JQUERY = "jquery";ready.KIND_WINDOW = "window";ready.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    ready.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    ready.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("ready", "kind", this.kind, this.allowedKINDS, this);
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    return ready;
})(statement);

_md.ready = ready;
// element tohtml
var tohtml = (function (statement) {
    _inherits(tohtml, statement);
    function tohtml(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tohtml.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tohtml);
        this.allowedKINDS = [ "wizzi", "ng", "dom", "hb"];
        this.KIND_WIZZI = "wizzi";
        this.KIND_NG = "ng";
        this.KIND_DOM = "dom";
        this.KIND_HB = "hb";
        this.wzElement = "tohtml";
        this.kind = "wizzi";
    }
    tohtml.KIND_WIZZI = "wizzi";tohtml.KIND_NG = "ng";tohtml.KIND_DOM = "dom";tohtml.KIND_HB = "hb";tohtml.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    tohtml.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    tohtml.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("tohtml", "kind", this.kind, this.allowedKINDS, this);
        _md.statement.prototype.wzVerify.call(this, ctx);
    }
    return tohtml;
})(statement);

_md.tohtml = tohtml;
/**
    element html_f
     create a function
     that returns an html string
*/
var html_f = (function (statement) {
    _inherits(html_f, statement);
    function html_f(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(html_f.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_f);
        this.wzElement = "html_f";
    }
    return html_f;
})(statement);

_md.html_f = html_f;
/**
    element html_ng
     create a function
     that returns an html string preserving {{ }}, for interpolation use [[ ]]
*/
var html_ng = (function (statement) {
    _inherits(html_ng, statement);
    function html_ng(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(html_ng.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_ng);
        this.wzElement = "html_ng";
    }
    return html_ng;
})(statement);

_md.html_ng = html_ng;
/**
    element html_dom
     create a function
     that returns an html dom tree using jQuery
*/
var html_dom = (function (statement) {
    _inherits(html_dom, statement);
    function html_dom(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(html_dom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_dom);
        this.wzElement = "html_dom";
    }
    return html_dom;
})(statement);

_md.html_dom = html_dom;
/**
    element html_hb
     create a function
     that returns a compiled handlebar template
*/
var html_hb = (function (statement) {
    _inherits(html_hb, statement);
    function html_hb(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(html_hb.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_hb);
        this.wzElement = "html_hb";
    }
    return html_hb;
})(statement);

_md.html_hb = html_hb;
// element wzIife
var wzIife = (function (iife) {
    _inherits(wzIife, iife);
    function wzIife(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzIife.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzIife);
        this.wzElement = "wzIife";
    }
    return wzIife;
})(iife);

_md.wzIife = wzIife;
// element wzRequire
var wzRequire = (function (statement) {
    _inherits(wzRequire, statement);
    function wzRequire(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzRequire.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzRequire);
        this.wzElement = "wzRequire";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.from = null
    }
    wzRequire.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = _md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    wzRequire.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.jsModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return wzRequire;
})(statement);

_md.wzRequire = wzRequire;
// element wzVar
var wzVar = (function (xvar) {
    _inherits(wzVar, xvar);
    function wzVar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzVar);
        this.wzElement = "wzVar";
    }
    return wzVar;
})(xvar);

_md.wzVar = wzVar;
// element wzConst
var wzConst = (function (xconst) {
    _inherits(wzConst, xconst);
    function wzConst(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzConst.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzConst);
        this.wzElement = "wzConst";
    }
    return wzConst;
})(xconst);

_md.wzConst = wzConst;
// element wzFunction
var wzFunction = (function (xfunction) {
    _inherits(wzFunction, xfunction);
    function wzFunction(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzFunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzFunction);
        this.wzElement = "wzFunction";
    }
    return wzFunction;
})(xfunction);

_md.wzFunction = wzFunction;
// element wzClass
var wzClass = (function (xclass) {
    _inherits(wzClass, xclass);
    function wzClass(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wzClass.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzClass);
        this.wzElement = "wzClass";
    }
    return wzClass;
})(xclass);

_md.wzClass = wzClass;
// element graphqlQuery
var graphqlQuery = (function (statement) {
    _inherits(graphqlQuery, statement);
    function graphqlQuery(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(graphqlQuery.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, graphqlQuery);
        this.wzElement = "graphqlQuery";
    }
    graphqlQuery.prototype.wzInitialize = function(ctx) {
        _md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return graphqlQuery;
})(statement);

_md.graphqlQuery = graphqlQuery;
// element graphqlMutation
var graphqlMutation = (function (statement) {
    _inherits(graphqlMutation, statement);
    function graphqlMutation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(graphqlMutation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, graphqlMutation);
        this.wzElement = "graphqlMutation";
    }
    return graphqlMutation;
})(statement);

_md.graphqlMutation = graphqlMutation;
// element handlebar
var handlebar = (function (statement) {
    _inherits(handlebar, statement);
    function handlebar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(handlebar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, handlebar);
        this.wzElement = "handlebar";
    }
    return handlebar;
})(statement);

_md.handlebar = handlebar;
/**
    element log
     ittf:
     log 'xxx', yyy, ...
     js:
     console.log( 'xxx', yyy, ... );
    
*/
var log = (function (statement) {
    _inherits(log, statement);
    function log(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(log.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, log);
        this.wzElement = "log";
    }
    return log;
})(statement);

_md.log = log;
/**
    element inspect
     TODO ensure require('util')
     ittf:
     log? xxx
     js:
     console.log('xxx', util.inspect(xxx, { depth: null } );
    
     ittf:
     log? label xxx
     js:
     console.log('label', util.inspect(xxx, { depth: null } );
    
*/
var inspect = (function (statement) {
    _inherits(inspect, statement);
    function inspect(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(inspect.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, inspect);
        this.wzElement = "inspect";
    }
    return inspect;
})(statement);

_md.inspect = inspect;
/**
    element warn
     ittf:
     warn 'xxx', yyy, ...
     js:
     console.warn( 'xxx', yyy, ... );
    
*/
var warn = (function (statement) {
    _inherits(warn, statement);
    function warn(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(warn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, warn);
        this.wzElement = "warn";
    }
    return warn;
})(statement);

_md.warn = warn;
/**
    element error
     ittf:
     error 'xxx', yyy, ...
     js:
     console.error( 'xxx', yyy, ... );
    
*/
var error = (function (statement) {
    _inherits(error, statement);
    function error(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(error.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, error);
        this.wzElement = "error";
    }
    return error;
})(statement);

_md.error = error;
/**
    element chalk
     TODO ensure require('chalk')
     ittf:
     chalk green 'xxx'
     chalk green 'obj', red obj.name
     js:
     console.log(chalk.green('xxx');
     console.log(chalk.green('obj'), chalk.red(obj.name));
    
*/
var chalk = (function (statement) {
    _inherits(chalk, statement);
    function chalk(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(chalk.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, chalk);
        this.wzElement = "chalk";
    }
    return chalk;
})(statement);

_md.chalk = chalk;
/**
    element describe
     mocha framework support
    
     ittf
     describe my synchronous component
     before
     before-each
     after
     after-each
     it should do a great work quickly
    
     describe my asynchronous component
     before-async
     _ done
     after-async
     _ done
     it-async should do a great work in a reasonable time
     _ done
    
*/
var describe = (function (statement) {
    _inherits(describe, statement);
    function describe(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(describe.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, describe);
        this.wzElement = "describe";
    }
    return describe;
})(statement);

_md.describe = describe;
/**
    element it
     mocha framework support
     ittf
     see 'describe' element
*/
var it = (function (statement) {
    _inherits(it, statement);
    function it(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(it.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, it);
        this.wzElement = "it";
    }
    return it;
})(statement);

_md.it = it;
/**
    element itAsync
     mocha framework support
     ittf
     see 'describe' element
*/
var itAsync = (function (statement) {
    _inherits(itAsync, statement);
    function itAsync(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(itAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, itAsync);
        this.wzElement = "itAsync";
    }
    return itAsync;
})(statement);

_md.itAsync = itAsync;
/**
    element before
     mocha framework support
     ittf
     see 'describe' element
*/
var before = (function (statement) {
    _inherits(before, statement);
    function before(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, before);
        this.wzElement = "before";
    }
    return before;
})(statement);

_md.before = before;
/**
    element beforeAsync
     mocha framework support
     ittf
     see 'describe' element
*/
var beforeAsync = (function (statement) {
    _inherits(beforeAsync, statement);
    function beforeAsync(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(beforeAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, beforeAsync);
        this.wzElement = "beforeAsync";
    }
    return beforeAsync;
})(statement);

_md.beforeAsync = beforeAsync;
/**
    element beforeEach
     mocha framework support
     ittf
     see 'describe' element
*/
var beforeEach = (function (statement) {
    _inherits(beforeEach, statement);
    function beforeEach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(beforeEach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, beforeEach);
        this.wzElement = "beforeEach";
    }
    return beforeEach;
})(statement);

_md.beforeEach = beforeEach;
/**
    element after
     mocha framework support
     ittf
     see 'describe' element
*/
var after = (function (statement) {
    _inherits(after, statement);
    function after(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, after);
        this.wzElement = "after";
    }
    return after;
})(statement);

_md.after = after;
/**
    element afterAsync
     mocha framework support
     ittf
     see 'describe' element
*/
var afterAsync = (function (statement) {
    _inherits(afterAsync, statement);
    function afterAsync(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(afterAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, afterAsync);
        this.wzElement = "afterAsync";
    }
    return afterAsync;
})(statement);

_md.afterAsync = afterAsync;
/**
    element afterEach
     mocha framework support
     ittf
     see 'describe' element
*/
var afterEach = (function (statement) {
    _inherits(afterEach, statement);
    function afterEach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(afterEach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, afterEach);
        this.wzElement = "afterEach";
    }
    return afterEach;
})(statement);

_md.afterEach = afterEach;
_md.__tagElementMapping = { '+': 'statement', '#': 'comment', '##': 'commentmultiline', '++': 'statementmultiline', 'var': 'xvar', 'wz-var': 'wzVar', 'wzvar': 'wzVar', 'const': 'xconst', 'wz-const': 'wzConst', 'wzconst': 'wzConst', 'let': 'xlet', '=': 'initValue', '@id': 'identifier', '@expr': 'expressionMember', 'void': 'xvoid', 'op!': 'not', '||': 'or', 'op||': 'or', '&&': 'and', 'op&&': 'and', '===': 'op_eq_strict', 'op===': 'op_eq_strict', '!==': 'op_noteq_strict', 'op!==': 'op_noteq_strict', '==': 'op_eq', 'op==': 'op_eq', '!=': 'op_noteq', 'op!=': 'op_noteq', 'minus': 'op_minus', 'op-': 'op_minus', 'op': 'op_minus', 'plus': 'op_plus', 'op+': 'op_plus', 'times': 'op_times', 'op*': 'op_times', 'divide': 'op_div', 'op/': 'op_div', 'power': 'op_power', 'op**': 'op_power', 'mod': 'op_mod', 'op&': 'bit_and', 'op|': 'bit_or', 'xor': 'op_xor', 'op^': 'op_xor', 'xand': 'op_xand', 'op~': 'bit_not', 'op<<': 'bit_left_shift', 'op>>': 'bit_right_shift', 'op>>>': 'zero_fill_right_shift', 'gt': 'op_gt', 'op>': 'op_gt', '>=': 'op_ge', 'op>=': 'op_ge', 'lt': 'op_lt', 'op<': 'op_lt', '<=': 'op_le', 'op<=': 'op_le', 'require': 'xrequire', 'import': 'ximport', ':import': 'typeImport', 'export': 'xexport', 'export-default': 'exportDefault', 'exportdefault': 'exportDefault', ':export': 'typeExport', ':export-ns': 'typeExportNamespace', ':exportns': 'typeExportNamespace', ':require': 'typeRequire', 'if': 'xif', 'else': 'xelse', 'for': 'xfor', 'break': 'xbreak', 'continue': 'xcontinue', 'while': 'xwhile', 'do': 'xdo', 'switch': 'xswitch', 'case': 'xcase', 'default': 'xdefault', 'try': 'xtry', 'catch': 'xcatch', 'finally': 'xfinally', 'throw': 'xthrow', 'delete': 'xdelete', ':param': 'typeParameterInst', '_': 'call', '._': 'memberCall', '@_': 'decoratorCall', '(': 'callOnValue', '.': 'memberAccess', '.[': 'memberAccessComputed', '{': 'jsObject', '[': 'jsArray', '@': 'jsPropertyOrValue', '...': 'jsRest', ':': 'namedCallParam', 'jst': 'jsonStatementTree', 'function': 'xfunction', 'wz-iife': 'wzIife', 'wziife': 'wzIife', '=>': 'arrowfunction', 'async=>': 'asyncarrowfunction', 'function*': 'generatorfunction', 'async-function': 'asyncfunction', 'm': 'method', 'wz-function': 'wzFunction', 'wzfunction': 'wzFunction', 'yield': 'xyield', 'await': 'xawait', 'return': 'xreturn', 'class': 'xclass', 'wz-class': 'wzClass', 'wzclass': 'wzClass', 'new': 'xnew', '`lit': 'template', '`tag': 'taggedTemplate', '_`': 'tagFunctionCall', 'macro': 'macroExpr', 'react': 'reactComponent', 'react-f': 'reactFunction', 'reactf': 'reactFunction', 'set-state': 'setState', 'setstate': 'setState', 'will-mount': 'willMount', 'willmount': 'willMount', 'did-mount': 'didMount', 'didmount': 'didMount', 'will-unmount': 'willUnmount', 'willunmount': 'willUnmount', 'should-update': 'shouldUpdate', 'shouldupdate': 'shouldUpdate', 'did-update': 'didUpdate', 'didupdate': 'didUpdate', 'will-update': 'willUpdate', 'willupdate': 'willUpdate', 'will-receive-props': 'willReceiveProps', 'willreceiveprops': 'willReceiveProps', 'event': 'htmlevent', '<': 'htmlelement', 'style-jsx': 'styleJsx', 'stylejsx': 'styleJsx', '@param': 'htmlParam', '@filter': 'htmlFilter', 'wz-require': 'wzRequire', 'wzrequire': 'wzRequire', 'graphql-query': 'graphqlQuery', 'graphqlquery': 'graphqlQuery', 'graphql-mutation': 'graphqlMutation', 'graphqlmutation': 'graphqlMutation', '{{': 'handlebar', 'log?': 'inspect', 'it-async': 'itAsync', 'itasync': 'itAsync', 'before-async': 'beforeAsync', 'beforeasync': 'beforeAsync', 'before-each': 'beforeEach', 'beforeeach': 'beforeEach', 'after-async': 'afterAsync', 'afterasync': 'afterAsync', 'after-each': 'afterEach', 'aftereach': 'afterEach', 'enum': 'enumFacet', 'max-length': 'maxLengthFacet', 'maxlength': 'maxLengthFacet', 'min-length': 'minLengthFacet', 'minlength': 'minLengthFacet', 'max-value': 'maxValueFacet', 'maxvalue': 'maxValueFacet', 'min-value': 'minValueFacet', 'minvalue': 'minValueFacet', 'range': 'rangeFacet', 'regexp': 'regexpFacet', 'array-of': 'arrayOf', 'arrayof': 'arrayOf', 'instance-of': 'instanceOf', 'instanceof': 'instanceOf', 'one-of': 'oneOf', 'oneof': 'oneOf', 'one-of-type': 'oneOfType', 'oneoftype': 'oneOfType', 'string': 'stringParam', 'boolean': 'booleanParam', 'number': 'numberParam', 'date': 'dateParam', 'func': 'functionParam', 'symbol': 'symbolParam', 'node': 'nodeParam', 'element': 'elementParam', 'exact': 'exactParam', 'any': 'anyParam', 'callback': 'callbackParam', 'options-callback': 'optionsCallbackParam', 'optionscallback': 'optionsCallbackParam', '[{': 'arrayOrObjectParam', 'react-style': 'reactStyleParam', 'reactstyle': 'reactStyleParam', 'shape': 'shapeParam' };
// model/replaceUnknownElement( )
var jsModelException = (function () {
    function jsModelException(message, node, instance) {
        _classCallCheck(this, jsModelException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log('message', this.message);
        this.stack = (new Error()).stack;
        this.node = node;
    }
    return jsModelException;
})();

_md.jsModelException = jsModelException;
var jsContext = (function () {
    function jsContext() {
        _classCallCheck(this, jsContext);
        this.validationErrors = [];
    }
    jsContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    jsContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    jsContext.prototype.verifyEnum = function(valueType, valueName, value, allowed, node) {
        if (value && allowed.indexOf(value) < 0) {
            var allowedStr = 'allowed: ' + allowed.join(', ');
            this.validationErrors.push(valueType + ' ' + valueName + ' has an invalid value: ' + value + ' ' + allowedStr + '. At ' + (node.wzSourceLineInfo ? node.wzSourceLineInfo.toString(node) : 'location unavailable'));
        }
    }
    return jsContext;
})();

_md.jsContext = jsContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function parseboolean(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    if (!isBoolean(value)) {
        throw new jsModelException('Must be a boolean value (\"true\" or \"false\"), got:' + value, node);
    }
    return value === 'true' ? true : false;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

