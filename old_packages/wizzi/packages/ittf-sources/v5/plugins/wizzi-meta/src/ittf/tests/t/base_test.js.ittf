module 
	$params name
    kind jsfile
	+
	import path
	import util
	+
	var del = require('del')
    var expect = require('expect.js')
	+
	var _ = require('lodash')
	var mtree = require('wizzi-mtree')
	var file = require('wizzi-utils').file
	var verify = require('wizzi-utils').verify
	var mocks = require('wizzi-utils').mocks
	+
	$hook imports
	+
	describe ${name}
		$hook

	+
	function getWizziObject
		return 
			{
				@ loadMTree 
					_ mtree.createLoadMTree
						@ mocks.repo.getCreateFilesystemStore()
						{
							@ useCache false
				@ file file
				@ verify verify
	+
	function getLoadModelContext
		param mTreeBuildUpContext
		return 
			_ mocks.getLoadModelContext
				@ mTreeBuildUpContext
	+
	function getTestModelInfo
		param schemaName
		param modelName
		+
		var expectedPath
			_ path.join
				@ __dirname
				@ 'ittf'
				@ modelName + '.' + schemaName + '.expected'
		var expectedContent
			_ file.read
				@ expectedPath
		return 
			{
				@ ittfPath
					_ path.join
						@ __dirname
						@ 'ittf'
						@ modelName + '.' + schemaName + '.ittf'
				@ expectedPath expectedPath
				@ expectedContent expectedContent
				@ writeResult
					function
						param content
						_ file.write
							_ path.join
								@ __dirname
								@ 'ittf'
								@ modelName + '.' + schemaName + '.result'
							@ content