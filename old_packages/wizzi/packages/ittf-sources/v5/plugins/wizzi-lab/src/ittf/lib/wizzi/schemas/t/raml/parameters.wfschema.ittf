$group

	e namedParameter : ramlItem

		# The RAML Specification describes collections of named parameters for the following properties: 
		# URI parameters, query string parameters, form parameters, 
		# request bodies (depending on the media type), and request and response headers. 
		# All the collections specify the named parameters' attributes as described in this section.
		# [WMT The wmt-name is the key of the property]

		is-abstract
		
		a_tag( displayName display-name
			# (Optional) The displayName attribute specifies the parameter's display name. 
			# It is a friendly name used only for display or documentation purposes. 
			# If displayName is not specified, it defaults to the property's key (the name of the property itself).

		a description
			# (Optional) The description attribute describes the intended use or meaning of the parameter.
			# This value MAY be formatted using Markdown [MARKDOWN].

		a type
			
			# (Optional) The type attribute specifies the primitive type of the parameter's resolved value. 
			# API clients MUST return/throw an error if the parameter's resolved value does not match the specified type. 
			# If type is not specified, it defaults to string. Valid types are:
			
			default string
			restrict
				enum string
					# Value MUST be a string.
				enum number
					# Value MUST be a number. Indicate floating point numbers as defined by YAML.
				enum integer
					# Value MUST be an integer. Floating point numbers are not allowed. The integer type is a subset of the number type.
				enum date
					# Value MUST be a string representation of a date as defined in RFC2616 Section 3.3 [RFC2616]. See Date Representations.
					# As defined in [RFC2616], all date/time stamps are represented in Greenwich Mean Time (GMT), 
					# which for the purposes of HTTP is equal to UTC (Coordinated Universal Time). 
					# This is indicated by including "GMT" as the three-letter abbreviation for the timezone. 
					# Example: Sun, 06 Nov 1994 08:49:37 GMT.
				enum boolean
					# Value MUST be either the string "true" or "false" (without the quotes).
				enum file
					# (Applicable only to Form properties)<br><br>Value is a file. Client generators SHOULD use this type to handle file uploads correctly.
	
		a enum
			# (Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error.

		a pattern
			# (Optional, applicable only for parameters of type string) The pattern attribute is a regular expression that a parameter of type string MUST match. Regular expressions MUST follow the regular expression specification from ECMA 262/Perl 5. The pattern MAY be enclosed in double quotes for readability and clarity.

		a minLength
			# (Optional, applicable only for parameters of type string) The minLength attribute specifies the parameter value's minimum number of characters.

		a maxLength
			# (Optional, applicable only for parameters of type string) The maxLength attribute specifies the parameter value's maximum number of characters.

		a minimum
			# (Optional, applicable only for parameters of type number or integer) The minimum attribute specifies the parameter's minimum value.

		a maximum
			# (Optional, applicable only for parameters of type number or integer) The maximum attribute specifies the parameter's maximum value.

		a example
			# (Optional) The example attribute shows an example value for the property. This can be used, e.g., by documentation generators to generate sample values for the property.

		a_flag( repeat, repeat )
			# (Optional) The repeat attribute specifies that the parameter can be repeated. If the parameter can be used multiple times, the repeat parameter value MUST be set to 'true'. Otherwise, the default value is 'false' and the parameter may not be repeated.

		a_flag( isRequired, is-required )
			# (Optional except as otherwise noted) The required attribute specifies whether the parameter and its value MUST be present in the API definition. It must be either 'true' if the value MUST be present or 'false' otherwise.
			# In general, parameters are optional unless the required attribute is included and its value set to 'true'.
			# For a URI parameter, the required attribute MAY be omitted, but its default value is 'true'.

		a_flag( isEmptyAllowed, is-empty-allowed )
		
		a default
			# (Optional) The default attribute specifies the default value to use for the property if the property is omitted or its value is not specified. This SHOULD NOT be interpreted as a requirement for the client to send the default attribute's value if there is no other value to send. Instead, the default attribute's value is the value the server uses if the client does not send a value.

		a_tag( arrayFormat, array-format )
			type string
			restrict 
				enum csv
				enum multi
				enum pipes
				enum ssv
				enum tsv

		m getFacets
			var ret = []
			addFacet( displayName, string )
			addFacet( description, string )
			addFacet( type, string )
			addFacet( pattern, string )
			addFacet( minLength, integer )
			addFacet( maxLength, integer )
			addFacet( minimum, integer )
			addFacet( maximum, integer )
			addFacet( example, string )
			addFacet( repeat, boolean )
			addFacet( default, string )
			addFacet( isRequired, boolean )
			addFacet( isEmptyAllowed, boolean )
			addFacet( enum, array )
			addFacet( arrayFormat, string )
			return ret

	e baseUriParameter : namedParameter
		tag base-uri-param
		a description
			# The base uri parameter description

	e queryParameter : namedParameter
		# An API's resources MAY be filtered (to return a subset of results) or 
		# altered (such as transforming a response body from JSON to XML format) by the use of query strings. 
		# If the resource or its method supports a query string, the query string MUST be defined by 
		# the queryParameters property.
		
		tag query-param

		r comment/s

		m getComments
			return initComments(this.comments)

	e formParameter : namedParameter

		# If the API's media type is either application/x-www-form-urlencoded or multipart/form-data, 
		# the formParameters property MUST specify the name-value pairs that the API is expecting.
		# The formParameters property is a map in which the key is the name of the web form parameter, 
		# and the value is itself a map the specifies the web form parameter's attributes, 
		# according to the Named Parameters section.

		tag form-param

		r comment/s

		m getComments
			return initComments(this.comments)

	