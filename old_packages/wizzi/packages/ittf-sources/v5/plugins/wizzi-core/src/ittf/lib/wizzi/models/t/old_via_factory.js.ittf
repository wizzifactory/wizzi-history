module
	$params schema, schemaLabel
	kind jsfile

	#
		# ${schemaLabel}
	
	var path = require('path')
	var util = require('util')
	var stringify = require('json-stringify-safe')
	var verify = require('../../util/verify')
	+
    var ${schema}model = require('./${schema}-model.g')
	+
    var md = module.exports = {};
	+    
	# called from the wizzi.wizziFactory.getLoadModel method
	# params
		# { wizziObject
			# func loadMTree
				# api-ref wizzi-mtree.loader.loadMTree
			# { file
				# api-ref wizzi-utils.file
			# { verify
				# api-ref wizzi-utils.verify
			# { errors
				# type WizziModelLoadError
	set md.createLoadModel
		function
			param wizziObject
			var loadMTree = wizziObject.loadMTree
			var file = wizziObject.file
			var errors = wizziObject.errors

			#
				# Load a WizziModel of type ${schema} from an IttfDocument uri
				# params
					# string ittfDocumentUri
					# { requestContext
						# { __productionManager
							# { productionContext
								# { aclstat
						# { __ittfDocumentStore
						# { mTreeBuildUpContext
							# optional
						# { __request
							# This is a legacy that should disappear.
							# See the wizzi.production.productionContext class.
							# boolean dumpAll
							# boolean dumpIttfModel
							# boolean dumpModel
							# boolean dumpModelAfterInitializeAsync
					#   callback
			return
				function loadModel
					param ittfDocumentUri
					param requestContext
					param callback
			
					if typeof callback !== 'function'
						throw new TypeError('callback must be a function')

					if typeof ittfDocumentUri !== 'string'
						return
							_ callback 
								_ error
									@ 999
									@ 'ittfDocumentUri parameter must be a string'

					if verify.isObject(requestContext) !== true
						return
							_ callback
								_ error
									@ 999
									@ 'requestContext parameter must be an object'

					if verify.isObject(requestContext.__productionManager) !== true
						return
							_ callback
								_ error
									@ 999
									@ 'requestContext.__productionManager parameter must be an object'

					set requestContext.mTreeBuildUpContext
						_ Object.assign
							{
							_ requestContext.__productionManager.globalContext
							@ requestContext.mTreeBuildUpContext
					
					$hook context-settings
					
					var wizziModelRequest = requestContext.__request || {}
					var start = Date.now()
			
					# load the magical tree
					_ loadMTree
						@ ittfDocumentUri
						@ requestContext
						function
							param err
							param mTree
							if err
								return callback(err)
					
							# TODO implement a stats object inside the wizziModelRequest object
							log 'Loaded model instance of schema ${schema} from Ittf document ' + ittfDocumentUri + ' in ' + (Date.now() - start) + ' ms'
					
							if (wizziModelRequest.dumpAll || wizziModelRequest.dumpIttfModel) && file.isFilePath(ittfDocumentUri)
								var ittfDumpPath = path.join(path.dirname(ittfDocumentUri), '_debug', path.basename(ittfDocumentUri) + '.ittf.json')
								_ file.write
									@ ittfDumpPath
									_ stringify
										@ mTree
										@ null
										@ 2
					
							_ ${schema}model(mTree, ittfDocumentUri, wizziModelRequest, callback)

	$hook

	function error
		param code
		param message
		return
			{
				@ __is_error true
				@ module 'wizzi-core.wizzi.models.${schema}-factory.g'
				@ sourcePath __filename
				@ code code
				@ message message

		
	
