clazz( Node )
	ctor
		param wzName
		set this.wzName = wzName
		set this.wzId = schemautil.getIdentifier(wzName, true)
		set this.comments = []

	m ensureName
		param minLength
		
		var ml = typeof minLength === 'undefined' ? 1 : minLength
		var empty = !schemautil.isNotEmpty(this.wzName)
		
		return !empty && this.wzName.length >= ml

	m wzInitialize
		param ctx
		
	m wzVerify
		param ctx

	m importComments
		param other
		foreach comment in other.comments
			_ this.addComment(comment.wzName)

	m addComment
		param name
		var item = new Comment(name)
		set item.wzParent = this;
		_ this.comments.push(item)
		return item

	m importRestricts
		param other
		foreach restrictFrom in other.restricts
			var restrict = this.addRestrict(restrictFrom.wzName)
			_ restrict.importComments(restrictFrom)
			foreach facetFrom in restrictFrom.facets
				if facetFrom.wzElement === 'enumFacet'
					var enumFacet = restrict.addEnumFacet(facetFrom.wzName)
					_ enumFacet.importComments(facetFrom)

	m addRestrict
		param name
		var item = new Restrict(name)
		set item.wzParent = this;
		_ this.restricts.push(item)
		return item

	m importDeclares
		param other
		foreach declareFrom in other.declares
			var declare = this.addDeclare(declareFrom.wzName)
			_ declare.importComments(declareFrom)
			foreach statementFrom in declareFrom.statements
				_ declare.importStatement(statementFrom)

	m addDeclare
		param name
		var item = new Declare(name)
		set item.wzParent = this;
		_ this.declares.push(item)
		return item

	m importMethods
		param other
		foreach methodFrom in other.methods
			var method = this.addMethod(methodFrom.wzName)
			set method.emitKey = methodFrom.emitKey
			_ method.importComments(methodFrom)
			foreach paramFrom in methodFrom.params
				_ method.addParam(paramFrom.wzName)
			foreach requireFrom in methodFrom.requires
				var require = method.addRequire(requireFrom.wzName)
				set require.declareVar = requireFrom.declareVar
				set require.invoke = requireFrom.invoke
				set require.kind = requireFrom.kind

			foreach statementFrom in methodFrom.statements
				_ method.importStatement(statementFrom)

	m addMethod
		param name
		var item = new Method(name)
		set item.wzParent = this;
		_ this.methods.push(item)
		return item


