module 
    kind jsfile

    var util = require('util')

    var md
        set module.exports =
            { 

	error( Node, message, node )
        var msg
            [ 
                @ message
        if node
            if node.wzSourceLineInfo
                var info = node.wzSourceLineInfo
                var filePath = 'TODO'
                if node.wzSourceFilepath
                    set filePath = node.wzSourceFilepath(info.sourceKey)
                _ msg.push(' at row: ' + info.row)
                _ msg.push(', col: ' + info.col)
                _ msg.push(', source: ' + info.sourceKey)
                _ msg.push(', in file: ' + filePath)
            elif node.row
                _ msg.push(' at row: ' + node.row)
                _ msg.push(', col: ' + node.col)
                _ msg.push(', source: ' + node.sourceKey)
                _ msg.push(', in file: ' + (node.model ? node.model.uri : 'unavailable'))
        set this.message = msg.join('')
		# log 'NodeError', this.message
        # set this.node = node

	error( IttfNotFound, resourceType, name, sourceUri )
		set this.message = resourceType + ': ' + name + 
			\ ' not found, processing document ' + md.getSrcPathInfo(sourceUri)

    error( IttfLoad, message, srcPath, node, ex )
        $* 22/10/18
		if !(ex)
            set ex = node
            set node = null
		*$
        set this.message = message
		if srcPath
			set this.message += '\nLoading ittf document ' + md.getSrcPathInfo(srcPath)
        if node
			# TODO set this.nodeInfo = new NodeError('', node)
            set this.message += ('\n' + new NodeError('', node).message)
		# TODO set this.inner = ex ???

	error( RepoIO, message, uri, innerEx )
		set this.message = message + '\nuri: ' + uri

	set md.getSrcPathInfo
		function
			param srcPath
			if typeof (srcPath) === 'string'
				return srcPath
			if (srcPath && (typeof (srcPath) === 'object'))
				var msg = md.getSrcPathInfoFromNode(srcPath)
				return 
					iif msg
						then msg
						else 
							_ srcPath.toString()
			return 'unavailable'
    
	set md.getSrcPathInfoFromNode
		function
			param node
			var msg
				[ 
			if node
				if node.WmtSourceLineInfo
					var info = node.WmtSourceLineInfo
					_ msg.push((' at row: ' + info.row))
					_ msg.push((', col: ' + info.col))
					_ msg.push((', source: ' + info.source))
					_ msg.push((', in file: ' + 'TODO'))
				elif node.wzSourceLineInfo
					var info = node.wzSourceLineInfo
					var filePath = 'TODO'
					if node.wzSourceFilepath
						set filePath = node.wzSourceFilepath(info.sourceKey)
					_ msg.push((' at row: ' + info.row))
					_ msg.push((', col: ' + info.col))
					_ msg.push((', source: ' + info.sourceKey))
					_ msg.push((', in file: ' + filePath))
			return 
				iif msg.length == 0
					then null
					else 
						_ msg.join('')






