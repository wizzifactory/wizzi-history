module wizzi-utils.lib.scanners.folderBrowse
    kind jsfile
    
	var path = require('path')
	var async = require('async')
	var verify = require('../verify')
	var vfile = require('../fs/vfile')
	var encdec = require('../crypto/encdec')

	var md
        set module.exports
            { 

	set md.scan
        function
            string folderPath
			param options
			callback

			if typeof callback === 'undefined'
				set callback = options
				set options = {}

			if options.file
				_ md.scanExec
					@ options.file
					@ folderPath
					@ options
					@ callback
			else
				_ vfile
					f_cb( file )
						_ md.scanExec
							@ file
							@ folderPath
							@ options
							@ callback

	set md.scanExec
        function
			param file
            param folderPath
			param options
			param callback

			_ file.isDirectory
				@ folderPath
				f_cb( result )
					if result == false
						return
							_ callback
								_ error
									@ '999'
									@ 'scan'
									@ 'wizzi-utils.folderBrowse.scan. Parameter folderPath must be an existing folder. Received: ' + folderPath

					breadcrumbs(folderPath, folderUri)

					_ file.readdir
						@ folderPath
						f_cb( dir )

							var
								decl fsitems = []
								decl fullPath
								decl fsitem

							_ async.map
								@ dir
								function
									param item
									param callback
									# log 'wizzi-util.folderBrowse.item', item
			
									var fullPath
										_ path.join
											@ folderPath
											@ item
				
									var uri = ''
				
									if options.rootFolder
										set uri
											_ verify.unixifyPath
												_ fullPath.substr
													@ options.rootFolder.length
				
									_ file.isFile
										@ fullPath
										f_cb( result )
											if result
												var ss = item.split('.')
												if ss[ss.length-1] === 'ittf'
													_ file.read
														@ fullPath
														f_cb( content )
															_ fsitems.push
																{
																	@ isFolder false
																	@ uri uri
																	@ name ss.slice(0, ss.length-2).join('.')
																	@ basename item
																	@ isIttfDocument true
																	@ isFragment fullPath.indexOf('/t/') > -1 
																	@ schema ss[ss.length-2]
																	@ mime ss[ss.length-2]
																	$$ @ fullPath fullPath
																	@ hash encdec.encrypt(fullPath)
																	@ content content
															r_cb()
												else
													_ fsitems.push
														{
															@ isFolder false
															@ uri uri
															@ name ss.slice(0, ss.length-1).join('.')
															@ basename item
															@ isIttfDocument false
															@ schema null
															@ mime ss[ss.length-1]
															@ hash encdec.encrypt(fullPath)
													r_cb()
				
											else
												_ fsitems.push
													{
														@ uri uri
														@ name item
														@ basename item
														@ isFolder true
														@ hash encdec.encrypt(fullPath)
												r_cb()
								f_cb()
									return
										_ callback
											@ null
											{
												@ folderPath folderPath
												@ folderUri folderUri
												@ breadCrumbs breadCrumbs
												@ fsitems fsitems