module 
    kind jsfile
	+
	import path
	import util
	+
    var expect = require('expect.js')
	var ittfTemp = require('../../lib/util/ittfTemp')
	var ittfFsNode = require('../../lib/scanners/ittfFsNode')
	var root
	+
	describe the ittfFsNode class
		+ 
		it should add a document

			set root = new ittfFsNode('root', null, true)
			log 'root', root
			var added
				_ root.addDocument('root/readme.md.ittf')
			log 'root', root
			tobe_true(added)
			tobe_array(root.folders, 0)
			tobe_array(root.documents, 1)
			tobe_string(root.documents[0].schema, md)
			tobe_string(root.documents[0].basename, readme.md.ittf)

		it should add a document fragment
			var added
				_ root.addDocument('root/t/title.md.ittf')
			log 'root', root
			tobe_true(added)
			tobe_array(root.folders, 1)
			tobe_array(root.documents, 1)
			tobe_true(root.folders[0].isTFolder)
			tobe_string(root.folders[0].basename, t)
			tobe_array(root.folders[0].documents, 1)
			tobe_string(root.folders[0].documents[0].basename, title.md.ittf)
			tobe_string(root.folders[0].documents[0].schema, md)
			tobe_true(root.folders[0].documents[0].isFragment)

		it should chhck infos
			_ root.setInfo()
			log 'root', root
			tobe_object_num(root.info.schemas, 1)
			tobe_string(root.info.schemas['md'].name, md)
			tobe_array(root.info.documents, 1)

		it-async should write an ittf
			var ittf = new ittfTemp('wzFs')
			_ root.toIttf(ittf)
			_ ittf.writeFile
				_ path.join
					@ __dirname
					@ 'outputs'
					@ 'test.wzfs.ittf'
				f_cb_test( result )
					_ done()





