roadmap Roadmap

	summary
		p The roadmap is a living document, and can change at any time, but the list below should 
			+ give some indication of our plans for the near future.

		p NOTE: today, 14 of september, the milestones for this year have been
			+ delayed 1 month. Sorry, but lots of tests have been added.
			br
			br

	milestone End of september 2017: first partial pre-release
		summary
			h5 'wizzi-demo' package
			ul
				li First documented pre-release.
				li Announce on facebook and twitter with caution for weak error checking.
			h5 'wizzi-docs' package
			ul
				li Continues the documentation effort.
				li First release of complete Api and Code sections.
			br
			br

	milestone End of october 2017: wizzi factory v4 (0.4.0 pre-release)
		summary
			
			h5 jsWizzi and mTree loading
			ul 
				li Complete test coverage of jsWizzi and mTree loading.
			
			h5 'js' language schema and 'js/module' artifact
			ul
				li Automatic type check of function arguments when code is generate in debug mode.
					+ A new notation for declaring parameters will be implemented.
					ittf
						- function alfa
							- string beta
							- { options
								- boolean gamma
									- optional
				li A js/preprocess model transformer (optional).
					div It will consent to avoid the clumsy 'set' and '_' node tags when not
						\b needed for some specific mTree build-up purpose.
			h5 'wizzi-demo' package
			ul
				li Plenty of examples.
			br
			br

	milestone End of december 2017: wizzi factory v5 (0.5.0 pre-release)
		summary

			p We hope that starting from this version the wizzi factory will be usable
				+ without the risk of losing time for bad error tracking.
				br Every effort will be put on tests, documentation and a neat
					+ error message system for loading and generation failures.
			
			h5 jsWizzi and mTree loading
			br
			br

	milestone Year 2018: wizzi studio and plugins development
		summary
			p The year 2018 will be dedicated to the development of a web application
				+ for managing ittf documents of models, transformers and artifact generators.
			p We will be able to monitor interactively the buildup of an mTree and its transformations.
			p The visitor pattern will be implemented to support model transformations.
			p We will focus on the automation of generation tasks based on the [#schema(wfjob)] schema.
			p New plugins will be developed for data management, form building, rest server apis
				+ and single page applications.


