/*
    artifact generator: C:\My\wizzi\v5\node_modules\wizzi-js\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\v5\kernel\wizzi-utils\src\ittf\lib\scanners\ittfdocumentstate.js.ittf
*/
'use strict';
// generated by wizzi.codegen.js4.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var path = require('path');
var verify = require('../verify');
var encdec = require('../crypto/encdec');
var IttfDocumentState = (function () {
    function IttfDocumentState(primaryPath, primaryUri, breadCrumbs, options) {
        _classCallCheck(this, IttfDocumentState);
        if (typeof options === 'undefined') {
            options = breadCrumbs;
            breadCrumbs = [];
        }
        this.primaryPath = primaryPath;
        this.primaryUri = primaryUri;
        this.breadCrumbs = breadCrumbs;
        this.primaryHash = encdec.encrypt(primaryPath);
        this.primaryIttf = {};
        this.fragments = [];
        this.ittfReferences = [];
        this.scanId = options.scanIdCounter;
        this.id = 'p_' + this.scanId + '_1';
        this.idCounter = 2;
        // log 'wizzi-utils.IttfDocumentState', this.primaryPath, this.primaryUri
    }
    IttfDocumentState.prototype.getFragment = function(uri) {
        var i, i_items=this.fragments, i_len=this.fragments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fragments[i];
            if (item.uri === uri) {
                return item;
            }
        }
        return null;
    }
    IttfDocumentState.prototype.getIttfReference = function(uri) {
        var i, i_items=this.ittfReferences, i_len=this.ittfReferences.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ittfReferences[i];
            if (item.uri === uri) {
                return item;
            }
        }
        return null;
    }
    IttfDocumentState.prototype.getUnscannedFragments = function() {
        var ret = [];
        var i, i_items=this.fragments, i_len=this.fragments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fragments[i];
            if (!item.ittf) {
                ret.push(item);
            }
        }
        return ret;
    }
    IttfDocumentState.prototype.getUnscannedIttfReferences = function() {
        var ret = [];
        var i, i_items=this.ittfReferences, i_len=this.ittfReferences.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ittfReferences[i];
            if (!item.documentState) {
                ret.push(item);
            }
        }
        return ret;
    }
    IttfDocumentState.prototype.hasUnscanned = function() {
        return this.getUnscannedFragments().length + this.getUnscannedIttfReferences().length > 0;
    }
    IttfDocumentState.prototype.setIttfContent = function(content) {
        this.primaryIttf.content = content;
    }
    IttfDocumentState.prototype.setIttfPretty = function(pretty) {
        this.primaryIttf.pretty = pretty;
    }
    IttfDocumentState.prototype.setFromScanResult = function(scanResult) {
        var i, i_items=Object.keys(scanResult.fragments), i_len=Object.keys(scanResult.fragments).length, k;
        for (i=0; i<i_len; i++) {
            k = Object.keys(scanResult.fragments)[i];
            var f = scanResult.fragments[k];
            if (this.getFragment(f.uri) == null) {
                f.id = 'f_' + this.scanId + '_' + this.idCounter++;
                this.fragments.push(f);
            }
        }
        var i, i_items=Object.keys(scanResult.ittfReferences), i_len=Object.keys(scanResult.ittfReferences).length, k;
        for (i=0; i<i_len; i++) {
            k = Object.keys(scanResult.ittfReferences)[i];
            var r = scanResult.ittfReferences[k];
            if (r.uri !== this.primaryPath) {
                if (this.getIttfReference(r.uri) == null) {
                    r.id = 'r_' + this.scanId + '_' + this.idCounter++;
                    this.ittfReferences.push(r);
                }
            }
        }
    }
    return IttfDocumentState;
})();

module.exports = IttfDocumentState;
