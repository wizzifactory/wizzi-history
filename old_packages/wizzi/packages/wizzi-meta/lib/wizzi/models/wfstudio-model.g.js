/*
    artifact generator: C:\My\wizzi\v5\node_modules\wizzi-legacy-v4\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\v5\node_modules\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Mon, 07 Jan 2019 16:48:03 GMT
*/
'use strict';
// generated by wizzi.codegen.js.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;


var _md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var wfstudioBase = (function () {
    function wfstudioBase(name, sourceLineInfo) {
        _classCallCheck(this, wfstudioBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    wfstudioBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    wfstudioBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadHistory.getIttfDocumentUri(sourceKey);
    }
    wfstudioBase.prototype.wzVerify = function() {
    }
    wfstudioBase.prototype.wzInitialize = function() {
    }
    wfstudioBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    wfstudioBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    wfstudioBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    wfstudioBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node);
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    wfstudioBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfstudioBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    wfstudioBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfstudioBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfstudioBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this);
        }
        fromColl.splice(index, 1);
    }
    wfstudioBase.prototype.error = function(message, node) {
        throw new _md.wfstudioModelException(message, node, this);
    }
    wfstudioBase.prototype.toJsonProperties = function(result) {
        result.wzElement = this.wzElement;
        result.wzTag = this.wzTag;
        result.wzName = this.wzName;
    }
    wfstudioBase.prototype.toJsonChildren = function(result) {
        if (this.wzChildren.length > 0) {
            var children = [];
            var i, i_len=this.wzChildren.length, item;
            for (i=0; i<i_len; i++) {
                item = this.wzChildren[i];
                children.push(item.toJson());
            }
            result.wzChildren = children;
        }
    }
    return wfstudioBase;
})();

_md.wfstudioBase = wfstudioBase;

// element wfstudioitem
var wfstudioitem = (function (wfstudioBase) {
    _inherits(wfstudioitem, wfstudioBase);
    function wfstudioitem(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wfstudioitem.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wfstudioitem);
        this.wzElement = "wfstudioitem";
        // relation property
        this.properties = [];
        // relation comment
        this.comments = [];
    }
    wfstudioitem.prototype.addProperty = function(name, sourceLineInfo) {
        var retval = new _md.property(name, sourceLineInfo);
        retval.wzParent = this;
        this.properties.push(retval);
        return retval;
    }
    wfstudioitem.prototype.getProperty = function(name) {
        var found = null;
        this.properties.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfstudioitem.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    wfstudioitem.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfstudioitem.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    wfstudioitem.prototype.toJsonProperties = function(result) {
        _md.wfstudioBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    wfstudioitem.prototype.toJsonChildren = function(result) {
        _md.wfstudioBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            items.push(item.toJson());
        }
        result['properties'] = items;
        items = [];
        var i, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
    }
    wfstudioitem.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                return this.wzLoadToChildColl(child, _md.property, this.properties);
            }
        }
        return ok;
    }
    wfstudioitem.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    wfstudioitem.prototype.wzVerify = function(ctx) {
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        _md.wfstudioBase.prototype.wzVerify.call(this, ctx);
    }
    wfstudioitem.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        _md.wfstudioBase.prototype.wzInitialize.call(this, ctx);
    }
    wfstudioitem.prototype.propertyOfCategory = function(categoryName) {
        var ret = [];
        var i, i_len=this.properties.length, item;
        for (i=0; i<i_len; i++) {
            item = this.properties[i];
            if (item.category === categoryName) {
                ret.push(item);
            }
        }
        return ret;
    }
    return wfstudioitem;
})(wfstudioBase);

_md.wfstudioitem = wfstudioitem;
// element comment
var comment = (function (wfstudioitem) {
    _inherits(comment, wfstudioitem);
    function comment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    comment.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    comment.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    comment.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
    }
    return comment;
})(wfstudioitem);

_md.comment = comment;
// element property
var property = (function (wfstudioitem) {
    _inherits(property, wfstudioitem);
    function property(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(property.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, property);
        this.wzElement = "property";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.category = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.name = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.value = null
    }
    property.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    property.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.category)) {
            result["category"] = this.category;
        }
        if (!isEmpty(this.name)) {
            result["name"] = this.name;
        }
        if (!isEmpty(this.value)) {
            result["value"] = this.value;
        }
    }
    property.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
    }
    property.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'n') {
            if (name === 'name') {
                this.name = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'value') {
                this.value = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'category') {
                this.category = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    property.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    property.prototype.wzInitialize = function(ctx) {
        this.name = this.wzName;
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return property;
})(wfstudioitem);

_md.property = property;
/**
    element wfstudio
     The root element
*/
var wfstudio = (function (wfstudioitem) {
    _inherits(wfstudio, wfstudioitem);
    function wfstudio(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wfstudio.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wfstudio);
        this.wzElement = "wfstudio";
        // relation project
        this.projects = [];
        // relation xpackage
        this.packages = [];
    }
    wfstudio.prototype.addProject = function(name, sourceLineInfo) {
        var retval = new _md.project(name, sourceLineInfo);
        retval.wzParent = this;
        this.projects.push(retval);
        return retval;
    }
    wfstudio.prototype.getProject = function(name) {
        var found = null;
        this.projects.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfstudio.prototype.addXpackage = function(name, sourceLineInfo) {
        var retval = new _md.xpackage(name, sourceLineInfo);
        retval.wzParent = this;
        this.packages.push(retval);
        return retval;
    }
    wfstudio.prototype.getXpackage = function(name) {
        var found = null;
        this.packages.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfstudio.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    wfstudio.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    wfstudio.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.projects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.projects[i];
            items.push(item.toJson());
        }
        result['projects'] = items;
        items = [];
        var i, i_len=this.packages.length, item;
        for (i=0; i<i_len; i++) {
            item = this.packages[i];
            items.push(item.toJson());
        }
        result['packages'] = items;
    }
    wfstudio.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 7 && _ch == 'p') {
            if (name === 'project') {
                return this.wzLoadToChildColl(child, _md.project, this.projects);
            }
            else if (name === 'package') {
                return this.wzLoadToChildColl(child, _md.xpackage, this.packages);
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    wfstudio.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    wfstudio.prototype.wzVerify = function(ctx) {
        var i, i_len=this.projects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.projects[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.packages.length, item;
        for (i=0; i<i_len; i++) {
            item = this.packages[i];
            item.wzVerify(ctx);
        }
        _md.wfstudioitem.prototype.wzVerify.call(this, ctx);
    }
    wfstudio.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.projects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.projects[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.packages.length, item;
        for (i=0; i<i_len; i++) {
            item = this.packages[i];
            item.wzInitialize(ctx);
        }
        this.packagesEx = [];
        this.projectsEx = [];
        this.schemas = [];
        this.artifacts = [];
        var packageEx, folder;
        var i, i_len=this.packages.length, p;
        for (i=0; i<i_len; i++) {
            p = this.packages[i];
            packageEx = {
                name: p.wzName, 
                description: p.description, 
                baseFolderUri: p.baseFolderUri, 
                srcFolder: p.srcFolder, 
                destFolder: p.destFolder, 
                folders: []
            };
            var j, j_len=p.folders.length, f;
            for (j=0; j<j_len; j++) {
                f = p.folders[j];
                folder = {
                    name: f.wzName, 
                    fullPath: path.join(p.baseFolderUri, f.wzName), 
                    aspects: []
                };
                var k, k_len=f.aspects.length, a;
                for (k=0; k<k_len; k++) {
                    a = f.aspects[k];
                    folder.aspects.push(a.wzName);
                }
                packageEx.folders.push(folder);
            }
            this.packagesEx.push(packageEx);
            var schema, artifact;
            var j, j_len=p.schemas.length, s;
            for (j=0; j<j_len; j++) {
                s = p.schemas[j];
                schema = {
                    package: p.wzName, 
                    name: s.wzName, 
                    uri: p.wzName + '/' + s.wzName, 
                    srcPath: s.srcPath, 
                    modelPath: s.modelPath, 
                    factoryPath: s.factoryPath, 
                    jsonDocPath: s.jsonDocPath, 
                    defaultArtifact: s.defaultArtifact, 
                    isPseudo: s.isPseudo, 
                    artifacts: []
                };
                this.schemas.push(schema);
                var k, k_len=s.artifacts.length, a;
                for (k=0; k<k_len; k++) {
                    a = s.artifacts[k];
                    artifact = {
                        name: s.wzName + '/' + a.wzName, 
                        package: p.wzName, 
                        schema: s.wzName, 
                        srcPath: a.srcPath, 
                        modulePath: a.modulePath, 
                        isDefault: a.isDefault
                    };
                    this.artifacts.push(artifact);
                    schema.artifacts.push(artifact);
                }
            }
        }
        var i, i_len=this.projects.length, p;
        for (i=0; i<i_len; i++) {
            p = this.projects[i];
            this.projectsEx.push({
                name: p.wzName, 
                description: p.description, 
                srcFolder: p.srcFolder, 
                destFolder: p.destFolder
            });
        }
        this.__jsonProps = {
            packagesEx: this.packagesEx, 
            projectEx: this.projectEx, 
            schemas: this.schemas, 
            artifacts: this.artifacts
        };
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return wfstudio;
})(wfstudioitem);

_md.wfstudio = wfstudio;
// element folder
var folder = (function (wfstudioitem) {
    _inherits(folder, wfstudioitem);
    function folder(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(folder.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, folder);
        this.wzElement = "folder";
        // relation aspect
        this.aspects = [];
    }
    folder.prototype.addAspect = function(name, sourceLineInfo) {
        var retval = new _md.aspect(name, sourceLineInfo);
        retval.wzParent = this;
        this.aspects.push(retval);
        return retval;
    }
    folder.prototype.getAspect = function(name) {
        var found = null;
        this.aspects.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    folder.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    folder.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    folder.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            items.push(item.toJson());
        }
        result['aspects'] = items;
    }
    folder.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 'a') {
            if (name === 'aspect') {
                return this.wzLoadToChildColl(child, _md.aspect, this.aspects);
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    folder.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    folder.prototype.wzVerify = function(ctx) {
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzVerify(ctx);
        }
        _md.wfstudioitem.prototype.wzVerify.call(this, ctx);
    }
    folder.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzInitialize(ctx);
        }
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return folder;
})(wfstudioitem);

_md.folder = folder;
// element aspect
var aspect = (function (wfstudioitem) {
    _inherits(aspect, wfstudioitem);
    function aspect(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(aspect.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, aspect);
        this.wzElement = "aspect";
    }
    aspect.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    aspect.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    aspect.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
    }
    return aspect;
})(wfstudioitem);

_md.aspect = aspect;
// element project
var project = (function (wfstudioitem) {
    _inherits(project, wfstudioitem);
    function project(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(project.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, project);
        this.wzElement = "project";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.srcFolder = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.destFolder = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.description = null
        // relation folder
        this.folders = [];
        // relation aspect
        this.aspects = [];
    }
    project.prototype.addFolder = function(name, sourceLineInfo) {
        var retval = new _md.folder(name, sourceLineInfo);
        retval.wzParent = this;
        this.folders.push(retval);
        return retval;
    }
    project.prototype.getFolder = function(name) {
        var found = null;
        this.folders.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    project.prototype.addAspect = function(name, sourceLineInfo) {
        var retval = new _md.aspect(name, sourceLineInfo);
        retval.wzParent = this;
        this.aspects.push(retval);
        return retval;
    }
    project.prototype.getAspect = function(name) {
        var found = null;
        this.aspects.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    project.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    project.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.srcFolder)) {
            result["srcFolder"] = this.srcFolder;
        }
        if (!isEmpty(this.destFolder)) {
            result["destFolder"] = this.destFolder;
        }
        if (!isEmpty(this.description)) {
            result["description"] = this.description;
        }
    }
    project.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            items.push(item.toJson());
        }
        result['folders'] = items;
        items = [];
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            items.push(item.toJson());
        }
        result['aspects'] = items;
    }
    project.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 'a') {
            if (name === 'aspect') {
                return this.wzLoadToChildColl(child, _md.aspect, this.aspects);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'folder') {
                return this.wzLoadToChildColl(child, _md.folder, this.folders);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'src-folder') {
                this.srcFolder = child.v; return true;
            }
            else if (name === 'src_folder') {
                this.srcFolder = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'd') {
            if (name === 'dest-folder') {
                this.destFolder = child.v; return true;
            }
            else if (name === 'dest_folder') {
                this.destFolder = child.v; return true;
            }
            else if (name === 'description') {
                this.description = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    project.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    project.prototype.wzVerify = function(ctx) {
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzVerify(ctx);
        }
        _md.wfstudioitem.prototype.wzVerify.call(this, ctx);
    }
    project.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzInitialize(ctx);
        }
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return project;
})(wfstudioitem);

_md.project = project;
// element xpackage
var xpackage = (function (wfstudioitem) {
    _inherits(xpackage, wfstudioitem);
    function xpackage(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xpackage.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xpackage);
        this.allowedKINDS = [ "kernel", "plugin", "app", "demo"];
        this.KIND_KERNEL = "kernel";
        this.KIND_PLUGIN = "plugin";
        this.KIND_APP = "app";
        this.KIND_DEMO = "demo";
        this.wzElement = "xpackage";
        this.kind = "kernel";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.pluginName = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.baseFolderUri = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.srcFolder = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.destFolder = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.ittfFolder = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.description = null
        // relation folder
        this.folders = [];
        // relation aspect
        this.aspects = [];
        // relation schema
        this.schemas = [];
    }
    xpackage.KIND_KERNEL = "kernel";
    xpackage.KIND_PLUGIN = "plugin";
    xpackage.KIND_APP = "app";
    xpackage.KIND_DEMO = "demo";
    xpackage.prototype.addFolder = function(name, sourceLineInfo) {
        var retval = new _md.folder(name, sourceLineInfo);
        retval.wzParent = this;
        this.folders.push(retval);
        return retval;
    }
    xpackage.prototype.getFolder = function(name) {
        var found = null;
        this.folders.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xpackage.prototype.addAspect = function(name, sourceLineInfo) {
        var retval = new _md.aspect(name, sourceLineInfo);
        retval.wzParent = this;
        this.aspects.push(retval);
        return retval;
    }
    xpackage.prototype.getAspect = function(name) {
        var found = null;
        this.aspects.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xpackage.prototype.addSchema = function(name, sourceLineInfo) {
        var retval = new _md.schema(name, sourceLineInfo);
        retval.wzParent = this;
        this.schemas.push(retval);
        return retval;
    }
    xpackage.prototype.getSchema = function(name) {
        var found = null;
        this.schemas.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xpackage.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    xpackage.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.kind)) {
            result["kind"] = this.kind;
        }
        if (!isEmpty(this.pluginName)) {
            result["pluginName"] = this.pluginName;
        }
        if (!isEmpty(this.baseFolderUri)) {
            result["baseFolderUri"] = this.baseFolderUri;
        }
        if (!isEmpty(this.srcFolder)) {
            result["srcFolder"] = this.srcFolder;
        }
        if (!isEmpty(this.destFolder)) {
            result["destFolder"] = this.destFolder;
        }
        if (!isEmpty(this.ittfFolder)) {
            result["ittfFolder"] = this.ittfFolder;
        }
        if (!isEmpty(this.description)) {
            result["description"] = this.description;
        }
    }
    xpackage.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            items.push(item.toJson());
        }
        result['folders'] = items;
        items = [];
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            items.push(item.toJson());
        }
        result['aspects'] = items;
        items = [];
        var i, i_len=this.schemas.length, item;
        for (i=0; i<i_len; i++) {
            item = this.schemas[i];
            items.push(item.toJson());
        }
        result['schemas'] = items;
    }
    xpackage.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'a') {
            if (name === 'aspect') {
                return this.wzLoadToChildColl(child, _md.aspect, this.aspects);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'folder') {
                return this.wzLoadToChildColl(child, _md.folder, this.folders);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'schema') {
                return this.wzLoadToChildColl(child, _md.schema, this.schemas);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'src-folder') {
                this.srcFolder = child.v; return true;
            }
            else if (name === 'src_folder') {
                this.srcFolder = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'd') {
            if (name === 'dest-folder') {
                this.destFolder = child.v; return true;
            }
            else if (name === 'dest_folder') {
                this.destFolder = child.v; return true;
            }
            else if (name === 'description') {
                this.description = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'ittf-folder') {
                this.ittfFolder = child.v; return true;
            }
            else if (name === 'ittf_folder') {
                this.ittfFolder = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'p') {
            if (name === 'plugin-name') {
                this.pluginName = child.v; return true;
            }
            else if (name === 'plugin_name') {
                this.pluginName = child.v; return true;
            }
        }
        if (_l == 15 && _ch == 'b') {
            if (name === 'base-folder-uri') {
                this.baseFolderUri = child.v; return true;
            }
            else if (name === 'base_folder_uri') {
                this.baseFolderUri = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    xpackage.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xpackage.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("xpackage", "kind", this.kind, this.allowedKINDS, this);
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.schemas.length, item;
        for (i=0; i<i_len; i++) {
            item = this.schemas[i];
            item.wzVerify(ctx);
        }
        if (this.kind === 'plugin' && verify.isEmpty(this.pluginName)) {
            ctx.addError('When the package kind is "plugin", the plugin-name attribute is required.');
        }
        if (verify.isEmpty(this.baseFolderUri)) {
            ctx.addError('The attribute "base-folder-uri" is required.');
        }
        this.getSrcFolder();
        if (verify.isEmpty(this.srcFolder)) {
            ctx.addError('A folder with aspect "package-src" is required.');
        }
        this.getDestFolder();
        if (verify.isEmpty(this.destFolder)) {
            ctx.addError('A folder with aspect "package-build" is required.');
        }
        _md.wfstudioitem.prototype.wzVerify.call(this, ctx);
    }
    xpackage.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.folders.length, item;
        for (i=0; i<i_len; i++) {
            item = this.folders[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.aspects.length, item;
        for (i=0; i<i_len; i++) {
            item = this.aspects[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.schemas.length, item;
        for (i=0; i<i_len; i++) {
            item = this.schemas[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.folders.length, f;
        for (i=0; i<i_len; i++) {
            f = this.folders[i];
            var j, j_len=f.aspects.length, a;
            for (j=0; j<j_len; j++) {
                a = f.aspects[j];
                if (a.wzName === 'package-src') {
                    this.srcFolder = path.join(this.baseFolderUri, f.wzName);
                }
                else if (a.wzName === 'package-build') {
                    this.destFolder = path.join(this.baseFolderUri, f.wzName);
                }
                else if (a.wzName === 'package-ittf') {
                    this.ittfFolder = path.join(this.baseFolderUri, f.wzName);
                }
            }
        }
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    xpackage.prototype.getSrcFolder = function() {
        if (verify.isEmpty(this.srcFolder)) {
            var i, i_len=this.folders.length, f;
            for (i=0; i<i_len; i++) {
                f = this.folders[i];
                var j, j_len=f.aspects.length, a;
                for (j=0; j<j_len; j++) {
                    a = f.aspects[j];
                    if (a.wzName === 'package-src') {
                        this.srcFolder = path.join(this.baseFolderUri, f.wzName);
                    }
                }
            }
        }
        return this.srcFolder;
    }
    xpackage.prototype.getDestFolder = function() {
        if (verify.isEmpty(this.destFolder)) {
            var i, i_len=this.folders.length, f;
            for (i=0; i<i_len; i++) {
                f = this.folders[i];
                var j, j_len=f.aspects.length, a;
                for (j=0; j<j_len; j++) {
                    a = f.aspects[j];
                    if (a.wzName === 'package-build') {
                        this.destFolder = path.join(this.baseFolderUri, f.wzName);
                    }
                }
            }
        }
        return this.destFolder;
    }
    return xpackage;
})(wfstudioitem);

_md.xpackage = xpackage;
// element schema
var schema = (function (wfstudioitem) {
    _inherits(schema, wfstudioitem);
    function schema(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(schema.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, schema);
        this.wzElement = "schema";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.srcPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.modelPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.factoryPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.jsonDocPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.htmlDocPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.defaultArtifact = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.defaultTransform = null
        this.isPseudo = false;
        // relation artifact
        this.artifacts = [];
        // relation transform
        this.transforms = [];
    }
    schema.prototype.addArtifact = function(name, sourceLineInfo) {
        var retval = new _md.artifact(name, sourceLineInfo);
        retval.wzParent = this;
        this.artifacts.push(retval);
        return retval;
    }
    schema.prototype.getArtifact = function(name) {
        var found = null;
        this.artifacts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    schema.prototype.addTransform = function(name, sourceLineInfo) {
        var retval = new _md.transform(name, sourceLineInfo);
        retval.wzParent = this;
        this.transforms.push(retval);
        return retval;
    }
    schema.prototype.getTransform = function(name) {
        var found = null;
        this.transforms.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    schema.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    schema.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.srcPath)) {
            result["srcPath"] = this.srcPath;
        }
        if (!isEmpty(this.modelPath)) {
            result["modelPath"] = this.modelPath;
        }
        if (!isEmpty(this.factoryPath)) {
            result["factoryPath"] = this.factoryPath;
        }
        if (!isEmpty(this.jsonDocPath)) {
            result["jsonDocPath"] = this.jsonDocPath;
        }
        if (!isEmpty(this.htmlDocPath)) {
            result["htmlDocPath"] = this.htmlDocPath;
        }
        if (!isEmpty(this.defaultArtifact)) {
            result["defaultArtifact"] = this.defaultArtifact;
        }
        if (!isEmpty(this.defaultTransform)) {
            result["defaultTransform"] = this.defaultTransform;
        }
        result["isPseudo"] = this.isPseudo;
    }
    schema.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_len=this.artifacts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.artifacts[i];
            items.push(item.toJson());
        }
        result['artifacts'] = items;
        items = [];
        var i, i_len=this.transforms.length, item;
        for (i=0; i<i_len; i++) {
            item = this.transforms[i];
            items.push(item.toJson());
        }
        result['transforms'] = items;
    }
    schema.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 7 && _ch == 's') {
            if (name === 'srcpath') {
                this.srcPath = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'artifact') {
                return this.wzLoadToChildColl(child, _md.artifact, this.artifacts);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'is-pseudo') {
                this.isPseudo = parseboolean(child.v, true, child); return true;
            }
            else if (name === 'is_pseudo') {
                this.isPseudo = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'modelpath') {
                this.modelPath = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 't') {
            if (name === 'transform') {
                return this.wzLoadToChildColl(child, _md.transform, this.transforms);
            }
        }
        if (_l == 11 && _ch == 'f') {
            if (name === 'factorypath') {
                this.factoryPath = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'h') {
            if (name === 'htmldocpath') {
                this.htmlDocPath = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'j') {
            if (name === 'jsondocpath') {
                this.jsonDocPath = child.v; return true;
            }
        }
        if (_l == 15 && _ch == 'd') {
            if (name === 'defaultartifact') {
                this.defaultArtifact = child.v; return true;
            }
        }
        if (_l == 16 && _ch == 'd') {
            if (name === 'defaulttransform') {
                this.defaultTransform = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    schema.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    schema.prototype.wzVerify = function(ctx) {
        var i, i_len=this.artifacts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.artifacts[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.transforms.length, item;
        for (i=0; i<i_len; i++) {
            item = this.transforms[i];
            item.wzVerify(ctx);
        }
        _md.wfstudioitem.prototype.wzVerify.call(this, ctx);
    }
    schema.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.artifacts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.artifacts[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.transforms.length, item;
        for (i=0; i<i_len; i++) {
            item = this.transforms[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.artifacts.length, a;
        for (i=0; i<i_len; i++) {
            a = this.artifacts[i];
            if (a.isDefault) {
                this.defaultArtifact = this.wzName + '/' + a.wzName;
            }
        }
        var i, i_len=this.transforms.length, t;
        for (i=0; i<i_len; i++) {
            t = this.transforms[i];
            if (t.isDefault) {
                this.defaultTransform = this.wzName + '/' + t.wzName;
            }
        }
        var srcFolder = path.join(this.wzParent.getSrcFolder(), 'ittf', 'lib', 'wizzi', 'schemas')
        ;
        var destFolder = path.join(this.wzParent.getDestFolder(), 'lib', 'wizzi', 'models')
        ;
        this.srcPath = path.join(srcFolder, this.wzName + '.wfschema.ittf')
        ;
        this.modelPath = path.join(destFolder, this.wzName + '-model.g.js')
        ;
        this.factoryPath = path.join(destFolder, this.wzName + '-factory.g.js')
        ;
        this.jsonDocPath = path.join(destFolder, this.wzName + '-schema.g.json')
        ;
        this.htmlDocPath = path.join(destFolder, this.wzName + '-schema.g.html')
        ;
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return schema;
})(wfstudioitem);

_md.schema = schema;
// element artifact
var artifact = (function (wfstudioitem) {
    _inherits(artifact, wfstudioitem);
    function artifact(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(artifact.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, artifact);
        this.wzElement = "artifact";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.targetLanguage = null
        this.isDefault = false;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.name = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.srcPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.modulePath = null
    }
    artifact.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    artifact.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.targetLanguage)) {
            result["targetLanguage"] = this.targetLanguage;
        }
        result["isDefault"] = this.isDefault;
        if (!isEmpty(this.name)) {
            result["name"] = this.name;
        }
        if (!isEmpty(this.srcPath)) {
            result["srcPath"] = this.srcPath;
        }
        if (!isEmpty(this.modulePath)) {
            result["modulePath"] = this.modulePath;
        }
    }
    artifact.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
    }
    artifact.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'n') {
            if (name === 'name') {
                this.name = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'srcpath') {
                this.srcPath = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'l') {
            if (name === 'language') {
                this.targetLanguage = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'is-default') {
                this.isDefault = parseboolean(child.v, true, child); return true;
            }
            else if (name === 'is_default') {
                this.isDefault = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'modulepath') {
                this.modulePath = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    artifact.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    artifact.prototype.wzInitialize = function(ctx) {
        var s = this.wzParent;
        var p = s.wzParent;
        this.name = s.wzName + '/' + this.wzName;
        this.srcPath = path.join(p.getSrcFolder(), 'ittf', 'lib', 'artifacts', s.wzName, this.wzName, 'gen', 'main.js.ittf')
        ;
        this.modulePath = path.join(p.getDestFolder(), 'lib', 'artifacts', s.wzName, this.wzName, 'gen', 'main.js')
        ;
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return artifact;
})(wfstudioitem);

_md.artifact = artifact;
// element transform
var transform = (function (wfstudioitem) {
    _inherits(transform, wfstudioitem);
    function transform(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(transform.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transform);
        this.wzElement = "transform";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.targetLanguage = null
        this.isDefault = false;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.name = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.srcPath = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.modulePath = null
    }
    transform.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    transform.prototype.toJsonProperties = function(result) {
        _md.wfstudioitem.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.targetLanguage)) {
            result["targetLanguage"] = this.targetLanguage;
        }
        result["isDefault"] = this.isDefault;
        if (!isEmpty(this.name)) {
            result["name"] = this.name;
        }
        if (!isEmpty(this.srcPath)) {
            result["srcPath"] = this.srcPath;
        }
        if (!isEmpty(this.modulePath)) {
            result["modulePath"] = this.modulePath;
        }
    }
    transform.prototype.toJsonChildren = function(result) {
        _md.wfstudioitem.prototype.toJsonChildren.call(this, result);
    }
    transform.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'n') {
            if (name === 'name') {
                this.name = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'srcpath') {
                this.srcPath = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'l') {
            if (name === 'language') {
                this.targetLanguage = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'is-default') {
                this.isDefault = parseboolean(child.v, true, child); return true;
            }
            else if (name === 'is_default') {
                this.isDefault = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'modulepath') {
                this.modulePath = child.v; return true;
            }
        }
        ok = _md.wfstudioitem.prototype.loadChild.call(this, child);
        return ok;
    }
    transform.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.wfstudioModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    transform.prototype.wzInitialize = function(ctx) {
        var s = this.wzParent;
        var p = s.wzParent;
        this.name = s.wzName + '/' + this.wzName;
        this.srcPath = path.join(p.getSrcFolder(), 'ittf', 'lib', 'artifacts', s.wzName, this.wzName, 'trans', 'main.js.ittf')
        ;
        this.modulePath = path.join(p.getDestFolder(), 'lib', 'artifacts', s.wzName, this.wzName, 'trans', 'main.js')
        ;
        _md.wfstudioitem.prototype.wzInitialize.call(this, ctx);
    }
    return transform;
})(wfstudioitem);

_md.transform = transform;
_md.__tagElementMapping = { '#': 'comment', 'package': 'xpackage' };
// model/replaceUnknownElement( )
var wfstudioModelException = (function () {
    function wfstudioModelException(message, node, instance) {
        _classCallCheck(this, wfstudioModelException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log('message', this.message);
        this.stack = (new Error()).stack;
        this.node = node;
    }
    return wfstudioModelException;
})();

_md.wfstudioModelException = wfstudioModelException;
var wfstudioContext = (function () {
    function wfstudioContext() {
        _classCallCheck(this, wfstudioContext);
        this.validationErrors = [];
    }
    wfstudioContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    wfstudioContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    wfstudioContext.prototype.verifyEnum = function(valueType, valueName, value, allowed, node) {
        if (value && allowed.indexOf(value) < 0) {
            var allowedStr = 'allowed: ' + allowed.join(', ');
            this.validationErrors.push(valueType + ' ' + valueName + ' has an invalid value: ' + value + ' ' + allowedStr + '. At ' + (node.wzSourceLineInfo ? node.wzSourceLineInfo.toString(node) : 'location unavailable'));
        }
    }
    return wfstudioContext;
})();

_md.wfstudioContext = wfstudioContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function parseboolean(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    if (!isBoolean(value)) {
        throw new wfstudioModelException('Must be a boolean value (\"true\" or \"false\"), got:' + value, node);
    }
    return value === 'true' ? true : false;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

