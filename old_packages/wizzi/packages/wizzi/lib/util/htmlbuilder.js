/*
    artifact generator: C:\My\wizzi\v5\node_modules\wizzi-js\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\v5\kernel\wizzi\src\ittf\lib\util\htmlbuilder.js.ittf
*/
'use strict';
// generated by wizzi.codegen.js4.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var md = module.exports = {};
var WAIT_ATTR = 1;
var WAIT_TEXT = 2;
var HtmlBuilder = (function () {
    function HtmlBuilder() {
        _classCallCheck(this, HtmlBuilder);
        this.stm = [];
        this.indentValue = 0;
        this.length = 0;
        this.line = '';
        this.state = WAIT_TEXT;
        this.lfPending = false;
        this.noLF = false;
    }
    HtmlBuilder.prototype.setNoLF = function(value) {
        this.noLF = value;
    }
    HtmlBuilder.prototype.openTag = function(tag, options) {
        options = options || {};
        if (this.state === WAIT_ATTR) {
            this.write('>');
        }
        if (options.inline) {
            this.write('<' + tag);
        }
        else {
            if (this.lfPending) {
                this.w();
            }
            this.write('<' + tag);
            this.indent();
        }
        this.state = WAIT_ATTR;
    }
    HtmlBuilder.prototype.writeAttribute = function(name, value) {
        if (value === null || typeof value === 'undefined') {
            this.write(' ' + name);
        }
        else {
            this.write(' ' + name + '="' + value + '"');
        }
    }
    HtmlBuilder.prototype.writeText = function(text) {
        if ((text || '').length > 0) {
            if (this.state === WAIT_ATTR) {
                this.write('>');
                this.state = WAIT_TEXT;
            }
            this.write(text);
        }
    }
    HtmlBuilder.prototype.writePrettySpaces = function(num) {
        this.openTag('span', { inline: true });
        this.writeAttribute('class', 'pnl');
        this.writeSpaces(num);
        this.closeTag('span', { inline: true });
    }
    HtmlBuilder.prototype.writePrettySpan = function(text, clazz) {
        this.openTag('span', { inline: true });
        this.writeAttribute('class', clazz);
        this.writeText(text);
        this.closeTag('span', { inline: true });
    }
    HtmlBuilder.prototype.writeSpaces = function(num) {
        this.writeText(spaces(num));
    }
    HtmlBuilder.prototype.closeTag = function(tag, options) {
        options = options || {};
        if (options.inline) {
            if (this.state === WAIT_ATTR) {
                this.write(' />');
            }
            else {
                this.write('</' + tag + '>');
            }
        }
        else {
            if (this.state === WAIT_ATTR) {
                this.write(' />');
                this.lfPending = true;
            }
            else {
                this.w();
                this.deindent();
                this.w('</' + tag + '>');
            }
        }
        this.state = WAIT_TEXT;
    }
    HtmlBuilder.prototype.w = function(text) {
        if (this.noLF) {
            this.write(text);
            return ;
        }
        var ind = spaces(this.indentValue * 4);
        this.stm.push(ind + this.line + (text || ''));
        this.line = '';
        this.length++;
    }
    HtmlBuilder.prototype.write = function(text) {
        this.line += text || '';
    }
    HtmlBuilder.prototype.indent = function() {
        this.indentValue++;
    }
    HtmlBuilder.prototype.deindent = function() {
        this.indentValue = Math.max(0, this.indentValue -1);
    }
    HtmlBuilder.prototype.toLines = function() {
        if (this.line.length > 0) {
            var save = this.noLF;
            this.noLF = false;
            this.w();
            this.noLF = save;
        }
        return this.stm;
    }
    HtmlBuilder.prototype.toText = function() {
        if (this.line.length > 0) {
            this.w();
        }
        return this.stm.join('\n');
    }
    return HtmlBuilder;
})();

function spaces(num) {
    return Array(num + 1).join(" ");
}
md.HtmlBuilder = HtmlBuilder;
