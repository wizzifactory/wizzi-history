/*
    artifact generator: C:\My\wizzi\v6\node_modules\wizzi-core\node_modules\wizzi-legacy-v5\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\v6\node_modules\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Fri, 21 Dec 2018 10:52:36 GMT
*/
'use strict';
// generated by v5-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;
var _md = module.exports = {};
var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var graphqlBase = (function () {
    function graphqlBase(name, sourceLineInfo) {
        _classCallCheck(this, graphqlBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    graphqlBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    graphqlBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadHistory.getIttfDocumentUri(sourceKey);
    }
    graphqlBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
            }, true);
    }
    graphqlBase.prototype.wzVerify = function() {
    }
    graphqlBase.prototype.wzInitialize = function() {
    }
    graphqlBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    graphqlBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    graphqlBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    graphqlBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node);
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    graphqlBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    graphqlBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    graphqlBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    graphqlBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    graphqlBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this);
        }
        fromColl.splice(index, 1);
    }
    graphqlBase.prototype.error = function(message, node) {
        throw new _md.graphqlModelException(message, node, this);
    }
    graphqlBase.prototype.toJsonProperties = function(result) {
        result.wzElement = this.wzElement;
        result.wzTag = this.wzTag;
        result.wzName = this.wzName;
    }
    graphqlBase.prototype.toJsonChildren = function(result) {
        if (this.wzChildren.length > 0) {
            var children = [];
            var i, i_items=this.wzChildren, i_len=this.wzChildren.length, item;
            for (i=0; i<i_len; i++) {
                item = this.wzChildren[i];
                children.push(item.toJson());
            }
            result.wzChildren = children;
        }
    }
    return graphqlBase;
})();

_md.graphqlBase = graphqlBase;
// element comment
var comment = (function (graphqlBase) {
    _inherits(comment, graphqlBase);
    function comment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    comment.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    comment.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    comment.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
    }
    return comment;
})(graphqlBase);

_md.comment = comment;
// element graphql
var graphql = (function (graphqlBase) {
    _inherits(graphql, graphqlBase);
    function graphql(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(graphql.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, graphql);
        this.wzElement = "graphql";
        // relation comment
        this.comments = [];
        // relation typeDef
        this.typeDefs = [];
        // relation operation
        this.operations = [];
    }
    graphql.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    graphql.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    graphql.prototype.addTypeDef = function(name, sourceLineInfo) {
        var retval = new _md.typeDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.typeDefs.push(retval);
        return retval;
    }
    graphql.prototype.getTypeDef = function(name) {
        var found = null;
        this.typeDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    graphql.prototype.addOperation = function(name, sourceLineInfo) {
        var retval = new _md.operation(name, sourceLineInfo);
        retval.wzParent = this;
        this.operations.push(retval);
        return retval;
    }
    graphql.prototype.getOperation = function(name) {
        var found = null;
        this.operations.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    graphql.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    graphql.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    graphql.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.typeDefs, i_len=this.typeDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeDefs[i];
            items.push(item.toJson());
        }
        result['typeDefs'] = items;
        items = [];
        var i, i_items=this.operations, i_len=this.operations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.operations[i];
            items.push(item.toJson());
        }
        result['operations'] = items;
    }
    graphql.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 0 && _ch == '0') {
            if (name === '0') {
                return this.wzLoadToChildColl(child, _md.unionMemberType, this.typeDefs);
            }
            else if (name === 'return this.wzLoadToChildColl(child, _md.unionMemberType, this.typeDefs)') {
                return this.wzLoadToChildColl(child, _md.unionMemberType, this.typeDefs);
            }
        }
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.enumValueDef, this.typeDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumTypeDef, this.typeDefs);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                return this.wzLoadToChildColl(child, _md.objectTypeDef, this.typeDefs);
            }
        }
        if (_l == 5 && _ch == 'i') {
            if (name === 'input') {
                return this.wzLoadToChildColl(child, _md.inputObjectTypeDef, this.typeDefs);
            }
        }
        if (_l == 5 && _ch == 'q') {
            if (name === 'query') {
                return this.wzLoadToChildColl(child, _md.query, this.operations);
            }
        }
        if (_l == 5 && _ch == 'u') {
            if (name === 'union') {
                return this.wzLoadToChildColl(child, _md.unionTypeDef, this.typeDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'scalar') {
                return this.wzLoadToChildColl(child, _md.scalarTypeDef, this.typeDefs);
            }
        }
        if (_l == 7 && _ch == 't') {
            if (name === 'typedef') {
                return this.wzLoadToChildColl(child, _md.typeDef, this.typeDefs);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'fragment') {
                return this.wzLoadToChildColl(child, _md.fragment, this.operations);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'mutation') {
                return this.wzLoadToChildColl(child, _md.mutation, this.operations);
            }
        }
        if (_l == 9 && _ch == 'd') {
            if (name === 'directive') {
                return this.wzLoadToChildColl(child, _md.directiveDef, this.typeDefs);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'interface') {
                return this.wzLoadToChildColl(child, _md.interfaceTypeDef, this.typeDefs);
            }
        }
        if (_l == 9 && _ch == 'o') {
            if (name === 'operation') {
                return this.wzLoadToChildColl(child, _md.operation, this.operations);
            }
        }
        if (_l == 12 && _ch == 's') {
            if (name === 'subscription') {
                return this.wzLoadToChildColl(child, _md.subscription, this.operations);
            }
        }
        return ok;
    }
    graphql.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    graphql.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.typeDefs, i_len=this.typeDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeDefs[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.operations, i_len=this.operations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.operations[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    graphql.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.typeDefs, i_len=this.typeDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.typeDefs[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.operations, i_len=this.operations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.operations[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return graphql;
})(graphqlBase);

_md.graphql = graphql;
// element typeDef
var typeDef = (function (graphqlBase) {
    _inherits(typeDef, graphqlBase);
    function typeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(typeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, typeDef);
        this.wzElement = "typeDef";
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    typeDef.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    typeDef.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    typeDef.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    typeDef.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    typeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    typeDef.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    typeDef.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    typeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    typeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    typeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    typeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return typeDef;
})(graphqlBase);

_md.typeDef = typeDef;
// element scalarTypeDef
var scalarTypeDef = (function (typeDef) {
    _inherits(scalarTypeDef, typeDef);
    function scalarTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(scalarTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, scalarTypeDef);
        this.wzElement = "scalarTypeDef";
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    scalarTypeDef.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    scalarTypeDef.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    scalarTypeDef.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    scalarTypeDef.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    scalarTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    scalarTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    scalarTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    scalarTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    scalarTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    scalarTypeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    scalarTypeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return scalarTypeDef;
})(typeDef);

_md.scalarTypeDef = scalarTypeDef;
// element objectTypeDef
var objectTypeDef = (function (typeDef) {
    _inherits(objectTypeDef, typeDef);
    function objectTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectTypeDef);
        this.wzElement = "objectTypeDef";
        // relation implement
        this.ximplements = [];
        // relation fieldDef
        this.fieldDefs = [];
    }
    objectTypeDef.prototype.addImplement = function(name, sourceLineInfo) {
        var retval = new _md.implement(name, sourceLineInfo);
        retval.wzParent = this;
        this.ximplements.push(retval);
        return retval;
    }
    objectTypeDef.prototype.getImplement = function(name) {
        var found = null;
        this.ximplements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectTypeDef.prototype.addFieldDef = function(name, sourceLineInfo) {
        var retval = new _md.fieldDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.fieldDefs.push(retval);
        return retval;
    }
    objectTypeDef.prototype.getFieldDef = function(name) {
        var found = null;
        this.fieldDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.ximplements, i_len=this.ximplements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ximplements[i];
            items.push(item.toJson());
        }
        result['ximplements'] = items;
        items = [];
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            items.push(item.toJson());
        }
        result['fieldDefs'] = items;
    }
    objectTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '&') {
            if (name === '&') {
                return this.wzLoadToChildColl(child, _md.implement, this.ximplements);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayType, this.fieldDefs);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, _md.method, this.fieldDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.fieldDef, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumType, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'null') {
                return this.wzLoadToChildColl(child, _md.nullType, this.fieldDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatType, this.fieldDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringType, this.fieldDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanType, this.fieldDefs);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemtype') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'item-type') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    objectTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectTypeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.ximplements, i_len=this.ximplements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ximplements[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    objectTypeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.ximplements, i_len=this.ximplements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ximplements[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return objectTypeDef;
})(typeDef);

_md.objectTypeDef = objectTypeDef;
// element implement
var implement = (function (graphqlBase) {
    _inherits(implement, graphqlBase);
    function implement(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(implement.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, implement);
        this.wzElement = "implement";
    }
    implement.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    implement.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    implement.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
    }
    return implement;
})(graphqlBase);

_md.implement = implement;
// element interfaceTypeDef
var interfaceTypeDef = (function (typeDef) {
    _inherits(interfaceTypeDef, typeDef);
    function interfaceTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(interfaceTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, interfaceTypeDef);
        this.wzElement = "interfaceTypeDef";
        // relation fieldDef
        this.fieldDefs = [];
    }
    interfaceTypeDef.prototype.addFieldDef = function(name, sourceLineInfo) {
        var retval = new _md.fieldDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.fieldDefs.push(retval);
        return retval;
    }
    interfaceTypeDef.prototype.getFieldDef = function(name) {
        var found = null;
        this.fieldDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    interfaceTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    interfaceTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    interfaceTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            items.push(item.toJson());
        }
        result['fieldDefs'] = items;
    }
    interfaceTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayType, this.fieldDefs);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, _md.method, this.fieldDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.fieldDef, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumType, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'null') {
                return this.wzLoadToChildColl(child, _md.nullType, this.fieldDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatType, this.fieldDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringType, this.fieldDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanType, this.fieldDefs);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemtype') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'item-type') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    interfaceTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    interfaceTypeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    interfaceTypeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return interfaceTypeDef;
})(typeDef);

_md.interfaceTypeDef = interfaceTypeDef;
// element unionTypeDef
var unionTypeDef = (function (typeDef) {
    _inherits(unionTypeDef, typeDef);
    function unionTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(unionTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, unionTypeDef);
        this.wzElement = "unionTypeDef";
        // relation unionMemberType
        this.unionMemberTypes = [];
    }
    unionTypeDef.prototype.addUnionMemberType = function(name, sourceLineInfo) {
        var retval = new _md.unionMemberType(name, sourceLineInfo);
        retval.wzParent = this;
        this.unionMemberTypes.push(retval);
        return retval;
    }
    unionTypeDef.prototype.getUnionMemberType = function(name) {
        var found = null;
        this.unionMemberTypes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    unionTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    unionTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    unionTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.unionMemberTypes, i_len=this.unionMemberTypes.length, item;
        for (i=0; i<i_len; i++) {
            item = this.unionMemberTypes[i];
            items.push(item.toJson());
        }
        result['unionMemberTypes'] = items;
    }
    unionTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 0 && _ch == '0') {
            if (name === '0') {
                return this.wzLoadToChildColl(child, _md.unionMemberType, this.unionMemberTypes);
            }
            else if (name === 'return this.wzLoadToChildColl(child, _md.unionMemberType, this.unionMemberTypes);') {
                return this.wzLoadToChildColl(child, _md.unionMemberType, this.unionMemberTypes);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    unionTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    unionTypeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.unionMemberTypes, i_len=this.unionMemberTypes.length, item;
        for (i=0; i<i_len; i++) {
            item = this.unionMemberTypes[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    unionTypeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.unionMemberTypes, i_len=this.unionMemberTypes.length, item;
        for (i=0; i<i_len; i++) {
            item = this.unionMemberTypes[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return unionTypeDef;
})(typeDef);

_md.unionTypeDef = unionTypeDef;
// element unionMemberType
var unionMemberType = (function (typeDef) {
    _inherits(unionMemberType, typeDef);
    function unionMemberType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(unionMemberType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, unionMemberType);
        this.wzElement = "unionMemberType";
    }
    unionMemberType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    unionMemberType.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    unionMemberType.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
    }
    return unionMemberType;
})(typeDef);

_md.unionMemberType = unionMemberType;
// element enumTypeDef
var enumTypeDef = (function (typeDef) {
    _inherits(enumTypeDef, typeDef);
    function enumTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumTypeDef);
        this.wzElement = "enumTypeDef";
        // relation enumValueDef
        this.enumValueDefs = [];
    }
    enumTypeDef.prototype.addEnumValueDef = function(name, sourceLineInfo) {
        var retval = new _md.enumValueDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.enumValueDefs.push(retval);
        return retval;
    }
    enumTypeDef.prototype.getEnumValueDef = function(name) {
        var found = null;
        this.enumValueDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    enumTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.enumValueDefs, i_len=this.enumValueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.enumValueDefs[i];
            items.push(item.toJson());
        }
        result['enumValueDefs'] = items;
    }
    enumTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.enumValueDef, this.enumValueDefs);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    enumTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    enumTypeDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.enumValueDefs, i_len=this.enumValueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.enumValueDefs[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    enumTypeDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.enumValueDefs, i_len=this.enumValueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.enumValueDefs[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return enumTypeDef;
})(typeDef);

_md.enumTypeDef = enumTypeDef;
/**
    element enumValueDef
     wzName ! ( null || true || false )
*/
var enumValueDef = (function (typeDef) {
    _inherits(enumValueDef, typeDef);
    function enumValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumValueDef);
        this.wzElement = "enumValueDef";
    }
    enumValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumValueDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumValueDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
    }
    return enumValueDef;
})(typeDef);

_md.enumValueDef = enumValueDef;
// element inputObjectTypeDef
var inputObjectTypeDef = (function (typeDef) {
    _inherits(inputObjectTypeDef, typeDef);
    function inputObjectTypeDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(inputObjectTypeDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, inputObjectTypeDef);
        this.wzElement = "inputObjectTypeDef";
        // relation objectValueDef
        this.objectValueDef = null;
    }
    inputObjectTypeDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    inputObjectTypeDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    inputObjectTypeDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.objectValueDef != null) {
            result['objectValueDef'] = this.objectValueDef.toJson();
        }
        else {
            result['objectValueDef'] = null;
        }
    }
    inputObjectTypeDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.objectValueDef, 'objectValueDef');
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    inputObjectTypeDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    inputObjectTypeDef.prototype.wzVerify = function(ctx) {
        if (this.objectValueDef != null) {
            this.objectValueDef.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    inputObjectTypeDef.prototype.wzInitialize = function(ctx) {
        if (this.objectValueDef != null) {
            this.objectValueDef.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return inputObjectTypeDef;
})(typeDef);

_md.inputObjectTypeDef = inputObjectTypeDef;
// element operation
var operation = (function (graphqlBase) {
    _inherits(operation, graphqlBase);
    function operation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(operation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, operation);
        this.wzElement = "operation";
        // relation comment
        this.comments = [];
        // relation variable
        this.variables = [];
        // relation directive
        this.directives = [];
        // relation selectionSet
        this.selectionSet = null;
    }
    operation.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    operation.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    operation.prototype.addVariable = function(name, sourceLineInfo) {
        var retval = new _md.variable(name, sourceLineInfo);
        retval.wzParent = this;
        this.variables.push(retval);
        return retval;
    }
    operation.prototype.getVariable = function(name) {
        var found = null;
        this.variables.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    operation.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    operation.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    operation.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    operation.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    operation.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.variables, i_len=this.variables.length, item;
        for (i=0; i<i_len; i++) {
            item = this.variables[i];
            items.push(item.toJson());
        }
        result['variables'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
        if (this.selectionSet != null) {
            result['selectionSet'] = this.selectionSet.toJson();
        }
        else {
            result['selectionSet'] = null;
        }
    }
    operation.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.selectionSet, 'selectionSet');
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intVar, this.variables);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.variable, this.variables);
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatVar, this.variables);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringVar, this.variables);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanVar, this.variables);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    operation.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    operation.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.variables, i_len=this.variables.length, item;
        for (i=0; i<i_len; i++) {
            item = this.variables[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    operation.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.variables, i_len=this.variables.length, item;
        for (i=0; i<i_len; i++) {
            item = this.variables[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return operation;
})(graphqlBase);

_md.operation = operation;
// element query
var query = (function (operation) {
    _inherits(query, operation);
    function query(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(query.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, query);
        this.wzElement = "query";
    }
    query.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    query.prototype.toJsonProperties = function(result) {
        _md.operation.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    query.prototype.toJsonChildren = function(result) {
        _md.operation.prototype.toJsonChildren.call(this, result);
    }
    return query;
})(operation);

_md.query = query;
// element mutation
var mutation = (function (operation) {
    _inherits(mutation, operation);
    function mutation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(mutation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, mutation);
        this.wzElement = "mutation";
    }
    mutation.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    mutation.prototype.toJsonProperties = function(result) {
        _md.operation.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    mutation.prototype.toJsonChildren = function(result) {
        _md.operation.prototype.toJsonChildren.call(this, result);
    }
    return mutation;
})(operation);

_md.mutation = mutation;
// element subscription
var subscription = (function (operation) {
    _inherits(subscription, operation);
    function subscription(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(subscription.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, subscription);
        this.wzElement = "subscription";
    }
    subscription.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    subscription.prototype.toJsonProperties = function(result) {
        _md.operation.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    subscription.prototype.toJsonChildren = function(result) {
        _md.operation.prototype.toJsonChildren.call(this, result);
    }
    return subscription;
})(operation);

_md.subscription = subscription;
// element fragment
var fragment = (function (operation) {
    _inherits(fragment, operation);
    function fragment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fragment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fragment);
        this.wzElement = "fragment";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.typeCondition = null
        // relation directive
        this.directives = [];
        // relation selectionSet
        this.selectionSet = null;
    }
    fragment.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    fragment.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    fragment.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    fragment.prototype.toJsonProperties = function(result) {
        _md.operation.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.typeCondition)) {
            result["typeCondition"] = this.typeCondition;
        }
    }
    fragment.prototype.toJsonChildren = function(result) {
        _md.operation.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
        if (this.selectionSet != null) {
            result['selectionSet'] = this.selectionSet.toJson();
        }
        else {
            result['selectionSet'] = null;
        }
    }
    fragment.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.selectionSet, 'selectionSet');
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'on') {
                this.typeCondition = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        ok = _md.operation.prototype.loadChild.call(this, child);
        return ok;
    }
    fragment.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    fragment.prototype.wzVerify = function(ctx) {
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzVerify(ctx);
        }
        _md.operation.prototype.wzVerify.call(this, ctx);
    }
    fragment.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzInitialize(ctx);
        }
        _md.operation.prototype.wzInitialize.call(this, ctx);
    }
    return fragment;
})(operation);

_md.fragment = fragment;
/**
    element argumentDef
     InputValueDefinition
*/
var argumentDef = (function (graphqlBase) {
    _inherits(argumentDef, graphqlBase);
    function argumentDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(argumentDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, argumentDef);
        this.wzElement = "argumentDef";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.type = null
        // relation directive
        this.directives = [];
    }
    argumentDef.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    argumentDef.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    argumentDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    argumentDef.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.type)) {
            result["type"] = this.type;
        }
    }
    argumentDef.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    argumentDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    argumentDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    argumentDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    argumentDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return argumentDef;
})(graphqlBase);

_md.argumentDef = argumentDef;
// element objectArg
var objectArg = (function (argumentDef) {
    _inherits(objectArg, argumentDef);
    function objectArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectArg);
        this.wzElement = "objectArg";
    }
    objectArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    objectArg.prototype.wzInitialize = function(ctx) {
        this.type = 'object';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return objectArg;
})(argumentDef);

_md.objectArg = objectArg;
// element arrayArg
var arrayArg = (function (argumentDef) {
    _inherits(arrayArg, argumentDef);
    function arrayArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayArg);
        this.wzElement = "arrayArg";
    }
    arrayArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    arrayArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    arrayArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    arrayArg.prototype.wzInitialize = function(ctx) {
        this.type = 'array';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return arrayArg;
})(argumentDef);

_md.arrayArg = arrayArg;
// element enumArg
var enumArg = (function (argumentDef) {
    _inherits(enumArg, argumentDef);
    function enumArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumArg);
        this.wzElement = "enumArg";
    }
    enumArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    enumArg.prototype.wzInitialize = function(ctx) {
        this.type = 'enum';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return enumArg;
})(argumentDef);

_md.enumArg = enumArg;
// element nullArg
var nullArg = (function (argumentDef) {
    _inherits(nullArg, argumentDef);
    function nullArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(nullArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nullArg);
        this.wzElement = "nullArg";
    }
    nullArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    nullArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    nullArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    nullArg.prototype.wzInitialize = function(ctx) {
        this.type = 'null';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return nullArg;
})(argumentDef);

_md.nullArg = nullArg;
// element stringArg
var stringArg = (function (argumentDef) {
    _inherits(stringArg, argumentDef);
    function stringArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringArg);
        this.wzElement = "stringArg";
    }
    stringArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    stringArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    stringArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    stringArg.prototype.wzInitialize = function(ctx) {
        this.type = 'String';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return stringArg;
})(argumentDef);

_md.stringArg = stringArg;
// element intArg
var intArg = (function (argumentDef) {
    _inherits(intArg, argumentDef);
    function intArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(intArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, intArg);
        this.wzElement = "intArg";
    }
    intArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    intArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    intArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    intArg.prototype.wzInitialize = function(ctx) {
        this.type = 'Int';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return intArg;
})(argumentDef);

_md.intArg = intArg;
// element floatArg
var floatArg = (function (argumentDef) {
    _inherits(floatArg, argumentDef);
    function floatArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floatArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floatArg);
        this.wzElement = "floatArg";
    }
    floatArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    floatArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    floatArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    floatArg.prototype.wzInitialize = function(ctx) {
        this.type = 'Float';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return floatArg;
})(argumentDef);

_md.floatArg = floatArg;
// element booleanArg
var booleanArg = (function (argumentDef) {
    _inherits(booleanArg, argumentDef);
    function booleanArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanArg);
        this.wzElement = "booleanArg";
    }
    booleanArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    booleanArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    booleanArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    booleanArg.prototype.wzInitialize = function(ctx) {
        this.type = 'Boolean';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return booleanArg;
})(argumentDef);

_md.booleanArg = booleanArg;
// element IDArg
var IDArg = (function (argumentDef) {
    _inherits(IDArg, argumentDef);
    function IDArg(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(IDArg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, IDArg);
        this.wzElement = "IDArg";
    }
    IDArg.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    IDArg.prototype.toJsonProperties = function(result) {
        _md.argumentDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    IDArg.prototype.toJsonChildren = function(result) {
        _md.argumentDef.prototype.toJsonChildren.call(this, result);
    }
    IDArg.prototype.wzInitialize = function(ctx) {
        this.type = 'ID';
        _md.argumentDef.prototype.wzInitialize.call(this, ctx);
    }
    return IDArg;
})(argumentDef);

_md.IDArg = IDArg;
// element fieldDef
var fieldDef = (function (graphqlBase) {
    _inherits(fieldDef, graphqlBase);
    function fieldDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fieldDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fieldDef);
        this.wzElement = "fieldDef";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.type = null
        this.isRequired = false;
        this.isDeprecated = false;
        this.skip = false;
        this.include = false;
        // relation comment
        this.comments = [];
        // relation argumentDef
        this.argumentDefs = [];
        // relation directive
        this.directives = [];
    }
    fieldDef.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    fieldDef.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    fieldDef.prototype.addArgumentDef = function(name, sourceLineInfo) {
        var retval = new _md.argumentDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.argumentDefs.push(retval);
        return retval;
    }
    fieldDef.prototype.getArgumentDef = function(name) {
        var found = null;
        this.argumentDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    fieldDef.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    fieldDef.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    fieldDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    fieldDef.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.type)) {
            result["type"] = this.type;
        }
        result["isRequired"] = this.isRequired;
        result["isDeprecated"] = this.isDeprecated;
        result["skip"] = this.skip;
        result["include"] = this.include;
    }
    fieldDef.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            items.push(item.toJson());
        }
        result['argumentDefs'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    fieldDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayArg, this.argumentDefs);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectArg, this.argumentDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDArg, this.argumentDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intArg, this.argumentDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.argumentDef, this.argumentDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumArg, this.argumentDefs);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'null') {
                return this.wzLoadToChildColl(child, _md.nullArg, this.argumentDefs);
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'skip') {
                this.skip = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatArg, this.argumentDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringArg, this.argumentDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanArg, this.argumentDefs);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'include') {
                this.include = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 10 && _ch == 'i') {
            if (name === 'isrequired') {
                this.isRequired = parseboolean(child.v, true, child); return true;
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        if (_l == 12 && _ch == 'i') {
            if (name === 'isdeprecated') {
                this.isDeprecated = parseboolean(child.v, true, child); return true;
            }
        }
        return ok;
    }
    fieldDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    fieldDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    fieldDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            if (item.wzElement === 'isList') {
                this.isList = true;
            }
            else if (item.wzElement === 'isRequired') {
                this.isRequired = true;
            }
            else if (item.wzElement === 'isDeprecated') {
                this.isDeprecated = true;
            }
            else if (item.wzElement === 'skip') {
                this.skip = true;
            }
            else if (item.wzElement === 'include') {
                this.include = true;
            }
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return fieldDef;
})(graphqlBase);

_md.fieldDef = fieldDef;
// element arrayType
var arrayType = (function (fieldDef) {
    _inherits(arrayType, fieldDef);
    function arrayType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayType);
        this.wzElement = "arrayType";
        // relation itemType
        this.itemType = null;
    }
    arrayType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    arrayType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    arrayType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.itemType != null) {
            result['itemType'] = this.itemType.toJson();
        }
        else {
            result['itemType'] = null;
        }
    }
    arrayType.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemtype') {
                return this.wzLoadOneToOne(child, _md.itemType, 'itemType');
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'item-type') {
                return this.wzLoadOneToOne(child, _md.itemType, 'itemType');
            }
        }
        ok = _md.fieldDef.prototype.loadChild.call(this, child);
        return ok;
    }
    arrayType.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    arrayType.prototype.wzVerify = function(ctx) {
        if (this.itemType != null) {
            this.itemType.wzVerify(ctx);
        }
        _md.fieldDef.prototype.wzVerify.call(this, ctx);
    }
    arrayType.prototype.wzInitialize = function(ctx) {
        if (this.itemType != null) {
            this.itemType.wzInitialize(ctx);
        }
        this.type = 'array';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return arrayType;
})(fieldDef);

_md.arrayType = arrayType;
// element enumType
var enumType = (function (fieldDef) {
    _inherits(enumType, fieldDef);
    function enumType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumType);
        this.wzElement = "enumType";
    }
    enumType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    enumType.prototype.wzInitialize = function(ctx) {
        this.type = 'enum';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return enumType;
})(fieldDef);

_md.enumType = enumType;
// element nullType
var nullType = (function (fieldDef) {
    _inherits(nullType, fieldDef);
    function nullType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(nullType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nullType);
        this.wzElement = "nullType";
    }
    nullType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    nullType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    nullType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    nullType.prototype.wzInitialize = function(ctx) {
        this.type = 'null';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return nullType;
})(fieldDef);

_md.nullType = nullType;
// element stringType
var stringType = (function (fieldDef) {
    _inherits(stringType, fieldDef);
    function stringType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringType);
        this.wzElement = "stringType";
    }
    stringType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    stringType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    stringType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    stringType.prototype.wzInitialize = function(ctx) {
        this.type = 'String';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return stringType;
})(fieldDef);

_md.stringType = stringType;
// element intType
var intType = (function (fieldDef) {
    _inherits(intType, fieldDef);
    function intType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(intType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, intType);
        this.wzElement = "intType";
    }
    intType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    intType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    intType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    intType.prototype.wzInitialize = function(ctx) {
        this.type = 'Int';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return intType;
})(fieldDef);

_md.intType = intType;
// element floatType
var floatType = (function (fieldDef) {
    _inherits(floatType, fieldDef);
    function floatType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floatType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floatType);
        this.wzElement = "floatType";
    }
    floatType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    floatType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    floatType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    floatType.prototype.wzInitialize = function(ctx) {
        this.type = 'Float';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return floatType;
})(fieldDef);

_md.floatType = floatType;
// element booleanType
var booleanType = (function (fieldDef) {
    _inherits(booleanType, fieldDef);
    function booleanType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanType);
        this.wzElement = "booleanType";
    }
    booleanType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    booleanType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    booleanType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    booleanType.prototype.wzInitialize = function(ctx) {
        this.type = 'Boolean';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return booleanType;
})(fieldDef);

_md.booleanType = booleanType;
// element IDType
var IDType = (function (fieldDef) {
    _inherits(IDType, fieldDef);
    function IDType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(IDType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, IDType);
        this.wzElement = "IDType";
    }
    IDType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    IDType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    IDType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    IDType.prototype.wzInitialize = function(ctx) {
        this.type = 'ID';
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return IDType;
})(fieldDef);

_md.IDType = IDType;
// element itemType
var itemType = (function (fieldDef) {
    _inherits(itemType, fieldDef);
    function itemType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(itemType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, itemType);
        this.wzElement = "itemType";
    }
    itemType.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    itemType.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    itemType.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
    }
    return itemType;
})(fieldDef);

_md.itemType = itemType;
// element method
var method = (function (fieldDef) {
    _inherits(method, fieldDef);
    function method(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(method.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, method);
        this.wzElement = "method";
        // relation fieldDef
        this.fieldDefs = [];
        // relation selectionSet
        this.selectionSet = null;
    }
    method.prototype.addFieldDef = function(name, sourceLineInfo) {
        var retval = new _md.fieldDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.fieldDefs.push(retval);
        return retval;
    }
    method.prototype.getFieldDef = function(name) {
        var found = null;
        this.fieldDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    method.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    method.prototype.toJsonProperties = function(result) {
        _md.fieldDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    method.prototype.toJsonChildren = function(result) {
        _md.fieldDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            items.push(item.toJson());
        }
        result['fieldDefs'] = items;
        if (this.selectionSet != null) {
            result['selectionSet'] = this.selectionSet.toJson();
        }
        else {
            result['selectionSet'] = null;
        }
    }
    method.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayType, this.fieldDefs);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, _md.method, this.fieldDefs);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.selectionSet, 'selectionSet');
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intType, this.fieldDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.fieldDef, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumType, this.fieldDefs);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'null') {
                return this.wzLoadToChildColl(child, _md.nullType, this.fieldDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatType, this.fieldDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringType, this.fieldDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanType, this.fieldDefs);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemtype') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'item-type') {
                return this.wzLoadToChildColl(child, _md.itemType, this.fieldDefs);
            }
        }
        ok = _md.fieldDef.prototype.loadChild.call(this, child);
        return ok;
    }
    method.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    method.prototype.wzVerify = function(ctx) {
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzVerify(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzVerify(ctx);
        }
        _md.fieldDef.prototype.wzVerify.call(this, ctx);
    }
    method.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.fieldDefs, i_len=this.fieldDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.fieldDefs[i];
            item.wzInitialize(ctx);
        }
        if (this.selectionSet != null) {
            this.selectionSet.wzInitialize(ctx);
        }
        _md.fieldDef.prototype.wzInitialize.call(this, ctx);
    }
    return method;
})(fieldDef);

_md.method = method;
/**
    element valueDef
     ArgumentDefinition / InputValueDefinition
*/
var valueDef = (function (graphqlBase) {
    _inherits(valueDef, graphqlBase);
    function valueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(valueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, valueDef);
        this.wzElement = "valueDef";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.type = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.defaultValue = null
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    valueDef.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    valueDef.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    valueDef.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    valueDef.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    valueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    valueDef.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.type)) {
            result["type"] = this.type;
        }
        if (!isEmpty(this.defaultValue)) {
            result["defaultValue"] = this.defaultValue;
        }
    }
    valueDef.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    valueDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 1 && _ch == '=') {
            if (name === '=') {
                this.defaultValue = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    valueDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    valueDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    valueDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return valueDef;
})(graphqlBase);

_md.valueDef = valueDef;
// element stringValueDef
var stringValueDef = (function (valueDef) {
    _inherits(stringValueDef, valueDef);
    function stringValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringValueDef);
        this.wzElement = "stringValueDef";
    }
    stringValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    stringValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    stringValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
    }
    stringValueDef.prototype.wzInitialize = function(ctx) {
        this.type = 'String';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return stringValueDef;
})(valueDef);

_md.stringValueDef = stringValueDef;
// element intValueDef
var intValueDef = (function (valueDef) {
    _inherits(intValueDef, valueDef);
    function intValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(intValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, intValueDef);
        this.wzElement = "intValueDef";
    }
    intValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    intValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    intValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
    }
    intValueDef.prototype.wzInitialize = function(ctx) {
        this.type = 'Int';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return intValueDef;
})(valueDef);

_md.intValueDef = intValueDef;
// element floatValueDef
var floatValueDef = (function (valueDef) {
    _inherits(floatValueDef, valueDef);
    function floatValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floatValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floatValueDef);
        this.wzElement = "floatValueDef";
    }
    floatValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    floatValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    floatValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
    }
    floatValueDef.prototype.wzInitialize = function(ctx) {
        this.type = 'Float';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return floatValueDef;
})(valueDef);

_md.floatValueDef = floatValueDef;
// element booleanValueDef
var booleanValueDef = (function (valueDef) {
    _inherits(booleanValueDef, valueDef);
    function booleanValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanValueDef);
        this.wzElement = "booleanValueDef";
    }
    booleanValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    booleanValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    booleanValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
    }
    booleanValueDef.prototype.wzInitialize = function(ctx) {
        this.type = 'Boolean';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return booleanValueDef;
})(valueDef);

_md.booleanValueDef = booleanValueDef;
// element IDValueDef
var IDValueDef = (function (valueDef) {
    _inherits(IDValueDef, valueDef);
    function IDValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(IDValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, IDValueDef);
        this.wzElement = "IDValueDef";
    }
    IDValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    IDValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    IDValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
    }
    IDValueDef.prototype.wzInitialize = function(ctx) {
        this.type = 'ID';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return IDValueDef;
})(valueDef);

_md.IDValueDef = IDValueDef;
// element enumValueDef
var enumValueDef = (function (valueDef) {
    _inherits(enumValueDef, valueDef);
    function enumValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumValueDef);
        this.wzElement = "enumValueDef";
        // relation objectField
        this.objectFields = [];
    }
    enumValueDef.prototype.addObjectField = function(name, sourceLineInfo) {
        var retval = new _md.objectField(name, sourceLineInfo);
        retval.wzParent = this;
        this.objectFields.push(retval);
        return retval;
    }
    enumValueDef.prototype.getObjectField = function(name) {
        var found = null;
        this.objectFields.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    enumValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            items.push(item.toJson());
        }
        result['objectFields'] = items;
    }
    enumValueDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.objectField, this.objectFields);
            }
        }
        ok = _md.valueDef.prototype.loadChild.call(this, child);
        return ok;
    }
    enumValueDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    enumValueDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            item.wzVerify(ctx);
        }
        _md.valueDef.prototype.wzVerify.call(this, ctx);
    }
    enumValueDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            item.wzInitialize(ctx);
        }
        this.type = 'enum';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return enumValueDef;
})(valueDef);

_md.enumValueDef = enumValueDef;
// element objectValueDef
var objectValueDef = (function (valueDef) {
    _inherits(objectValueDef, valueDef);
    function objectValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectValueDef);
        this.wzElement = "objectValueDef";
        // relation valueDef
        this.valueDefs = [];
    }
    objectValueDef.prototype.addValueDef = function(name, sourceLineInfo) {
        var retval = new _md.valueDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.valueDefs.push(retval);
        return retval;
    }
    objectValueDef.prototype.getValueDef = function(name) {
        var found = null;
        this.valueDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            items.push(item.toJson());
        }
        result['valueDefs'] = items;
    }
    objectValueDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.objectField, this.valueDefs);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayValueDef, this.valueDefs);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectValueDef, this.valueDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDValueDef, this.valueDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intValueDef, this.valueDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.valueDef, this.valueDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumValueDef, this.valueDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatValueDef, this.valueDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringValueDef, this.valueDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanValueDef, this.valueDefs);
            }
        }
        ok = _md.valueDef.prototype.loadChild.call(this, child);
        return ok;
    }
    objectValueDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectValueDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            item.wzVerify(ctx);
        }
        _md.valueDef.prototype.wzVerify.call(this, ctx);
    }
    objectValueDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            item.wzInitialize(ctx);
        }
        this.type = 'object';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return objectValueDef;
})(valueDef);

_md.objectValueDef = objectValueDef;
// element objectField
var objectField = (function (valueDef) {
    _inherits(objectField, valueDef);
    function objectField(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectField.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectField);
        this.wzElement = "objectField";
        // relation valueDef
        this.valueDef = null;
    }
    objectField.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectField.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectField.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.valueDef != null) {
            result['valueDef'] = this.valueDef.toJson();
        }
        else {
            result['valueDef'] = null;
        }
    }
    objectField.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadOneToOne(child, _md.objectField, 'valueDef');
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadOneToOne(child, _md.arrayValueDef, 'valueDef');
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.objectValueDef, 'valueDef');
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadOneToOne(child, _md.IDValueDef, 'valueDef');
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadOneToOne(child, _md.intValueDef, 'valueDef');
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadOneToOne(child, _md.valueDef, 'valueDef');
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadOneToOne(child, _md.enumValueDef, 'valueDef');
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadOneToOne(child, _md.floatValueDef, 'valueDef');
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadOneToOne(child, _md.stringValueDef, 'valueDef');
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadOneToOne(child, _md.booleanValueDef, 'valueDef');
            }
        }
        ok = _md.valueDef.prototype.loadChild.call(this, child);
        return ok;
    }
    objectField.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectField.prototype.wzVerify = function(ctx) {
        if (this.valueDef != null) {
            this.valueDef.wzVerify(ctx);
        }
        _md.valueDef.prototype.wzVerify.call(this, ctx);
    }
    objectField.prototype.wzInitialize = function(ctx) {
        if (this.valueDef != null) {
            this.valueDef.wzInitialize(ctx);
        }
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return objectField;
})(valueDef);

_md.objectField = objectField;
// element arrayValueDef
var arrayValueDef = (function (valueDef) {
    _inherits(arrayValueDef, valueDef);
    function arrayValueDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayValueDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayValueDef);
        this.wzElement = "arrayValueDef";
        // relation valueDef
        this.valueDefs = [];
    }
    arrayValueDef.prototype.addValueDef = function(name, sourceLineInfo) {
        var retval = new _md.valueDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.valueDefs.push(retval);
        return retval;
    }
    arrayValueDef.prototype.getValueDef = function(name) {
        var found = null;
        this.valueDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    arrayValueDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    arrayValueDef.prototype.toJsonProperties = function(result) {
        _md.valueDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    arrayValueDef.prototype.toJsonChildren = function(result) {
        _md.valueDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            items.push(item.toJson());
        }
        result['valueDefs'] = items;
    }
    arrayValueDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.objectField, this.valueDefs);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayValueDef, this.valueDefs);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectValueDef, this.valueDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDValueDef, this.valueDefs);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intValueDef, this.valueDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.valueDef, this.valueDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumValueDef, this.valueDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatValueDef, this.valueDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringValueDef, this.valueDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanValueDef, this.valueDefs);
            }
        }
        ok = _md.valueDef.prototype.loadChild.call(this, child);
        return ok;
    }
    arrayValueDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    arrayValueDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            item.wzVerify(ctx);
        }
        _md.valueDef.prototype.wzVerify.call(this, ctx);
    }
    arrayValueDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.valueDefs, i_len=this.valueDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.valueDefs[i];
            item.wzInitialize(ctx);
        }
        this.type = 'array';
        _md.valueDef.prototype.wzInitialize.call(this, ctx);
    }
    return arrayValueDef;
})(valueDef);

_md.arrayValueDef = arrayValueDef;
// element directiveDef
var directiveDef = (function (typeDef) {
    _inherits(directiveDef, typeDef);
    function directiveDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(directiveDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, directiveDef);
        this.wzElement = "directiveDef";
        // relation comment
        this.comments = [];
        // relation argumentDef
        this.argumentDefs = [];
        // relation directiveLocation
        this.directiveLocations = [];
    }
    directiveDef.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    directiveDef.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    directiveDef.prototype.addArgumentDef = function(name, sourceLineInfo) {
        var retval = new _md.argumentDef(name, sourceLineInfo);
        retval.wzParent = this;
        this.argumentDefs.push(retval);
        return retval;
    }
    directiveDef.prototype.getArgumentDef = function(name) {
        var found = null;
        this.argumentDefs.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    directiveDef.prototype.addDirectiveLocation = function(name, sourceLineInfo) {
        var retval = new _md.directiveLocation(name, sourceLineInfo);
        retval.wzParent = this;
        this.directiveLocations.push(retval);
        return retval;
    }
    directiveDef.prototype.getDirectiveLocation = function(name) {
        var found = null;
        this.directiveLocations.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    directiveDef.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    directiveDef.prototype.toJsonProperties = function(result) {
        _md.typeDef.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    directiveDef.prototype.toJsonChildren = function(result) {
        _md.typeDef.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            items.push(item.toJson());
        }
        result['argumentDefs'] = items;
        items = [];
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            items.push(item.toJson());
        }
        result['directiveLocations'] = items;
    }
    directiveDef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayArg, this.argumentDefs);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectArg, this.argumentDefs);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDArg, this.argumentDefs);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.directiveLocation, this.directiveLocations);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intArg, this.argumentDefs);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.argumentDef, this.argumentDefs);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumArg, this.argumentDefs);
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'null') {
                return this.wzLoadToChildColl(child, _md.nullArg, this.argumentDefs);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatArg, this.argumentDefs);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringArg, this.argumentDefs);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanArg, this.argumentDefs);
            }
        }
        ok = _md.typeDef.prototype.loadChild.call(this, child);
        return ok;
    }
    directiveDef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    directiveDef.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            item.wzVerify(ctx);
        }
        _md.typeDef.prototype.wzVerify.call(this, ctx);
    }
    directiveDef.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.argumentDefs, i_len=this.argumentDefs.length, item;
        for (i=0; i<i_len; i++) {
            item = this.argumentDefs[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            item.wzInitialize(ctx);
        }
        _md.typeDef.prototype.wzInitialize.call(this, ctx);
    }
    return directiveDef;
})(typeDef);

_md.directiveDef = directiveDef;
// element directiveLocation
var directiveLocation = (function (graphqlBase) {
    _inherits(directiveLocation, graphqlBase);
    function directiveLocation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(directiveLocation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, directiveLocation);
        this.wzElement = "directiveLocation";
    }
    directiveLocation.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    directiveLocation.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    directiveLocation.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
    }
    return directiveLocation;
})(graphqlBase);

_md.directiveLocation = directiveLocation;
// element directive
var directive = (function (graphqlBase) {
    _inherits(directive, graphqlBase);
    function directive(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(directive.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, directive);
        this.wzElement = "directive";
        // relation argument
        this.xarguments = [];
        // relation directiveLocation
        this.directiveLocations = [];
    }
    directive.prototype.addArgument = function(name, sourceLineInfo) {
        var retval = new _md.argument(name, sourceLineInfo);
        retval.wzParent = this;
        this.xarguments.push(retval);
        return retval;
    }
    directive.prototype.getArgument = function(name) {
        var found = null;
        this.xarguments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    directive.prototype.addDirectiveLocation = function(name, sourceLineInfo) {
        var retval = new _md.directiveLocation(name, sourceLineInfo);
        retval.wzParent = this;
        this.directiveLocations.push(retval);
        return retval;
    }
    directive.prototype.getDirectiveLocation = function(name) {
        var found = null;
        this.directiveLocations.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    directive.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    directive.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    directive.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            items.push(item.toJson());
        }
        result['xarguments'] = items;
        items = [];
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            items.push(item.toJson());
        }
        result['directiveLocations'] = items;
    }
    directive.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.argument, this.xarguments);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'on') {
                return this.wzLoadToChildColl(child, _md.directiveLocation, this.directiveLocations);
            }
        }
        return ok;
    }
    directive.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    directive.prototype.wzVerify = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    directive.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directiveLocations, i_len=this.directiveLocations.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directiveLocations[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return directive;
})(graphqlBase);

_md.directive = directive;
// element isList
var isList = (function (directive) {
    _inherits(isList, directive);
    function isList(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(isList.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, isList);
        this.wzElement = "isList";
    }
    isList.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    isList.prototype.toJsonProperties = function(result) {
        _md.directive.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    isList.prototype.toJsonChildren = function(result) {
        _md.directive.prototype.toJsonChildren.call(this, result);
    }
    return isList;
})(directive);

_md.isList = isList;
// element isRequired
var isRequired = (function (directive) {
    _inherits(isRequired, directive);
    function isRequired(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(isRequired.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, isRequired);
        this.wzElement = "isRequired";
    }
    isRequired.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    isRequired.prototype.toJsonProperties = function(result) {
        _md.directive.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    isRequired.prototype.toJsonChildren = function(result) {
        _md.directive.prototype.toJsonChildren.call(this, result);
    }
    return isRequired;
})(directive);

_md.isRequired = isRequired;
// element isDeprecated
var isDeprecated = (function (directive) {
    _inherits(isDeprecated, directive);
    function isDeprecated(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(isDeprecated.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, isDeprecated);
        this.wzElement = "isDeprecated";
    }
    isDeprecated.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    isDeprecated.prototype.toJsonProperties = function(result) {
        _md.directive.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    isDeprecated.prototype.toJsonChildren = function(result) {
        _md.directive.prototype.toJsonChildren.call(this, result);
    }
    return isDeprecated;
})(directive);

_md.isDeprecated = isDeprecated;
// element skip
var skip = (function (directive) {
    _inherits(skip, directive);
    function skip(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(skip.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, skip);
        this.wzElement = "skip";
    }
    skip.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    skip.prototype.toJsonProperties = function(result) {
        _md.directive.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    skip.prototype.toJsonChildren = function(result) {
        _md.directive.prototype.toJsonChildren.call(this, result);
    }
    return skip;
})(directive);

_md.skip = skip;
// element include
var include = (function (directive) {
    _inherits(include, directive);
    function include(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(include.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, include);
        this.wzElement = "include";
    }
    include.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    include.prototype.toJsonProperties = function(result) {
        _md.directive.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    include.prototype.toJsonChildren = function(result) {
        _md.directive.prototype.toJsonChildren.call(this, result);
    }
    return include;
})(directive);

_md.include = include;
// element variable
var variable = (function (graphqlBase) {
    _inherits(variable, graphqlBase);
    function variable(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(variable.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, variable);
        this.wzElement = "variable";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.type = null
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    variable.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    variable.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    variable.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    variable.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    variable.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    variable.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.type)) {
            result["type"] = this.type;
        }
    }
    variable.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    variable.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    variable.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    variable.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    variable.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return variable;
})(graphqlBase);

_md.variable = variable;
// element stringVar
var stringVar = (function (variable) {
    _inherits(stringVar, variable);
    function stringVar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringVar);
        this.wzElement = "stringVar";
    }
    stringVar.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    stringVar.prototype.toJsonProperties = function(result) {
        _md.variable.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    stringVar.prototype.toJsonChildren = function(result) {
        _md.variable.prototype.toJsonChildren.call(this, result);
    }
    stringVar.prototype.wzInitialize = function(ctx) {
        this.type = 'String';
        _md.variable.prototype.wzInitialize.call(this, ctx);
    }
    return stringVar;
})(variable);

_md.stringVar = stringVar;
// element intVar
var intVar = (function (variable) {
    _inherits(intVar, variable);
    function intVar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(intVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, intVar);
        this.wzElement = "intVar";
    }
    intVar.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    intVar.prototype.toJsonProperties = function(result) {
        _md.variable.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    intVar.prototype.toJsonChildren = function(result) {
        _md.variable.prototype.toJsonChildren.call(this, result);
    }
    intVar.prototype.wzInitialize = function(ctx) {
        this.type = 'Int';
        _md.variable.prototype.wzInitialize.call(this, ctx);
    }
    return intVar;
})(variable);

_md.intVar = intVar;
// element floatVar
var floatVar = (function (variable) {
    _inherits(floatVar, variable);
    function floatVar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floatVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floatVar);
        this.wzElement = "floatVar";
    }
    floatVar.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    floatVar.prototype.toJsonProperties = function(result) {
        _md.variable.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    floatVar.prototype.toJsonChildren = function(result) {
        _md.variable.prototype.toJsonChildren.call(this, result);
    }
    floatVar.prototype.wzInitialize = function(ctx) {
        this.type = 'Float';
        _md.variable.prototype.wzInitialize.call(this, ctx);
    }
    return floatVar;
})(variable);

_md.floatVar = floatVar;
// element booleanVar
var booleanVar = (function (variable) {
    _inherits(booleanVar, variable);
    function booleanVar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanVar);
        this.wzElement = "booleanVar";
    }
    booleanVar.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    booleanVar.prototype.toJsonProperties = function(result) {
        _md.variable.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    booleanVar.prototype.toJsonChildren = function(result) {
        _md.variable.prototype.toJsonChildren.call(this, result);
    }
    booleanVar.prototype.wzInitialize = function(ctx) {
        this.type = 'Boolean';
        _md.variable.prototype.wzInitialize.call(this, ctx);
    }
    return booleanVar;
})(variable);

_md.booleanVar = booleanVar;
// element selection
var selection = (function (graphqlBase) {
    _inherits(selection, graphqlBase);
    function selection(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(selection.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, selection);
        this.wzElement = "selection";
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    selection.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    selection.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    selection.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    selection.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    selection.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    selection.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    selection.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    selection.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    selection.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    selection.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    selection.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return selection;
})(graphqlBase);

_md.selection = selection;
// element selectionSet
var selectionSet = (function (selection) {
    _inherits(selectionSet, selection);
    function selectionSet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(selectionSet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, selectionSet);
        this.wzElement = "selectionSet";
        // relation argument
        this.xarguments = [];
        // relation selection
        this.selections = [];
    }
    selectionSet.prototype.addArgument = function(name, sourceLineInfo) {
        var retval = new _md.argument(name, sourceLineInfo);
        retval.wzParent = this;
        this.xarguments.push(retval);
        return retval;
    }
    selectionSet.prototype.getArgument = function(name) {
        var found = null;
        this.xarguments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    selectionSet.prototype.addSelection = function(name, sourceLineInfo) {
        var retval = new _md.selection(name, sourceLineInfo);
        retval.wzParent = this;
        this.selections.push(retval);
        return retval;
    }
    selectionSet.prototype.getSelection = function(name) {
        var found = null;
        this.selections.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    selectionSet.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    selectionSet.prototype.toJsonProperties = function(result) {
        _md.selection.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    selectionSet.prototype.toJsonChildren = function(result) {
        _md.selection.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            items.push(item.toJson());
        }
        result['xarguments'] = items;
        items = [];
        var i, i_items=this.selections, i_len=this.selections.length, item;
        for (i=0; i<i_len; i++) {
            item = this.selections[i];
            items.push(item.toJson());
        }
        result['selections'] = items;
    }
    selectionSet.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, _md.field, this.selections);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.argument, this.xarguments);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.selectionSet, this.selections);
            }
        }
        if (_l == 3 && _ch == '.') {
            if (name === '...') {
                return this.wzLoadToChildColl(child, _md.fragmentSpread, this.selections);
            }
        }
        if (_l == 5 && _ch == '.') {
            if (name === '...on') {
                return this.wzLoadToChildColl(child, _md.inlineFragment, this.selections);
            }
        }
        if (_l == 9 && _ch == 's') {
            if (name === 'selection') {
                return this.wzLoadToChildColl(child, _md.selection, this.selections);
            }
        }
        ok = _md.selection.prototype.loadChild.call(this, child);
        return ok;
    }
    selectionSet.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    selectionSet.prototype.wzVerify = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.selections, i_len=this.selections.length, item;
        for (i=0; i<i_len; i++) {
            item = this.selections[i];
            item.wzVerify(ctx);
        }
        _md.selection.prototype.wzVerify.call(this, ctx);
    }
    selectionSet.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.selections, i_len=this.selections.length, item;
        for (i=0; i<i_len; i++) {
            item = this.selections[i];
            item.wzInitialize(ctx);
        }
        _md.selection.prototype.wzInitialize.call(this, ctx);
    }
    return selectionSet;
})(selection);

_md.selectionSet = selectionSet;
// element field
var field = (function (selection) {
    _inherits(field, selection);
    function field(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(field.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, field);
        this.wzElement = "field";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.alias = null
        // relation argument
        this.xarguments = [];
    }
    field.prototype.addArgument = function(name, sourceLineInfo) {
        var retval = new _md.argument(name, sourceLineInfo);
        retval.wzParent = this;
        this.xarguments.push(retval);
        return retval;
    }
    field.prototype.getArgument = function(name) {
        var found = null;
        this.xarguments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    field.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    field.prototype.toJsonProperties = function(result) {
        _md.selection.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.alias)) {
            result["alias"] = this.alias;
        }
    }
    field.prototype.toJsonChildren = function(result) {
        _md.selection.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            items.push(item.toJson());
        }
        result['xarguments'] = items;
    }
    field.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.argument, this.xarguments);
            }
        }
        if (_l == 2 && _ch == 'a') {
            if (name === 'as') {
                this.alias = child.v; return true;
            }
        }
        ok = _md.selection.prototype.loadChild.call(this, child);
        return ok;
    }
    field.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    field.prototype.wzVerify = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzVerify(ctx);
        }
        _md.selection.prototype.wzVerify.call(this, ctx);
    }
    field.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.xarguments, i_len=this.xarguments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.xarguments[i];
            item.wzInitialize(ctx);
        }
        _md.selection.prototype.wzInitialize.call(this, ctx);
    }
    return field;
})(selection);

_md.field = field;
// element fragmentSpread
var fragmentSpread = (function (selection) {
    _inherits(fragmentSpread, selection);
    function fragmentSpread(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fragmentSpread.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fragmentSpread);
        this.wzElement = "fragmentSpread";
    }
    fragmentSpread.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    fragmentSpread.prototype.toJsonProperties = function(result) {
        _md.selection.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    fragmentSpread.prototype.toJsonChildren = function(result) {
        _md.selection.prototype.toJsonChildren.call(this, result);
    }
    return fragmentSpread;
})(selection);

_md.fragmentSpread = fragmentSpread;
// element inlineFragment
var inlineFragment = (function (selection) {
    _inherits(inlineFragment, selection);
    function inlineFragment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(inlineFragment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, inlineFragment);
        this.wzElement = "inlineFragment";
        // relation selectionSet
        this.selectionSet = null;
    }
    inlineFragment.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    inlineFragment.prototype.toJsonProperties = function(result) {
        _md.selection.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    inlineFragment.prototype.toJsonChildren = function(result) {
        _md.selection.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.selectionSet != null) {
            result['selectionSet'] = this.selectionSet.toJson();
        }
        else {
            result['selectionSet'] = null;
        }
    }
    inlineFragment.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.selectionSet, 'selectionSet');
            }
        }
        ok = _md.selection.prototype.loadChild.call(this, child);
        return ok;
    }
    inlineFragment.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    inlineFragment.prototype.wzVerify = function(ctx) {
        if (this.selectionSet != null) {
            this.selectionSet.wzVerify(ctx);
        }
        _md.selection.prototype.wzVerify.call(this, ctx);
    }
    inlineFragment.prototype.wzInitialize = function(ctx) {
        if (this.selectionSet != null) {
            this.selectionSet.wzInitialize(ctx);
        }
        _md.selection.prototype.wzInitialize.call(this, ctx);
    }
    return inlineFragment;
})(selection);

_md.inlineFragment = inlineFragment;
// element argument
var argument = (function (graphqlBase) {
    _inherits(argument, graphqlBase);
    function argument(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(argument.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, argument);
        this.wzElement = "argument";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.defaultValue = null
        // relation value
        this.value = null;
    }
    argument.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    argument.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.defaultValue)) {
            result["defaultValue"] = this.defaultValue;
        }
    }
    argument.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.value != null) {
            result['value'] = this.value.toJson();
        }
        else {
            result['value'] = null;
        }
    }
    argument.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '=') {
            if (name === '=') {
                this.defaultValue = child.v; return true;
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadOneToOne(child, _md.objectField, 'value');
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadOneToOne(child, _md.arrayValue, 'value');
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.objectValue, 'value');
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadOneToOne(child, _md.IDValue, 'value');
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadOneToOne(child, _md.intValue, 'value');
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadOneToOne(child, _md.value, 'value');
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadOneToOne(child, _md.enumValue, 'value');
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadOneToOne(child, _md.floatValue, 'value');
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadOneToOne(child, _md.stringValue, 'value');
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadOneToOne(child, _md.booleanValue, 'value');
            }
        }
        return ok;
    }
    argument.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    argument.prototype.wzVerify = function(ctx) {
        if (this.value != null) {
            this.value.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    argument.prototype.wzInitialize = function(ctx) {
        if (this.value != null) {
            this.value.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return argument;
})(graphqlBase);

_md.argument = argument;
// element value
var value = (function (graphqlBase) {
    _inherits(value, graphqlBase);
    function value(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(value.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, value);
        this.wzElement = "value";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.type = null
        // relation comment
        this.comments = [];
        // relation directive
        this.directives = [];
    }
    value.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    value.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    value.prototype.addDirective = function(name, sourceLineInfo) {
        var retval = new _md.directive(name, sourceLineInfo);
        retval.wzParent = this;
        this.directives.push(retval);
        return retval;
    }
    value.prototype.getDirective = function(name) {
        var found = null;
        this.directives.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    value.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    value.prototype.toJsonProperties = function(result) {
        _md.graphqlBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.type)) {
            result["type"] = this.type;
        }
    }
    value.prototype.toJsonChildren = function(result) {
        _md.graphqlBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            items.push(item.toJson());
        }
        result['comments'] = items;
        items = [];
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            items.push(item.toJson());
        }
        result['directives'] = items;
    }
    value.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, _md.comment, this.comments);
            }
        }
        if (_l == 1 && _ch == '%') {
            if (name === '%') {
                return this.wzLoadToChildColl(child, _md.directive, this.directives);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '%') {
            if (name === '%list') {
                return this.wzLoadToChildColl(child, _md.isList, this.directives);
            }
            else if (name === '%skip') {
                return this.wzLoadToChildColl(child, _md.skip, this.directives);
            }
        }
        if (_l == 8 && _ch == '%') {
            if (name === '%include') {
                return this.wzLoadToChildColl(child, _md.include, this.directives);
            }
        }
        if (_l == 9 && _ch == '%') {
            if (name === '%required') {
                return this.wzLoadToChildColl(child, _md.isRequired, this.directives);
            }
        }
        if (_l == 11 && _ch == '%') {
            if (name === '%deprecated') {
                return this.wzLoadToChildColl(child, _md.isDeprecated, this.directives);
            }
        }
        return ok;
    }
    value.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    value.prototype.wzVerify = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzVerify(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzVerify(ctx);
        }
        _md.graphqlBase.prototype.wzVerify.call(this, ctx);
    }
    value.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.comments, i_len=this.comments.length, item;
        for (i=0; i<i_len; i++) {
            item = this.comments[i];
            item.wzInitialize(ctx);
        }
        var i, i_items=this.directives, i_len=this.directives.length, item;
        for (i=0; i<i_len; i++) {
            item = this.directives[i];
            item.wzInitialize(ctx);
        }
        _md.graphqlBase.prototype.wzInitialize.call(this, ctx);
    }
    return value;
})(graphqlBase);

_md.value = value;
// element stringValue
var stringValue = (function (value) {
    _inherits(stringValue, value);
    function stringValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stringValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stringValue);
        this.wzElement = "stringValue";
    }
    stringValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    stringValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    stringValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    stringValue.prototype.wzInitialize = function(ctx) {
        this.type = 'String';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return stringValue;
})(value);

_md.stringValue = stringValue;
// element intValue
var intValue = (function (value) {
    _inherits(intValue, value);
    function intValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(intValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, intValue);
        this.wzElement = "intValue";
    }
    intValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    intValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    intValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    intValue.prototype.wzInitialize = function(ctx) {
        this.type = 'Int';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return intValue;
})(value);

_md.intValue = intValue;
// element floatValue
var floatValue = (function (value) {
    _inherits(floatValue, value);
    function floatValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floatValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floatValue);
        this.wzElement = "floatValue";
    }
    floatValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    floatValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    floatValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    floatValue.prototype.wzInitialize = function(ctx) {
        this.type = 'Float';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return floatValue;
})(value);

_md.floatValue = floatValue;
// element booleanValue
var booleanValue = (function (value) {
    _inherits(booleanValue, value);
    function booleanValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(booleanValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, booleanValue);
        this.wzElement = "booleanValue";
    }
    booleanValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    booleanValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    booleanValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    booleanValue.prototype.wzInitialize = function(ctx) {
        this.type = 'Boolean';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return booleanValue;
})(value);

_md.booleanValue = booleanValue;
// element IDValue
var IDValue = (function (value) {
    _inherits(IDValue, value);
    function IDValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(IDValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, IDValue);
        this.wzElement = "IDValue";
    }
    IDValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    IDValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    IDValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    IDValue.prototype.wzInitialize = function(ctx) {
        this.type = 'ID';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return IDValue;
})(value);

_md.IDValue = IDValue;
// element enumValue
var enumValue = (function (value) {
    _inherits(enumValue, value);
    function enumValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(enumValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, enumValue);
        this.wzElement = "enumValue";
    }
    enumValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    enumValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    enumValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
    }
    enumValue.prototype.wzInitialize = function(ctx) {
        this.type = 'enum';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return enumValue;
})(value);

_md.enumValue = enumValue;
// element objectValue
var objectValue = (function (value) {
    _inherits(objectValue, value);
    function objectValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectValue);
        this.wzElement = "objectValue";
        // relation objectField
        this.objectFields = [];
    }
    objectValue.prototype.addObjectField = function(name, sourceLineInfo) {
        var retval = new _md.objectField(name, sourceLineInfo);
        retval.wzParent = this;
        this.objectFields.push(retval);
        return retval;
    }
    objectValue.prototype.getObjectField = function(name) {
        var found = null;
        this.objectFields.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    objectValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            items.push(item.toJson());
        }
        result['objectFields'] = items;
    }
    objectValue.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.objectField, this.objectFields);
            }
        }
        ok = _md.value.prototype.loadChild.call(this, child);
        return ok;
    }
    objectValue.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectValue.prototype.wzVerify = function(ctx) {
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            item.wzVerify(ctx);
        }
        _md.value.prototype.wzVerify.call(this, ctx);
    }
    objectValue.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.objectFields, i_len=this.objectFields.length, item;
        for (i=0; i<i_len; i++) {
            item = this.objectFields[i];
            item.wzInitialize(ctx);
        }
        this.type = 'object';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return objectValue;
})(value);

_md.objectValue = objectValue;
// element objectField
var objectField = (function (value) {
    _inherits(objectField, value);
    function objectField(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(objectField.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, objectField);
        this.wzElement = "objectField";
        // relation value
        this.value = null;
    }
    objectField.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    objectField.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    objectField.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
        var items, item;
        if (this.value != null) {
            result['value'] = this.value.toJson();
        }
        else {
            result['value'] = null;
        }
    }
    objectField.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadOneToOne(child, _md.objectField, 'value');
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadOneToOne(child, _md.arrayValue, 'value');
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadOneToOne(child, _md.objectValue, 'value');
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadOneToOne(child, _md.IDValue, 'value');
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadOneToOne(child, _md.intValue, 'value');
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadOneToOne(child, _md.value, 'value');
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadOneToOne(child, _md.enumValue, 'value');
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadOneToOne(child, _md.floatValue, 'value');
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadOneToOne(child, _md.stringValue, 'value');
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadOneToOne(child, _md.booleanValue, 'value');
            }
        }
        ok = _md.value.prototype.loadChild.call(this, child);
        return ok;
    }
    objectField.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    objectField.prototype.wzVerify = function(ctx) {
        if (this.value != null) {
            this.value.wzVerify(ctx);
        }
        _md.value.prototype.wzVerify.call(this, ctx);
    }
    objectField.prototype.wzInitialize = function(ctx) {
        if (this.value != null) {
            this.value.wzInitialize(ctx);
        }
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return objectField;
})(value);

_md.objectField = objectField;
// element arrayValue
var arrayValue = (function (value) {
    _inherits(arrayValue, value);
    function arrayValue(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(arrayValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrayValue);
        this.wzElement = "arrayValue";
        // relation value
        this.values = [];
    }
    arrayValue.prototype.addValue = function(name, sourceLineInfo) {
        var retval = new _md.value(name, sourceLineInfo);
        retval.wzParent = this;
        this.values.push(retval);
        return retval;
    }
    arrayValue.prototype.getValue = function(name) {
        var found = null;
        this.values.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    arrayValue.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    arrayValue.prototype.toJsonProperties = function(result) {
        _md.value.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    arrayValue.prototype.toJsonChildren = function(result) {
        _md.value.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        var i, i_items=this.values, i_len=this.values.length, item;
        for (i=0; i<i_len; i++) {
            item = this.values[i];
            items.push(item.toJson());
        }
        result['values'] = items;
    }
    arrayValue.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, _md.objectField, this.values);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, _md.arrayValue, this.values);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, _md.objectValue, this.values);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                return this.wzLoadToChildColl(child, _md.IDValue, this.values);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'int') {
                return this.wzLoadToChildColl(child, _md.intValue, this.values);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'ref') {
                return this.wzLoadToChildColl(child, _md.value, this.values);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'enum') {
                return this.wzLoadToChildColl(child, _md.enumValue, this.values);
            }
        }
        if (_l == 5 && _ch == 'f') {
            if (name === 'float') {
                return this.wzLoadToChildColl(child, _md.floatValue, this.values);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'string') {
                return this.wzLoadToChildColl(child, _md.stringValue, this.values);
            }
        }
        if (_l == 7 && _ch == 'b') {
            if (name === 'boolean') {
                return this.wzLoadToChildColl(child, _md.booleanValue, this.values);
            }
        }
        ok = _md.value.prototype.loadChild.call(this, child);
        return ok;
    }
    arrayValue.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = node.children;
        var i, i_items=children, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.graphqlModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    arrayValue.prototype.wzVerify = function(ctx) {
        var i, i_items=this.values, i_len=this.values.length, item;
        for (i=0; i<i_len; i++) {
            item = this.values[i];
            item.wzVerify(ctx);
        }
        _md.value.prototype.wzVerify.call(this, ctx);
    }
    arrayValue.prototype.wzInitialize = function(ctx) {
        var i, i_items=this.values, i_len=this.values.length, item;
        for (i=0; i<i_len; i++) {
            item = this.values[i];
            item.wzInitialize(ctx);
        }
        this.type = 'array';
        _md.value.prototype.wzInitialize.call(this, ctx);
    }
    return arrayValue;
})(value);

_md.arrayValue = arrayValue;
_md.__tagElementMapping = { '#': 'comment', 'scalar': 'scalarTypeDef', 'type': 'objectTypeDef', 'interface': 'interfaceTypeDef', 'union': 'unionTypeDef', '': 'unionMemberType', 'enum': 'enumTypeDef', '@': 'enumValueDef', 'input': 'inputObjectTypeDef', 'directive': 'directiveDef', '%': 'directive', '%list': 'isList', '%required': 'isRequired', '%deprecated': 'isDeprecated', '%skip': 'skip', '%include': 'include', '&': 'implement', 'ref': 'fieldDef', '[': 'arrayType', 'null': 'nullType', 'string': 'stringType', 'int': 'intType', 'float': 'floatType', 'boolean': 'booleanType', 'ID': 'IDType', 'item-type': 'itemType', 'itemtype': 'itemType', 'm': 'method', '{': 'objectValueDef', 'on': 'directiveLocation', '.': 'field', '...': 'fragmentSpread', '...on': 'inlineFragment' };
// model/replaceUnknownElement( )
var graphqlModelException = (function () {
    function graphqlModelException(message, node, instance) {
        _classCallCheck(this, graphqlModelException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log('message', this.message);
        this.stack = (new Error()).stack;
        this.node = node;
    }
    return graphqlModelException;
})();

_md.graphqlModelException = graphqlModelException;
var graphqlContext = (function () {
    function graphqlContext() {
        _classCallCheck(this, graphqlContext);
        this.validationErrors = [];
    }
    graphqlContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    graphqlContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return graphqlContext;
})();

_md.graphqlContext = graphqlContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function parseboolean(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    if (!isBoolean(value)) {
        throw new graphqlModelException('Must be a boolean value (\"true\" or \"false\"), got:' + value, node);
    }
    return value === 'true' ? true : false;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

