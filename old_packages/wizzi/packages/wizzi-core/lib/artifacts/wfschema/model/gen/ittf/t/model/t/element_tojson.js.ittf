$group
	
	$if request.toJson

		m toJson
			var result = {}
			_ this.toJsonProperties(result)
			_ this.toJsonChildren(result)
            return result

		m toJsonProperties
			param result
			_ _md.${element.superType}.prototype.toJsonProperties.call(this, result)
			if this.__jsonProps
				for var k in this.__jsonProps
					set result[k] = this.__jsonProps[k]
            
			$foreach attribute in element.attributes
                $if attribute.type === 'string'
					if !isEmpty(this.${attribute.wzId})
						set result["${attribute.wzId}"] = this.${attribute.wzId}
				$else
					set result["${attribute.wzId}"] = this.${attribute.wzId};
		
		m toJsonChildren
			param result
			_ _md.${element.superType}.prototype.toJsonChildren.call(this, result)

            $if element.relations.length > 0
				var items, item
				$foreach relation in element.relations
					$if relation.isOneToOne
						if this.${relation.wzName} != null
							set result['${relation.wzName}'] = this.${relation.wzName}.toJson()
						else
							set result['${relation.wzName}'] = null
					$else
						set items = []
						foreach item in this.${relation.wzIdPlural}
							_ items.push(item.toJson())
						set result['${relation.wzIdPlural}'] = items;
