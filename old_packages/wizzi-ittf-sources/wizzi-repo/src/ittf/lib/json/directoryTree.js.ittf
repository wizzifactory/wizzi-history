module
	kind es6

	# forked from https://raw.githubusercontent.com/mihneadb/node-directory-tree/master/lib/directory-tree.js

	const FS = require('fs')
	const PATH = require('path')
	const constants
		{
			@ DIRECTORY 1
			@ FILE 2

	function safeReadDirSync
		param path
		let dirData = {}
		try
			set dirData = FS.readdirSync(path)
		catch ex
			if ex.code == "EACCES"
				# User does not have permissions, ignore directory
				return null
			else
				throw ex
		return dirData

	function normalizePath
		param path
		return path.replace(/\\/g, '/')

	function isRegExp
		param regExp
		return typeof regExp === "object" && regExp.constructor == RegExp

	function directoryTree
		param path
		const name = PATH.basename(path);
		set path = normalizePath(path)
		const item
			{
				@ path
				@ name
		let stats
		try
			set stats = FS.statSync(path)
		catch e
			return null
		# log 'stats', stats
		
		if stats.isFile()
			const ext = PATH.extname(path).toLowerCase();
			# Skip if it does not match the extension regex
			log 'ext', ext
			if ext != '.ittf'
				return null
			# File size in bytes
			# set item.size = stats.size
			# set item.extension = ext
			set item.type = constants.FILE
		
		elif stats.isDirectory()
			let dirData = safeReadDirSync(path)
			if dirData === null
				return null
			set item.children = []
			set item.type = constants.DIRECTORY
			foreach child in dirData
				_ item.children.push
					_ directoryTree
						_ PATH.join
							@ path
							@ child
		else
			return null
		
		return item

	set module.exports = directoryTree