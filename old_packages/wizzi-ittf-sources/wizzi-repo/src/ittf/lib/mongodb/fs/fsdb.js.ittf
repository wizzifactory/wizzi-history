module wizzi-repo.mongodb.FsDb
	kind jsfile

	import assert
	import path
	import util
	var verify = require('wizzi-utils').verify
	var MongoClient = null

	var FSITEMS = 'fsitems'
	var DOCUMENTS = 'documents'

	#
		# class FsDb (Filesystem Db)
		#
		# Filesystem item
		# { fsitem
		#   ObjectId _id
		#   string basename
		#   ObjectId parentId
		#   string dirname
		#   string path
		#   integer kind
		#     one-of 0 (directory), 1 (file)
		#
		# Document
		# { document
		#   ObjectId _id
		#   string content
		#   ISODate lastModified

	class FsDb
		ctor
			param db
			set this.db = db

		$include fsdb/getItem
		$include fsdb/insertItem
		$include fsdb/updateItem
		$include fsdb/deleteItem
		$include fsdb/read
		$include fsdb/write

		m close
			if this.db
				# log '***** wizzi-repo.mongodb.FsDb start closing'
				_ this.db.close
				set this.db = null
				# log '***** wizzi-repo.mongodb.FsDb closed'

	#
		# Creates a FsDb instance
	set FsDb.create
		function
			param mongoUri
			param callback
			+
			if verify.isUndefined(callback) && verify.isFunction(mongoUri)
				set callback = mongoUri
				set mongoUri = null
			+
			if MongoClient == null
				set MongoClient = require('mongodb').MongoClient
			set mongoUri = mongoUri || 'mongodb://localhost:27017/test'
			_ MongoClient.connect
				@ mongoUri
				f_cb( mongoDb )
					return
						_ callback
							@ null
							new FsDb(mongoDb)

	function error
		param method
		param message
		return
			{
				@ __is_error true
				@ method 'Mongo.FsDb.' + method
				@ message message

	function normalize
		param path
		return path.trim().replace(/\\/g,'/').toLowerCase()
					
	set module.exports = FsDb
