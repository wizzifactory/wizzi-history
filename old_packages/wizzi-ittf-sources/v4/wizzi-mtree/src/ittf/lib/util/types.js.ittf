module 
    kind jsfile

    var errors = require('../errors')
	var verify = require('wizzi-utils').verify
    
	wz-function objectify
        param value
        param type
        param node
        param unquote
            
		if value === '@@null'
            return null
            
		if value === '@@undefined'
            return undefined
            
		var _isTemplate = isTemplate(value)
            
		if _isTemplate
            return value
            
		if type == null || typeof(type) === 'undefined' || type == 'string'
            if verify.isString(value)
                if unquote
                    return verify.unquote(value)
                else 
                    return value
            else 
                return ''
        elif type == 'integer'
            if isNaN(value) == false
                return parseInt(value, 10)
            else 
				return
					_ error
						@ 'Cannot convert ' + value + ' to integer'
						@  node
						@ 'objectify'
        elif type == 'float'
            if isNaN(value) == false
                return parseFloat(value)
            else 
				return
					_ error
						@ 'Cannot convert ' + value + ' to float'
						@  node
						@ 'objectify'
        elif type == 'boolean'
            if isBool(value)
                return parseBool(value)
            else 
				return
					_ error
						@ 'Cannot convert ' + value + ' to boolean'
						@  node
						@ 'objectify'
        elif type == 'date'
            if isDate(value)
                return parseDate(value)
            else 
				return
					_ error
						@ 'Cannot convert ' + value + ' to date'
						@  node
						@ 'objectify'
		return
			_ error
				@ 'Invalid type: "' + type + '", expected (string, integer, float, boolean, date)'
				@ node
				@ 'objectify'
    
	wz-function isTemplate
        param obj
        if isString(obj) === false
            return false
        return obj.substr(0, 2) === '${' && obj.substr(-1, 1) === '}'
    
	wz-function isDefined
        param obj
        return !(typeof(obj) === 'undefined')
    
	wz-function isObject
        param obj
        return obj !== null && typeof(obj) === 'object'
	
	wz-function isString
        param obj
        return obj !== null && typeof(obj) === 'string'
    
	wz-function isBool
        param obj
        if isString(obj)
            return obj === 'true' || obj === 'false'
        return typeof(obj) === "boolean"
    
	wz-function isDate
        param obj
        var parts = input.split('/')
        return parts.length == 3
    
	wz-function parseBool
        param obj
        return obj === 'true' ? true : false
    
	wz-function parseDate
        param obj
        var parts = input.split('/')
        return 
            new Date
                @ parts[0]
                @ parts[1] - 1
                @ parts[2]

	function error
        param message
		param node
        param method
		var nodeError = new errors.NodeError(message, node)
		return
			{
				@ __is_error true
				@ message nodeError.message
				@ source "wizzi/util/types/" + method
