  module  ids: undefined undefined
    kind jsfile ids: undefined undefined
    var uriparser = require('./uriparser') ids: undefined undefined
    var file = require('./file') ids: undefined undefined
    var repo = require('./repo') ids: undefined undefined
    var md = module.exports = {} ids: undefined undefined
    var win32 = process.platform === 'win32' ids: undefined undefined
    set md.unixifyPath ids: undefined undefined
      function  ids: undefined undefined
        param path_string ids: undefined undefined
        if win32 ids: undefined undefined
          return path_string.replace(/\\/g, '/') ids: undefined undefined
        else  ids: undefined undefined
          return path_string ids: undefined undefined
    set md.exists ids: undefined undefined
      function  ids: undefined undefined
        param path_string ids: undefined undefined
        param callback ids: undefined undefined
        var parsed = uriparser(String(path_string)) ids: undefined undefined
        if parsed.storeKind === 'repo' ids: undefined undefined
          return repo.exists(parsed, callback) ids: undefined undefined
        else  ids: undefined undefined
          return file.exists(path_string, callback) ids: undefined undefined
    set md.isFile ids: undefined undefined
      function  ids: undefined undefined
        param path_string ids: undefined undefined
        param callback ids: undefined undefined
        var parsed = uriparser(String(path_string)) ids: undefined undefined
        if parsed.storeKind === 'repo' ids: undefined undefined
          return repo.isFile(parsed, callback) ids: undefined undefined
        else  ids: undefined undefined
          return file.isFile(path_string, callback) ids: undefined undefined
    set md.isDirectory ids: undefined undefined
      function  ids: undefined undefined
        param path_string ids: undefined undefined
        param callback ids: undefined undefined
        var parsed = uriparser(String(path_string)) ids: undefined undefined
        if parsed.storeKind === 'repo' ids: undefined undefined
          return repo.isDirectory(parsed, callback) ids: undefined undefined
        else  ids: undefined undefined
          return file.isDirectory(path_string, callback) ids: undefined undefined
    set md.read ids: undefined undefined
      function  ids: undefined undefined
        param path_string ids: undefined undefined
        param options ids: undefined undefined
        param callback ids: undefined undefined
        if typeof (options) === 'function' ids: undefined undefined
          set callback = options, options = {} ids: undefined undefined
        if !options ids: undefined undefined
          set options = ids: undefined undefined
            {  ids: undefined undefined
        var parsed = uriparser(String(path_string)) ids: undefined undefined
        if parsed.storeKind === 'repo' ids: undefined undefined
          return repo.read(parsed, options, callback) ids: undefined undefined
        else  ids: undefined undefined
          return file.read(path_string, options, callback) ids: undefined undefined
    set md.getGlobbedFiles ids: undefined undefined
      function  ids: undefined undefined
        param globPattern ids: undefined undefined
        param options ids: undefined undefined
        param callback ids: undefined undefined
        if typeof (options) === 'function' ids: undefined undefined
          set callback = options, options = {} ids: undefined undefined
        if !options ids: undefined undefined
          set options = ids: undefined undefined
            {  ids: undefined undefined
        var parsed = uriparser(String(path_string)) ids: undefined undefined
        if parsed.storeKind === 'repo' ids: undefined undefined
          return repo.getGlobbedFiles(parsed, options, callback) ids: undefined undefined
        else  ids: undefined undefined
          return file.getGlobbedFiles(globPattern, options, callback) ids: undefined undefined