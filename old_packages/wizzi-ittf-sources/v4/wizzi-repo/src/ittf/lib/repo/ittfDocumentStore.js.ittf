module wizzi-repo.ittfDocumentStore
	kind jsfile

	import util
	var uriParser = require('./uriParser')
	var FileSystemStore = require('./fileSystemStore')
	var MongoDbStore = require('./mongoDbStore')
    
	#
		#
		#

	class IttfDocumentStore
		m parseUri
			string ittfDocumentUri
			callback

			_ uriParser
				@ ittfDocumentUri
				@ callback
		#
			# params
			#   { storeInfo
			#     string storeKind
			#       oneOf filesystem, mongodb, localstorage
			#     string storeUri
			#       # when storeKind === 'mongodb'
			#     string storeBaseFolder
			#       # when storeKind === 'mongodb'
		m init
			{ storeInfo
				string storeKind
			callback

			if storeInfo.storeKind === 'filesystem'
				set this.storeImpl = new FileSystemStore()
				set this.storeKind = this.storeImpl.storeKind
				return
					_ callback(null)
			
			elif storeInfo.storeKind === 'mongodb'
                set this.storeImpl = new MongoDbStore()
				var that = this
				_ this.storeImpl.init
					{
						@ mongoUri storeInfo.storeUri
						@ mongodbBaseFolder storeInfo.storeBaseFolder
					f_cb( notUsed )
						set that.storeKind = that.storeImpl.storeKind
						return
							_ callback(null)
			
			elif storeInfo.storeKind === 'localstorage'
				r_cb_wz_err( InvalidArgument, init )
					{
						@ parameter 'storeKind'
						@ message "storeKind not implemented yet: " + storeInfo.storeKind

			else 
				r_cb_wz_err( InvalidArgument, init )
					{
						@ parameter 'storeKind'
						@ message "Unknown storeKind: " + storeInfo.storeKind
            
		m initSync
			{ storeInfo
				string storeKind
			if storeInfo.storeKind === 'filesystem'
                set this.storeImpl = new FileSystemStore()
			else 
				r_cb_wz_err( InvalidArgument, initSync )
					{
						@ parameter 'storeInfo.storeKind'
						@ message 'Method "initSync" is for storeKind "filesystem" only. ' +
							\b 'Received: ' + storeInfo.storeKind
			set this.storeKind = this.storeImpl.storeKind

		m close
			if this.storeImpl && this.storeImpl.close
				_ this.storeImpl.close
		
		m documentExists
			string documentUri
            callback
            _ this.storeImpl.documentExists(documentUri, callback)

		m getModelContent
            string documentUri
            callback
            _ this.storeImpl.getModelContent(documentUri, callback)

		m folderExistsSync
			string folderUri
			if this.storeKind !== 'filesystem'
				r_cb_wz_err( InvalidRequest, folderExistsSync )
					@ 'Method "folderExistsSync" is for storeKind "filesystem" only. ' +
							\b 'Current storeKind is: ' + this.storeKind
            return this.storeImpl.folderExists(folderUri)

		m getFoldersSync
			string parentFolderUri
			{ options
			if this.storeKind !== 'filesystem'
				r_cb_wz_err( InvalidRequest, getFoldersSync )
					@ 'Method "getFoldersSync" is for storeKind "filesystem" only. ' +
							\b 'Current storeKind is: ' + this.storeKind
            return this.storeImpl.getFoldersSync(parentFolderUri, options)

		m createFileSystemDocumentStore
			static
			var ret = new IttfDocumentStore()
			_ ret.initSync
				{
					@ storeKind "filesystem"
			return ret

	set module.exports = IttfDocumentStore