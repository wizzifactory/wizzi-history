base_test(wfjobLoader)

	$append imports
		var WfjobLoader = require('../../lib/production/wfjobLoader').WfjobLoader
		var mocks = require('../mocks/misc')

	var _wizziFactory = null
	var _productionManager = null

	before-async
		_ mocks.getWizziFactory
			{
				@ storeKind 'filesystem'
				@ testOnlyMockBaseDir __dirname
			f_cb_test( wf )
				set _wizziFactory = wf
				set _productionManager
					_ wf.createProductionManager
						{
							@ indentSpaces 4
							@ basedir __dirname
							@ dumps {}
				_ done

	it-async shoul load a wfjob
		var wfjobLoader 
			new WfjobLoader
				@ _productionManager
		_ wfjobLoader.load
			{
				@ model
					{
						@ cwd
							_ path.join
								@ __dirname
								@ 'ittf'
						@ src 'mock1.wfjob.ittf'
			f_cb_test( result )
				log 'shoul load a wfjob: seenWfjobRequests', result.seenWfjobRequests
				log 'shoul load a wfjob: pendingWfjobRequests', result.pendingWfjobRequests
				log 'shoul load a wfjob: artifactInfoConfigs', result.artifactInfoConfigs
				tobe_array( result.pendingWfjobRequests, 1)
				tobe_array( result.seenWfjobRequests, 1)
				tobe_array( result.artifactInfoConfigs, 1)
				tobe_string( result.artifactInfoConfigs[0].name, artifactMock1 )
				tobe_string( result.artifactInfoConfigs[0].model.src, mock1.tests.ittf )
				_ done
