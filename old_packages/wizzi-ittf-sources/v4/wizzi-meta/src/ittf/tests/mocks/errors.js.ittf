module
	kind jsfile

	+
	var md = module.exports = {}

	error( Node, message, node )
        var msg
            [ 
                @ message
        if node
            if node.wzSourceLineInfo
                var info = node.wzSourceLineInfo
                var filePath = 'TODO'
                if node.wzSourceFilepath
                    set filePath = node.wzSourceFilepath(info.sourceKey)
                _ msg.push((' at row: ' + info.row))
                _ msg.push((', col: ' + info.col))
                _ msg.push((', source: ' + info.sourceKey))
                _ msg.push((', in file: ' + filePath))
            elif node.row
                _ msg.push((' at row: ' + node.row))
                _ msg.push((', col: ' + node.col))
        set this.message = msg.join('')
		# log 'NodeError', this.message
        # set this.node = node

    error( WizziModelLoad, message, srcPath, ex )
        set this.message = 'Error: ' + message + '\nLoading ittf document ' + md.getSrcPathInfo(srcPath)

	error( ArtifactGeneration, message, generation, srcPath, ex )
        set this.message = 'Error: ' + message + 
			\ '\nDuring generation:' + generation + 
			\ ', processing document ' + md.getSrcPathInfo(srcPath)

	set md.getSrcPathInfo
		function
			param srcPath
			if typeof (srcPath) === 'string'
				return srcPath
			if (srcPath && (typeof (srcPath) === 'object'))
				var msg = md.getSrcPathInfoFromNode(srcPath)
				return 
					iif msg
						then msg
						else 
							_ srcPath.toString()
			return 'unavailable'
    
	set md.getSrcPathInfoFromNode
		function
			param node
			var msg
				[ 
			if node
				if node.wzSourceLineInfo
					var info = node.wzSourceLineInfo
					var filePath = 'TODO'
					if node.wzSourceFilepath
						set filePath = node.wzSourceFilepath(info.sourceKey)
					_ msg.push((' at row: ' + info.row))
					_ msg.push((', col: ' + info.col))
					_ msg.push((', source: ' + info.sourceKey))
					_ msg.push((', in file: ' + filePath))
			return 
				iif msg.length == 0
					then null
					else 
						_ msg.join('')


