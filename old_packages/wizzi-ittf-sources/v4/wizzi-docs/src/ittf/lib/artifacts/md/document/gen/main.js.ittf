module
	kind jsfile

	var util = require('util')
	var verify = require('../../../../util/verify')
	var md = module.exports = {}
	var myname = 'md.document.main'

	set md.gen
		function
			param model
			param ctx
			param callback

			# log 'model', util.inspect(model, { depth: 1 })

			if this.genItem
				_ this.genItem(model, ctx)
				_ callback(null, ctx)
			else
				new md.gen(model, ctx, callback)
			

	set md.gen.prototype.genItems
		function
			param items
			param ctx
			param options

			var
				decl opt = options || {}
				decl from = opt.from || 0

			for var i = from; i < items.length; i++
				var item = items[i]
				_ this.genItem(item, ctx)
				
	md-gen-method( genItem )

		if this[model.wzElement]
			# known element
			if this[model.wzElement](model, ctx)
				# ok, processed
				return
		else
			log myname + '. Unknown statement tag/element: ' + model.wzTag + '/' + model.wzElement, model
			throw ctx.error(myname + '. Unknown statement tag/element: ' + model.wzTag + '/' + model.wzElement, model)

		
	md-gen-method( mdx )
		_ this.genItems(model.elements, ctx)
		return true;
	
	md-gen-method( h1 )
		_ ctx.w("# " + model.wzName)
		return true;
	
	md-gen-method( h2 )
		_ ctx.w("## " + model.wzName)
		return true;
	
	md-gen-method( h3 )
		_ ctx.w("### " + model.wzName)
		return true;
	
	md-gen-method( h4 )
		_ ctx.w("#### " + model.wzName)
		return true;
	
	md-gen-method( h5 )
		_ ctx.w("##### " + model.wzName)
		return true;
	
	md-gen-method( h6 )
		_ ctx.w("##### " + model.wzName)
		return true;
	
	md-gen-method( a )
		_ ctx.write('[' + model.wzName + ']')
		_ ctx.write('(' + model.href)
		if verify.isString(model.title)
			_ ctx.write(' "' + model.title + '"')
		_ ctx.w(')')

	md-gen-method( ul )
		_ this.genItems(model.elements, ctx)

	md-gen-method( li )
		_ ctx.write('* ')
		if model.wzName && model.wzName.length > 0
			_ ctx.write(model.wzName + ' ' )
		_ this.genItems(model.elements, ctx)
		_ ctx.w('')
	
	md-gen-method( ol )
		_ this.genItems(model.elements, ctx)

	md-gen-method( img )
		_ ctx.write('![' + model.wzName + ']')
		_ ctx.write('(' + model.src)
		if verify.isString(model.title)
			_ ctx.write(' "' + model.title + '"')
		_ ctx.w(')')

	md-gen-method( video )

	md-gen-method( table )
		_ ctx.w('<table>')
		_ this.genItems(model.elements, ctx)
		_ ctx.w('</table>')

	md-gen-method( tr )
		_ ctx.w('<tr>')
		_ this.genItems(model.elements, ctx)
		_ ctx.w('</tr>')

	md-gen-method( tbody )
		_ ctx.w('<tbody>')
		_ this.genItems(model.elements, ctx)
		_ ctx.w('</tbody>')

	md-gen-method( td )
		_ ctx.write('<td>')
		if model.wzName
			_ ctx.write(model.wzName)
		if model.elements && model.elements.length > 0
			_ ctx.w()
			_ this.genItems(model.elements, ctx)
		else
			_ ctx.w('</td>')

	md-gen-method( th )
		_ ctx.write('<th>')
		if model.wzName
			_ ctx.write(model.wzName)
		if model.elements && model.elements.length > 0
			_ ctx.w()
			_ this.genItems(model.elements, ctx)
		else
			_ ctx.w('</th>')

	md-gen-method( quote )

	md-gen-method( hr )
		_ ctx.w('* * *')

	md-gen-method( p )
		_ ctx.w(model.wzName)
		if ctx.isCode
			_ ctx.indent()
		_ this.genItems(model.elements, ctx)
		if ctx.isCode
			_ ctx.deindent()
		return true;
	
	md-gen-method( span )
		_ ctx.write
			_ verify.replaceAll(model.wzName, '&nbsp;', ' ')
		_ this.genItems(model.elements, ctx)
		return true;

	md-gen-method( br )
		_ ctx.w()
		return true;
	
	md-gen-method( i )
		_ ctx.write('*' + model.wzName)
		_ this.genItems(model.elements, ctx)
		_ ctx.write('*')
		return true;
	
	md-gen-method( b )
		_ ctx.write('**' + model.wzName)
		_ this.genItems(model.elements, ctx)
		_ ctx.write('**')
		return true;
	
	md-gen-method( span )
		_ ctx.write(model.wzName)
		_ this.genItems(model.elements, ctx)
		return true;
	
	md-gen-method( blank )
		_ ctx.write(' ' + model.wzName)
		_ this.genItems(model.elements, ctx)
		return true;
	
	md-gen-method( code )
		_ ctx.w("`" + model.wzName + "`")
		return true;
	
	md-gen-method( js )
		_ ctx.w("```javascript")
		set ctx.isCode = true
		_ this.genItems(model.elements, ctx)
		set ctx.isCode = false
		_ ctx.w("```")
		return true;

	md-gen-method( bash )
		_ ctx.w("```bash")
		set ctx.isCode = true
		_ this.genItems(model.elements, ctx)
		set ctx.isCode = false
		_ ctx.w("```")
		return true;

	md-gen-method( imgRef )
		_ ctx.write('![' + model.alt + ']')
		_ ctx.w('[' + model.wzName + ']')

	md-gen-method( ref )
		_ ctx.write('[' + model.wzName + ']')
		_ ctx.write(' ' + model.href)
		_ ctx.w(' "' + model.title + '"')

	set md.isLineTag
		function
			param model
			return ['p', 'br'].indexOf(model.wzElement) > -1;
