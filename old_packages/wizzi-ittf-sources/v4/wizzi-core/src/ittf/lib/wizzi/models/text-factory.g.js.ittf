factory( text, Pseudo schema text )

	$append context-settings
		# STOP set context.sourcePreprocessor = preprocessText

	function isCommandNode
		param line
		var state = 0
		foreach ch in line
			if state == 1
				if ch == ' ' || ch == '\t'
					return false
				if ch == '('
					return true
			else
				if ch !== ' ' && ch !== '\t'
					if ch == '$'
						return true
					else
						set state = 1
		return false

	function preprocessText
		param text

		# log 'wizzi-core.wizzi.models.text-factory.g.preprocessText text: ' + text
		
		if !text || text.length == 0
			return text
		var
			decl len = text.length
			decl ch
			decl line = []
			decl indent = 0
			decl seenNotWs = false
		
		var sb = [ 'text' ]
		for var i = 0; i<len; i++
			set ch = text[i]
			if ch === '\n' || ch === '\r'
				# log 'wizzi-core.wizzi.models.text-factory.g.preprocessText line[0]', line[0]
				if isCommandNode(line)
					_ sb.push
						@ '    ' + line.join('') + (indent > 0 ? ' || ' + indent.toString() : '')
				else
					_ sb.push
						@ '    ' + line.join('') + (indent > 0 ? ' || ' + indent.toString() : '')
					# + Ä
				set line = []
				set indent = 0
				set seenNotWs = false
				if i < len-1
					if (ch === '\n' && text[i+1] === '\r')
						\b || (ch === '\r' && text[i+1] === '\n')
						# log 'wizzi-core.wizzi.models.text-factory.g. preprocessText skip'
						set i++
			else
				if !seenNotWs
					if ch === ' '
						set indent++
					elif ch === '\t'
						set indent += 4
					else
						set seenNotWs = true
				_ line.push(ch)
		
		if isCommandNode(line)
			_ sb.push
				@ '    ' + line.join('') + (indent > 0 ? ' || ' + indent.toString() : '')
		elif line.length > 0
			_ sb.push
				@ '    ' + line.join('') + (indent > 0 ? ' || ' + indent.toString() : '')
			# + Ä
		
		log 'wizzi-core.wizzi.models.text-factory.g.preprocessText result', sb.join('\n')
		return sb.join('\n')

		
	
