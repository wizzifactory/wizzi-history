loader( debug )

	$append requires
		var lineParser = require('../util/lineParser')

	stm( inspect )
		var ss = model.wzName.split(','), name, value
		if ss.length == 2
			set name = u.unquote(ss[0].trim())
			set value = ss[1].trim()
		else
			var nv = lineParser.parseNameValueRaw(ss[0], model)
			if nv.name() && nv.value()
				set name = u.unquote(nv.name().trim())
				set value = nv.value().trim()
			else
				set name = ss[0]
				set value = ss[0]
		_ ctx.w
			@ 'console.log("' + name + '" + " " +
				\b util.inspect(' + value + ', { depth: null } ))'
		r_cb()

	stm( debug )
		_ ctx.w('debug(' + model.wzName + ')' + u.semicolon(model.wzName))
		r_cb()

	stm( log )
		_ ctx.w('console.log(' + model.wzName + ')' + u.semicolon(model.wzName))
		# log 151
		r_cb()

	stm( warn )
		_ ctx.w('console.warn(' + model.wzName + ')' + u.semicolon(model.wzName))
		r_cb()

	stm( error )
		_ ctx.w('console.error(' + model.wzName + ')' + u.semicolon(model.wzName))
		r_cb()

	stm( chalk )
		var sw = []
		foreach item in model.wzName.split(',')
			var nv = lineParser.parseNameValueRaw(item, model)
			if nv.value()
				_ sw.push
					@ 'chalk.' + nv.name() + '(' + nv.value() + ')' 
			else
				_ sw.push
					@ 'chalk.red(' + nv.name() + ')' 
		_ ctx.w
			@ 'console.log(' + sw.join(', ') + ')'
		r_cb()
