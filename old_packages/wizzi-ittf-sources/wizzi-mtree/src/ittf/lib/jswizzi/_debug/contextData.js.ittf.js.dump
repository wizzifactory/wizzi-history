// 26/5/2017:13:14:49  by C:\My\wizzi\boot\v.2\node_modules\wizzi-boot\lib\ittf\evaluator.js
$.n(); // set the context state to NodeContext first
var $0 = {}; // the root node of the IttfModel buildup
var $1 = { n: "module", v: "", r: 1, c: 1, s: "f1", u: "f1",  }; //112
$.a($0, $1, 5);
var $2 = { n: "kind", v: "jsfile", r: 2, c: 5, s: "f1", u: "f1",  }; //113
$.a($1, $2, 7);
var $3 = { n: "import", v: "util", r: 4, c: 5, s: "f1", u: "f1",  }; //114
$.a($1, $3, 9);
var $4 = { n: "var", v: "errors = require('./errors')", r: 5, c: 5, s: "f1", u: "f1",  }; //115
$.a($1, $4, 11);
var $5 = { n: "var", v: "f_verify = require('./functions/verify')", r: 6, c: 5, s: "f1", u: "f1",  }; //116
$.a($1, $5, 13);
var $6 = { n: "class", v: "ContextData", r: 8, c: 5, s: "f1", u: "f1",  }; //117
$.a($1, $6, 15);
var $7 = { n: "ctor", v: "", r: 10, c: 9, s: "f1", u: "f1",  }; //118
$.a($6, $7, 17);
var $8 = { n: "param", v: "kind", r: 11, c: 13, s: "f1", u: "f1",  }; //119
$.a($7, $8, 19);
var $9 = { n: "param", v: "modelKey", r: 12, c: 13, s: "f1", u: "f1",  }; //120
$.a($7, $9, 21);
var $10 = { n: "set", v: "this.kind = kind", r: 13, c: 13, s: "f1", u: "f1",  }; //121
$.a($7, $10, 23);
var $11 = { n: "set", v: "this.modelKey = modelKey", r: 14, c: 13, s: "f1", u: "f1",  }; //122
$.a($7, $11, 25);
var $12 = { n: "set", v: "this.$freezed = false", r: 15, c: 13, s: "f1", u: "f1",  }; //123
$.a($7, $12, 27);
var $13 = { n: "_", v: "this.clear", r: 16, c: 13, s: "f1", u: "f1",  }; //124
$.a($7, $13, 29);
var $14 = { n: "m", v: "clear", r: 18, c: 9, s: "f1", u: "f1",  }; //125
$.a($6, $14, 31);
var $15 = { n: "set", v: "this.$freezed = false", r: 19, c: 13, s: "f1", u: "f1",  }; //126
$.a($14, $15, 33);
var $16 = { n: "set", v: "this.functions =", r: 20, c: 13, s: "f1", u: "f1",  }; //127
$.a($14, $16, 35);
var $17 = { n: "{", v: "", r: 21, c: 17, s: "f1", u: "f1",  }; //128
$.a($16, $17, 37);
var $18 = { n: "set", v: "this.values =", r: 22, c: 13, s: "f1", u: "f1",  }; //129
$.a($14, $18, 39);
var $19 = { n: "{", v: "", r: 23, c: 17, s: "f1", u: "f1",  }; //130
$.a($18, $19, 41);
var $20 = { n: "set", v: "this.declares =", r: 24, c: 13, s: "f1", u: "f1",  }; //131
$.a($14, $20, 43);
var $21 = { n: "{", v: "", r: 25, c: 17, s: "f1", u: "f1",  }; //132
$.a($20, $21, 45);
var $22 = { n: "m", v: "$freeze", r: 27, c: 9, s: "f1", u: "f1",  }; //133
$.a($6, $22, 47);
var $23 = { n: "set", v: "this.$freezed = true", r: 28, c: 13, s: "f1", u: "f1",  }; //134
$.a($22, $23, 49);
var $24 = { n: "m", v: "declare", r: 30, c: 9, s: "f1", u: "f1",  }; //135
$.a($6, $24, 51);
var $25 = { n: "param", v: "name", r: 31, c: 13, s: "f1", u: "f1",  }; //136
$.a($24, $25, 53);
var $26 = { n: "param", v: "init", r: 32, c: 13, s: "f1", u: "f1",  }; //137
$.a($24, $26, 55);
var $27 = { n: "if", v: "name == '$' && this.$freezed", r: 33, c: 13, s: "f1", u: "f1",  }; //138
$.a($24, $27, 57);
var $28 = { n: "throw", v: "new errors.InvalidVariableNameError('The variable \"$\" cannot be declared on the global context after it has been freezed.')", r: 34, c: 17, s: "f1", u: "f1",  }; //139
$.a($27, $28, 59);
var $29 = { n: "set", v: "this.declares[name] = true", r: 35, c: 13, s: "f1", u: "f1",  }; //140
$.a($24, $29, 61);
var $30 = { n: "if", v: "typeof (init) !== 'undefined'", r: 36, c: 13, s: "f1", u: "f1",  }; //141
$.a($24, $30, 63);
var $31 = { n: "set", v: "this.values[name] = init", r: 37, c: 17, s: "f1", u: "f1",  }; //142
$.a($30, $31, 65);
var $32 = { n: "#", v: "TODO debug only", r: 39, c: 13, s: "f1", u: "f1",  }; //143
$.a($24, $32, 67);
var $33 = { n: "if", v: "f_verify.isObject(init) == false", r: 40, c: 13, s: "f1", u: "f1",  }; //144
$.a($24, $33, 69);
var $34 = { n: "#", v: "log 'ContextData declare', name, init, 'kind', this.kind, this.modelKey", r: 41, c: 17, s: "f1", u: "f1",  }; //145
$.a($33, $34, 71);
var $35 = { n: "m", v: "undeclare", r: 43, c: 9, s: "f1", u: "f1",  }; //146
$.a($6, $35, 73);
var $36 = { n: "param", v: "name", r: 44, c: 13, s: "f1", u: "f1",  }; //147
$.a($35, $36, 75);
var $37 = { n: "if", v: "this.declares[name] == true", r: 45, c: 13, s: "f1", u: "f1",  }; //148
$.a($35, $37, 77);
var $38 = { n: "delete", v: "this.declares[name]", r: 46, c: 17, s: "f1", u: "f1",  }; //149
$.a($37, $38, 79);
var $39 = { n: "if", v: "this.values[name] == true", r: 47, c: 13, s: "f1", u: "f1",  }; //150
$.a($35, $39, 81);
var $40 = { n: "delete", v: "this.values[name]", r: 48, c: 17, s: "f1", u: "f1",  }; //151
$.a($39, $40, 83);
var $41 = { n: "m", v: "isDeclared", r: 50, c: 9, s: "f1", u: "f1",  }; //152
$.a($6, $41, 85);
var $42 = { n: "param", v: "name", r: 51, c: 13, s: "f1", u: "f1",  }; //153
$.a($41, $42, 87);
var $43 = { n: "#", v: "log 'isDeclared', name, this.declares[name]", r: 52, c: 13, s: "f1", u: "f1",  }; //154
$.a($41, $43, 89);
var $44 = { n: "return", v: "this.declares[name] == true", r: 53, c: 13, s: "f1", u: "f1",  }; //155
$.a($41, $44, 91);
var $45 = { n: "m", v: "setValue", r: 55, c: 9, s: "f1", u: "f1",  }; //156
$.a($6, $45, 93);
var $46 = { n: "param", v: "name", r: 56, c: 13, s: "f1", u: "f1",  }; //157
$.a($45, $46, 95);
var $47 = { n: "param", v: "value", r: 57, c: 13, s: "f1", u: "f1",  }; //158
$.a($45, $47, 97);
var $48 = { n: "if", v: "name == '$' && this.$freezed", r: 58, c: 13, s: "f1", u: "f1",  }; //159
$.a($45, $48, 99);
var $49 = { n: "throw", v: "new errors.InvalidVariableNameError('The variable \"$\" cannot be set on the global context after it has been freezed.')", r: 59, c: 17, s: "f1", u: "f1",  }; //160
$.a($48, $49, 101);
var $50 = { n: "_", v: "this.declare(name, value)", r: 60, c: 13, s: "f1", u: "f1",  }; //161
$.a($45, $50, 103);
var $51 = { n: "#", v: "TODO debug only", r: 62, c: 13, s: "f1", u: "f1",  }; //162
$.a($45, $51, 105);
var $52 = { n: "if", v: "f_verify.isObject(value) == false", r: 63, c: 13, s: "f1", u: "f1",  }; //163
$.a($45, $52, 107);
var $53 = { n: "#", v: "log 'ContextData setValue', name, value, 'kind', this.kind, this.modelKey", r: 64, c: 17, s: "f1", u: "f1",  }; //164
$.a($52, $53, 109);
var $54 = { n: "m", v: "setValues", r: 66, c: 9, s: "f1", u: "f1",  }; //165
$.a($6, $54, 111);
var $55 = { n: "param", v: "values", r: 67, c: 13, s: "f1", u: "f1",  }; //166
$.a($54, $55, 113);
var $56 = { n: "set", v: "values = (values || {})", r: 68, c: 13, s: "f1", u: "f1",  }; //167
$.a($54, $56, 115);
var $57 = { n: "for", v: "var k in values", r: 69, c: 13, s: "f1", u: "f1",  }; //168
$.a($54, $57, 117);
var $58 = { n: "_", v: "this.declare", r: 70, c: 17, s: "f1", u: "f1",  }; //169
$.a($57, $58, 119);
var $59 = { n: "@", v: "k", r: 71, c: 21, s: "f1", u: "f1",  }; //170
$.a($58, $59, 121);
var $60 = { n: "@", v: "values[k]", r: 72, c: 21, s: "f1", u: "f1",  }; //171
$.a($58, $60, 123);
var $61 = { n: "#", v: "Set value only if name is declared", r: 74, c: 9, s: "f1", u: "f1",  }; //172
$.a($6, $61, 125);
var $62 = { n: "m", v: "put", r: 75, c: 9, s: "f1", u: "f1",  }; //173
$.a($6, $62, 127);
var $63 = { n: "param", v: "name", r: 76, c: 13, s: "f1", u: "f1",  }; //174
$.a($62, $63, 129);
var $64 = { n: "param", v: "value", r: 77, c: 13, s: "f1", u: "f1",  }; //175
$.a($62, $64, 131);
var $65 = { n: "if", v: "this.declares[name] === true", r: 78, c: 13, s: "f1", u: "f1",  }; //176
$.a($62, $65, 133);
var $66 = { n: "set", v: "this.values[name] = value", r: 79, c: 17, s: "f1", u: "f1",  }; //177
$.a($65, $66, 135);
var $67 = { n: "return", v: "true", r: 80, c: 17, s: "f1", u: "f1",  }; //178
$.a($65, $67, 137);
var $68 = { n: "else", v: "", r: 81, c: 13, s: "f1", u: "f1",  }; //179
$.a($62, $68, 139);
var $69 = { n: "return", v: "false", r: 82, c: 17, s: "f1", u: "f1",  }; //180
$.a($68, $69, 141);
var $70 = { n: "m", v: "getValue", r: 84, c: 9, s: "f1", u: "f1",  }; //181
$.a($6, $70, 143);
var $71 = { n: "param", v: "name", r: 85, c: 13, s: "f1", u: "f1",  }; //182
$.a($70, $71, 145);
var $72 = { n: "if", v: "this.declares[name] === true", r: 86, c: 13, s: "f1", u: "f1",  }; //183
$.a($70, $72, 147);
var $73 = { n: "#", v: "log 'ContextData getValue found for', name, this.kind, this.modelKey", r: 87, c: 17, s: "f1", u: "f1",  }; //184
$.a($72, $73, 149);
var $74 = { n: "return", v: "this.values[name]", r: 88, c: 17, s: "f1", u: "f1",  }; //185
$.a($72, $74, 151);
var $75 = { n: "else", v: "", r: 89, c: 13, s: "f1", u: "f1",  }; //186
$.a($70, $75, 153);
var $76 = { n: "#", v: "log 'ContextData getValue not found for', name, this.kind, this.modelKey", r: 90, c: 17, s: "f1", u: "f1",  }; //187
$.a($75, $76, 155);
var $77 = { n: "return", v: "undefined", r: 91, c: 17, s: "f1", u: "f1",  }; //188
$.a($75, $77, 157);
var $78 = { n: "m", v: "getValues", r: 93, c: 9, s: "f1", u: "f1",  }; //189
$.a($6, $78, 159);
var $79 = { n: "return", v: "this.values", r: 94, c: 17, s: "f1", u: "f1",  }; //190
$.a($78, $79, 161);
var $80 = { n: "m", v: "getSettableValues", r: 96, c: 9, s: "f1", u: "f1",  }; //191
$.a($6, $80, 163);
var $81 = { n: "var", v: "ret = {}", r: 97, c: 13, s: "f1", u: "f1",  }; //192
$.a($80, $81, 165);
var $82 = { n: "for", v: "var k in this.values", r: 98, c: 13, s: "f1", u: "f1",  }; //193
$.a($80, $82, 167);
var $83 = { n: "if", v: "k != '$'", r: 99, c: 17, s: "f1", u: "f1",  }; //194
$.a($82, $83, 169);
var $84 = { n: "set", v: "ret[k] = this.values[k]", r: 100, c: 21, s: "f1", u: "f1",  }; //195
$.a($83, $84, 171);
var $85 = { n: "return", v: "ret", r: 101, c: 13, s: "f1", u: "f1",  }; //196
$.a($80, $85, 173);
var $86 = { n: "m", v: "declareFunction", r: 103, c: 9, s: "f1", u: "f1",  }; //197
$.a($6, $86, 175);
var $87 = { n: "param", v: "name", r: 104, c: 13, s: "f1", u: "f1",  }; //198
$.a($86, $87, 177);
var $88 = { n: "param", v: "fn", r: 105, c: 13, s: "f1", u: "f1",  }; //199
$.a($86, $88, 179);
var $89 = { n: "set", v: "this.functions[name] = fn", r: 106, c: 13, s: "f1", u: "f1",  }; //200
$.a($86, $89, 181);
var $90 = { n: "m", v: "getFunction", r: 108, c: 9, s: "f1", u: "f1",  }; //201
$.a($6, $90, 183);
var $91 = { n: "param", v: "name", r: 109, c: 13, s: "f1", u: "f1",  }; //202
$.a($90, $91, 185);
var $92 = { n: "return", v: "this.functions[name]", r: 110, c: 13, s: "f1", u: "f1",  }; //203
$.a($90, $92, 187);
var $93 = { n: "m", v: "dumpValues", r: 112, c: 9, s: "f1", u: "f1",  }; //204
$.a($6, $93, 189);
var $94 = { n: "log", v: "'Dump context value for debug', this.kind", r: 113, c: 13, s: "f1", u: "f1",  }; //205
$.a($93, $94, 191);
var $95 = { n: "for", v: "var k in this.declares", r: 114, c: 13, s: "f1", u: "f1",  }; //206
$.a($93, $95, 193);
var $96 = { n: "if", v: "f_verify.isObject(this.values[k]) == false", r: 115, c: 17, s: "f1", u: "f1",  }; //207
$.a($95, $96, 195);
var $97 = { n: "log", v: "k, this.values[k]", r: 116, c: 21, s: "f1", u: "f1",  }; //208
$.a($96, $97, 197);
var $98 = { n: "m", v: "getDeclareddumpValues", r: 118, c: 9, s: "f1", u: "f1",  }; //209
$.a($6, $98, 199);
var $99 = { n: "log", v: "'Dump context value for debug', this.kind", r: 119, c: 13, s: "f1", u: "f1",  }; //210
$.a($98, $99, 201);
var $100 = { n: "for", v: "var k in this.declares", r: 120, c: 13, s: "f1", u: "f1",  }; //211
$.a($98, $100, 203);
var $101 = { n: "if", v: "f_verify.isObject(this.values[k]) == false", r: 121, c: 17, s: "f1", u: "f1",  }; //212
$.a($100, $101, 205);
var $102 = { n: "log", v: "k, this.values[k]", r: 122, c: 21, s: "f1", u: "f1",  }; //213
$.a($101, $102, 207);
var $103 = { n: "m", v: "getDeclaredInfo", r: 124, c: 9, s: "f1", u: "f1",  }; //214
$.a($6, $103, 209);
var $104 = { n: "var", v: "ret = []", r: 125, c: 13, s: "f1", u: "f1",  }; //215
$.a($103, $104, 211);
var $105 = { n: "for", v: "var k in this.declares", r: 126, c: 13, s: "f1", u: "f1",  }; //216
$.a($103, $105, 213);
var $106 = { n: "if", v: "f_verify.isObject(this.values[k]) == false", r: 127, c: 17, s: "f1", u: "f1",  }; //217
$.a($105, $106, 215);
var $107 = { n: "_", v: "ret.push(k + '=' + this.values[k])", r: 128, c: 21, s: "f1", u: "f1",  }; //218
$.a($106, $107, 217);
var $108 = { n: "else", v: "", r: 129, c: 17, s: "f1", u: "f1",  }; //219
$.a($105, $108, 219);
var $109 = { n: "_", v: "ret.push(k + '= [object]')", r: 130, c: 21, s: "f1", u: "f1",  }; //220
$.a($108, $109, 221);
var $110 = { n: "return", v: "ret.join(', ')", r: 131, c: 13, s: "f1", u: "f1",  }; //221
$.a($103, $110, 223);
var $111 = { n: "set", v: "module.exports = ContextData", r: 133, c: 5, s: "f1", u: "f1",  }; //222
$.a($1, $111, 225);