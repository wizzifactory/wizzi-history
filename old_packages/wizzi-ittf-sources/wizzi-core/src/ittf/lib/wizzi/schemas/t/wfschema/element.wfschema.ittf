$group

	e element : schemaitem
		# A schema element. A classifier model element that may have attributes and relations.
		
		tag e
		
		a super
			# The base (super) element from which this element derives.
			# Attributes and relations of the base element are inherited.
		
		a_tag_flag( isAbstract, is-abstract )
			# This element is abstract and cannot be declared in Ittf documents. 
		
		a_tag_flag( isRoot, is-root )
			# Mark the element as the root element of the schema. 
			# If not explicit, the root element is inferred,
			# and the first element declared in the schema is assumed as the root.

		a tagInternal
			tag tag
			# The tag used to declare this element in Ittf documents. 
			# Optional. The default is the element IttfNodeValue
		
		a xmlTagInternal
			tag xml-tag
			# The Xml tag used for this element when persisted in Xml Format.

		a_tag( tagType, tag-type )
			# Any node tag of this type will match this element
			restrict
				enum number
				enum css-length
		
		a acceptAnyTag
			tag any
			# This element can have any text as a child element. 
			# The IttfNodeValue of this attribute must be the name of the element collection 
			# to which child text nodes will be appended.
			# Any child node produces an internal ANY element that is appended to this collection.
			# TODO example
		
		a_tag_flag( nameIsRequired, name-is-required )
			# This element must have a not empty IttfNodeValue
		
		a_tag_flag( addToChildren, add-to-children )
			# Every child node of this element will be added to the wzChildren collection.
			# Artifact generators will use the wzElement attribute to distinguish child elements.
		
		a_tag_flag( suppressCollectionEmit, suppress-collection-emit )
			# TODO ???
		
		r attribute/s
		r relation/s
		r restrict/s
		r method/s
		r include/s