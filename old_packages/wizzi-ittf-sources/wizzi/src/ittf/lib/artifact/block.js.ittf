module 
    kind jsfile
    
	var line = require('./line')
    
	class Block
        ctor
            param options
            set this.lines = []
            set this.options = (options || {})
            set this.indentValue = (this.options.indent || 0)
            set this.currentline = null
    
		m forceIndent
            param value
            var save = this.indentValue
            set this.indentValue = value
            return save
    
		m indent
            param value
            set this.indentValue += typeof (value) !== 'undefined' ? value : 1
    
		m deindent
            param value
            set this.indentValue -= typeof (value) !== 'undefined' ? value : 1
            set this.indentValue = Math.max(0, this.indentValue)
    
		m w
            param text
            if this.currentline != null
                _ this.currentline.add(text)
                _ this.lines.push
                    @ this.currentline
                set this.currentline = null
            else 
                _ this.lines.push
                    new line
                        @ text
                        @ this.indentValue
                        @ this.options
    
		m write
            param text
            if this.currentline != null
                _ this.currentline.add(text)
            else 
                set this.currentline = new line(text, this.indentValue, this.options)
    
		m appendFile
            param filePath
            
			if this.currentline != null
                _ this.currentline.addFile(filePath)
                _ this.lines.push
                    @ this.currentline
                set this.currentline = null
            else 
                _ this.lines.push
                    new line
                        @ filePath
                        @ this.indentValue
                        @ this.options
                        @ true
    
		m toStream
            param stream
            param ctx
            foreach item in this.lines
                _ item.toStream(stream, ctx)
            if this.currentline != null
                _ this.currentline.toStream(stream, ctx)
    
		m terminate
            set delete (this.options)
            set delete (this.currentline)
            foreach item in this.lines
				_ item.terminate()
    
		m hydrate
            param lines
            param options
            set this.currentline = null
            set this.lines = []
            var l
            foreach item in lines
                set l = new line('', 0, options)
                _ l.hydrate(item)
                _ this.lines.push(l)
    
	set module.exports = Block
