$group

	set md.parseNameValue
        function 
            param text
            param node
            if !verify.isString(text)
                return 
                    { 
                        @ tokens
                            [ 
                        @ join
                            function 
                                return ''
            var 
                decl ch
                decl l = text.length
                decl tokens
                    [ 
                decl token
                    { 
                        @ quote null
                        @ text ''
                        @ raw ''
            
			for var i = 0; i < l; i++
                set ch = text[i]
                
				if token.quote != null
                    if ch == token.quote
                        _ tokens.push(token)
                        set token =
                            { 
                                @ quote null
                                @ text ''
                                @ raw ''
                    else 
                        set token.text += ch
                        set token.raw += ch
                
				elif ch == '"' || ch == '\''
                    if token.text.length > 0
                        _ errors.NodeError("Invalid use of quote inside text", node)
                    set token.quote = ch
                
				elif ch == ' ' || ch == '\t'
                    if token.text.length > 0
                        set token.raw += ch
                        _ tokens.push(token)
                        set token =
                            { 
                                @ quote null
                                @ text ''
                                @ raw ''
                else 
                    set token.text += ch
                    set token.raw += ch
            
			if token.text.length > 0
                _ tokens.push(token)
                set token
                    { 
                        @ quote null
                        @ text ''
                        @ raw ''
            return 
                { 
                    @ tokens tokens
                    @ length tokens.length
                    @ join
                        function 
                            param sep
                            param start
                            var 
                                decl t
                                    [ 
                                decl startIndex = (start || 0)
                            for var i = startIndex; i < this.tokens.length; i++
                                _ t.push((this.tokens[i].text + ' '))
                            return 
                                _ t.join(sep)
                                    ._ trim()
                    @ name
                        function 
                            return 
                                iif this.length > 0
                                    then 
                                        set this.tokens[0].text
                                    else null
                    @ value
                        function 
                            return this.join('', 1)
                    @ hasValue
                        function 
                            return this.length > 1
    
