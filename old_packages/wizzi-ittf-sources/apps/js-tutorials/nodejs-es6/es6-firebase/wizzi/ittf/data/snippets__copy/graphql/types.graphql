type Tweet {
    id: ID ! # The tweet text. No more than 140 characters! body: String # When the tweet was published date: Date # Who published the tweet Author: User # Views, retweets, likes, etc Stats: Stat
}

type User {
    id: ID ! username: String first_name: String last_name: String full_name: String name: String @deprecated avatar_url: Url
}

type Stat {
    views: Int likes: Int retweets: Int responses: Int
}

type Notification {
    id: ID date: Date type: String
}

type Meta {
    count: Int
}

extend type Story {
  isHiddenLocally: Boolean
}

interface NamedEntity {
  name: String
}

interface ValuedEntity {
  value: Int
}

extend interface NamedEntity {
  nickname: String
}

type Person implements NamedEntity {
  name: String
  age: Int
}

type Business implements NamedEntity & ValuedEntity {
  name: String
  value: Int
  employeeCount: Int
}

scalar Url scalar Date type Query {
    Tweet(id: ID!): Tweet Tweets(limit: Int, skip: Int, sort_field: String, sort_order: String): [Tweet]
    TweetsMeta: Meta
    User(id: ID!): User
    Notifications(limit: Int): [Notification]
    NotificationsMeta: Meta
}

enum Episode {
  NEWHOPE
  EMPIRE
  JEDI
}

