module
	kind es6

	import path from 'path'
	import wizziUtils from 'wizzi-utils'

	# const EXAMPLES_PATH = 'ittf/default/default'
	const EXAMPLES_COLL_PATH = 'sample'

	class PathNames

		m examplesCollPath
			return EXAMPLES_COLL_PATH

		m fragmentDocName
			param schemaName
			return schemaName + '.fragments'

		m fragmentsPath
			param schemaName
			return EXAMPLES_COLL_PATH + '/' + this.fragmentDocName(schemaName)
	
		m exampleRelPath
			param name
			param schemaName
			var relPath
				_ this.stripExampleExtensions
					@ name
					@ schemaName
			set relPath = encodeDocName(relPath)
			set relPath += '-' + schemaName
			return relPath

		m examplePath
			param name
			param schemaName
			return EXAMPLES_COLL_PATH + '/' + this.exampleRelPath(name, schemaName)

		m stripExampleExtensions
			param basename
			param schemaName
			set basename = normalizeFile(basename)
			const suffix = '.' + schemaName + '.ittf'
			if basename.substr(-suffix.length) === suffix
				return basename.substr(0, basename.length - suffix.length)
			else
				return null

	export
		function normalizeFile
			param filePath
			const basename = path.basename(filePath)
			if basename === filePath
				return basename
			const dirname = path.dirname(filePath)
			return wizziUtils.verify.replaceAll(dirname, '\\', '/').toLowerCase() +
				\b '/' + basename

	export
		function normalizeFolder
			param folderPath
			return wizziUtils.verify.replaceAll(folderPath, '\\', '/').toLowerCase() 

	export 
		function encodeDocName
			param name
			return wizziUtils.verify.replaceAll(name, '/', '[.]')

	export
		function decodeDocName
			param name
			return wizziUtils.verify.replaceAll(name, '[.]', '/')

	export default PathNames