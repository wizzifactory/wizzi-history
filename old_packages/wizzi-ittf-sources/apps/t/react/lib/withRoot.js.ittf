$group
	$params &app
	
	import React from 'react'
	import PropTypes from 'prop-types'
	import { MuiThemeProvider } from '@material-ui/core/styles'

	$if app.useCssBaseline
		import CssBaseline from '@material-ui/core/CssBaseline'
	
	import getPageContext from './getPageContext'

	$if app.useRedux
		import { Provider } from 'react-redux'
		import configureStore from '../store/configureStore'

	function withRoot
		param Component

		react WithRoot
			ctor
				set this.pageContext = this.props.pageContext || getPageContext()
				$if app.useRedux
					set this.redux = configureStore();

			did-mount
				# Remove the server-side injected CSS.
				const jssStyles = document.querySelector('#jss-server-side');
				if jssStyles && jssStyles.parentNode
					_ jssStyles.parentNode.removeChild(jssStyles)

			property pageContext = null

			render
				# MuiThemeProvider makes the theme available down the React tree thanks to React context.
				return
					$if app.useRedux
						< Provider
							@ store {this.redux}
							< MuiThemeProvider
								@ theme {this.pageContext.theme}
								@ sheetsManager {this.pageContext.sheetsManager}
								$if app.useCssBaseline
									< CssBaseline
								< Component
									@ {...this.props}
					$else
						< MuiThemeProvider
							@ theme {this.pageContext.theme}
							@ sheetsManager {this.pageContext.sheetsManager}
							$if app.useCssBaseline
								< CssBaseline
							< Component
								@ {...this.props}

			prop pageContext
				{

		set WithRoot.getInitialProps
			=>
				param ctx
				if Component.getInitialProps
					return Component.getInitialProps(ctx)
				return {}
		
		return WithRoot

	export default withRoot