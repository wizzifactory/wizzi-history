$group
	$params &app
	+
	$if app.useReduxThunk ||
		\b app.useApiMiddleware ||
		\b app.useThunkWithExtraArgument
		import { createStore, applyMiddleware } from 'redux'
		$if app.useReduxThunk
			import thunk from 'redux-thunk'
		$if app.useApiMiddleware
			import api from '../middleware/api'
		$if app.useThunkWithExtraArgument
			# in the api middleware we can store global objects
			# that give problems when stored in the redux state
			# see https://stackoverflow.com/questions/37221872/storing-global-object-outside-of-redux-store-in-react-redux-app
			# and https://github.com/reduxjs/redux-thunk
			import extraArguments from '../middleware/extraArguments'
	$else
		import { createStore } from 'redux'

	import rootReducer from './reducers'
	+
	const configureStore
		=>
			param preloadedState
			_ createStore
				@ rootReducer
				@ preloadedState
				$if app.useReduxThunk || app.useApiMiddleware || app.useThunkWithExtraArgument
					_ applyMiddleware
						$if app.useReduxThunk
							@ thunk
						$if app.useApiMiddleware
							@ api
						$if app.useThunkWithExtraArgument
							_ thunk.withExtraArgument
								@ extraArguments
	+
	export default configureStore

