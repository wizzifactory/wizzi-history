$group

	# Value definition syntax

	cat keyword

	cat component-value-combinator

	cat component-value-multiplier
		# A multiplier is a sign that indicate how many times a preceding entity can be repeated. 
		# Without a multiplier, an entity must appear exactly one time.
		# Note that multipliers cannot be added and have all precedence over combinators.

	e brackets
		# Brackets enclose several entities, combinators, and multipliers, then transform them as a single component. 
		# They are used to group components to bypass the precedence rules.
		# Example: bold [ thin && <length> ]
		tag [ , ]
		cat component-value-combinator

	e juxtaposition
		# Placing several keywords, literals or data types, next to one another, 
		# only separated by one or several spaces, is called juxtaposition. 
		# All juxtaposed components are mandatory and should appear in the exact order.
		# Example: bold <length> , thin
		#  ( the comma is simply a literal not a separator )
		tag blank
		cat component-value-combinator

	e double-ampersand
		# Separating two or more components, by a double ampersand, &&, means that 
		# all these entities are mandatory but may appear in any order.
		# Example: bold && <length>
		tag &&
		cat component-value-combinator

	e double-bar
		# Separating two or more components by a double bar, ||, means that 
		# all entities are options: at least one of them must be present, 
		# and they may appear in any order. Typically this is used to define 
		# the different values of a shorthand property.
		# Example: <'border-width'> || <'border-style'> || <'border-color'>
		tag ||
		cat component-value-combinator

	e single-bar
		# Separating two or more entities by a single bar, |, means that all entities 
		# are exclusive options: exactly one of these options must be present. 
		# This is typically used to separate a list of possible keywords.
		# Example: <percentage> | <length> | left | center | right | top | bottom
		tag |
		cat component-value-combinator

	e asterisk
		# The asterisk multiplier indicates that the entity may appear zero, one or several times.
		tag *
		cat component-value-multiplier

	e plus
		# The plus multiplier indicates that the entity may appear one or several times.
		tag +
		cat component-value-multiplier
	
	e question-mark
		# The question mark multiplier indicates that the entity is optional, and must appear zero or one time.
		tag ?
		cat component-value-multiplier

	e curly-braces
		# The curly braces multiplier, enclosing two integers separated by a comma, A and B, 
		# indicates that the entity must appear at least A times and at most B times.
		# Example: bold smaller{1,3}
		tag { }
		cat component-value-multiplier
	
	e hash-mark
		# The hash mark multiplier indicates that the entity may be repeated one or more times 
		# (for example, the plus multiplier), but each occurrence is separated by a comma (',').
		# Example: bold smaller#
		tag #

	e exclamation-point
		# The exclamation point multiplier after a group indicates that the group is required, 
		# and must produce at least one value; even if the grammar of the items within the group 
		# would otherwise allow the entire contents to be omitted, 
		# at least one component value must not be omitted.
		tag !
		cat component-value-multiplier
