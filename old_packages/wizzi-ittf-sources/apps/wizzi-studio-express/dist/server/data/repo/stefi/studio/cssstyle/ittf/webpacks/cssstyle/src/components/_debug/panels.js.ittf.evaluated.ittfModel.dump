  module  ids: undefined undefined
    kind react ids: undefined undefined
    +  ids: undefined undefined
    import React, { Component, PropTypes } from 'react' ids: undefined undefined
    import ReactDOM from 'react-dom' ids: undefined undefined
    import PropTypes from 'prop-types' ids: undefined undefined
    import Prefixer from 'inline-style-prefixer' ids: undefined undefined
    import stylePropType from 'react-style-proptype' ids: undefined undefined
    var USER_AGENT = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Safari/537.2' ids: undefined undefined
    var USER_AGENT = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Safari/537.2' ids: undefined undefined
    wz-class Pane ids: undefined undefined
      super React.Component ids: undefined undefined
      ctor  ids: undefined undefined
        param props ids: undefined undefined
        base props ids: undefined undefined
        set this.state = ids: undefined undefined
          {  ids: undefined undefined
            @ size this.props.size ids: undefined undefined
      m render ids: undefined undefined
        var {children, className, prefixer, split, style: styleProps} = this.props ids: undefined undefined
        var {size} = this.state ids: undefined undefined
        var classes ids: undefined undefined
          [  ids: undefined undefined
            @ 'Pane' ids: undefined undefined
            @ split ids: undefined undefined
            @ className ids: undefined undefined
        var style ids: undefined undefined
          _ Object.assign ids: undefined undefined
            {  ids: undefined undefined
            @ (styleProps || {}) ids: undefined undefined
            {  ids: undefined undefined
              @ flex 1 ids: undefined undefined
              @ position 'relative' ids: undefined undefined
              @ outline 'none' ids: undefined undefined
        if size !== undefined ids: undefined undefined
          if split === 'vertical' ids: undefined undefined
            set style.width = size ids: undefined undefined
          else  ids: undefined undefined
            set style.height = size ids: undefined undefined
            set style.display = 'flex' ids: undefined undefined
          set style.flex = 'none' ids: undefined undefined
        return  ids: undefined undefined
          div  ids: undefined undefined
            class {classes.join(' ')} ids: undefined undefined
            @style {prefixer.prefix(style)} ids: undefined undefined
            + {children} ids: undefined undefined
    set Pane.propTypes = ids: undefined undefined
      {  ids: undefined undefined
        @ className PropTypes.string.isRequired ids: undefined undefined
        @ children PropTypes.node.isRequired ids: undefined undefined
        @ prefixer ids: undefined undefined
          _ PropTypes.instanceOf(Prefixer) ids: undefined undefined
            . isRequired ids: undefined undefined
        @ size ids: undefined undefined
          _ PropTypes.oneOfType ids: undefined undefined
            [  ids: undefined undefined
              @ PropTypes.string ids: undefined undefined
              @ PropTypes.number ids: undefined undefined
        @ split ids: undefined undefined
          _ PropTypes.oneOf ids: undefined undefined
            [  ids: undefined undefined
              @ 'vertical' ids: undefined undefined
              @ 'horizontal' ids: undefined undefined
        @ style stylePropType ids: undefined undefined
    set Pane.defaultProps ids: undefined undefined
      {  ids: undefined undefined
        @ prefixer ids: undefined undefined
          new Prefixer ids: undefined undefined
            {  ids: undefined undefined
              @ userAgent USER_AGENT ids: undefined undefined
    wz-class Tabs ids: undefined undefined
      super Component ids: undefined undefined
      ctor  ids: undefined undefined
        param props ids: undefined undefined
        base props ids: undefined undefined
        set this.state ids: undefined undefined
          {  ids: undefined undefined
            @ tabActive props.tabActive ids: undefined undefined
      m componentDidMount ids: undefined undefined
        var index = this.state.tabActive ids: undefined undefined
        var $selectedPanel = this.refs['tab-panel'] ids: undefined undefined
        var $selectedTabMenu = this.refs['tab-menu-' + index] ids: undefined undefined
        if this.props.onMount ids: undefined undefined
          _ this.props.onMount(index, $selectedPanel, $selectedTabMenu) ids: undefined undefined
      m componentWillReceiveProps ids: undefined undefined
        param newProps ids: undefined undefined
        if newProps.tabActive && newProps.tabActive !== this.props.tabActive ids: undefined undefined
          _ this.setState ids: undefined undefined
            {  ids: undefined undefined
              @ tabActive newProps.tabActive ids: undefined undefined
      m setActive ids: undefined undefined
        param index ids: undefined undefined
        param e ids: undefined undefined
        _ e.preventDefault() ids: undefined undefined
        var onAfterChange = this.props.onAfterChange; ids: undefined undefined
        var onBeforeChange = this.props.onBeforeChange; ids: undefined undefined
        var $selectedPanel = this.refs['tab-panel']; ids: undefined undefined
        var $selectedTabMenu = this.refs['tab-menu-' + index'] ids: undefined undefined
        if onBeforeChange ids: undefined undefined
          var cancel = onBeforeChange(index, $selectedPanel, $selectedTabMenu) ids: undefined undefined
          if cancel === false ids: undefined undefined
            return  ids: undefined undefined
          _ this.setState ids: undefined undefined
            {  ids: undefined undefined
              @ tabActive index ids: undefined undefined
            =>  ids: undefined undefined
              if onAfterChange ids: undefined undefined
                _ onAfterChange(index, $selectedPanel, $selectedTabMenu) ids: undefined undefined
      m _getMenuItems ids: undefined undefined
        if !this.props.children ids: undefined undefined
          throw new Error('Tabs must contain at least one TabPanel ids: undefined undefined
        if !Array.isArray(this.props.children) ids: undefined undefined
          set this.props.children = [this.props.children] ids: undefined undefined
        var $menuItems ids: undefined undefined
          _ this.props.children.map ids: undefined undefined
            =>  ids: undefined undefined
              param $panel ids: undefined undefined
              return typeof $panel === 'function' ? $panel() : $panel ids: undefined undefined
            . filter ids: undefined undefined
              =>  ids: undefined undefined
                param $panel ids: undefined undefined
                return $panel ids: undefined undefined
            . map ids: undefined undefined
              =>  ids: undefined undefined
                param $panel ids: undefined undefined
                param index ids: undefined undefined
                var title = $panel.props.title ids: undefined undefined
                return  ids: undefined undefined
                  < TabItem ids: undefined undefined
                    @ index {index} ids: undefined undefined
                    @ title {title} ids: undefined undefined
                    @ isActive {isActive} ids: undefined undefined
                    onClick  ids: undefined undefined
                      =>  ids: undefined undefined
                        _ this.setActive.bind(this, index + 1) ids: undefined undefined
        return  ids: undefined undefined
          nav  ids: undefined undefined
            class tabs-navigation ids: undefined undefined
            ul  ids: undefined undefined
              class tabs-menu ids: undefined undefined
              + {$menuItems} ids: undefined undefined
      m _getSelectedPanel ids: undefined undefined
        var index = this.state.tabActive - 1 ids: undefined undefined
        var $panel = this.props.children[index] ids: undefined undefined
        return  ids: undefined undefined
          article  ids: undefined undefined
            @ ref tab-panel ids: undefined undefined
            class tab-panel ids: undefined undefined
            + {$panel} ids: undefined undefined
      m render ids: undefined undefined
        var className = classNames('tabs', this.props.className) ids: undefined undefined
        return  ids: undefined undefined
          div  ids: undefined undefined
            class {className} ids: undefined undefined
            + {this._getMenuItems()} ids: undefined undefined
            + {this._getSelectedPanel()} ids: undefined undefined
      m get_div_Style ids: undefined undefined
        return  ids: undefined undefined
          {  ids: undefined undefined
            @ float 'left' ids: undefined undefined
            @ marginRight 20 ids: undefined undefined
    set Tabs.propTypes ids: undefined undefined
      {  ids: undefined undefined
        @ tabActive React.PropTypes.number ids: undefined undefined
        @ onMount React.PropTypes.func ids: undefined undefined
        @ onBeforeChange React.PropTypes.func ids: undefined undefined
        @ onAfterChange React.PropTypes.func ids: undefined undefined
        @ children ids: undefined undefined
          _ React.PropTypes.oneOfType ids: undefined undefined
            [  ids: undefined undefined
              @ React.PropTypes.array ids: undefined undefined
              @ React.PropTypes.element ids: undefined undefined
            . isRequired ids: undefined undefined
    set Tabs.defaultProps ids: undefined undefined
      {  ids: undefined undefined
        @ tabActive 1 ids: undefined undefined
    wz-class TabItem ids: undefined undefined
      super Component ids: undefined undefined
      m render ids: undefined undefined
        const { index, title, isActive, onClick } = this.props ids: undefined undefined
        return  ids: undefined undefined
          return  ids: undefined undefined
            li  ids: undefined undefined
              @ ref { 'tab-menu-' + index } ids: undefined undefined
              @ key {index} ids: undefined undefined
              @style {this.get_li_Style(isActive)} ids: undefined undefined
              a  ids: undefined undefined
                @style {this.get_a_Style(isActive)} ids: undefined undefined
                onClick  ids: undefined undefined
                  =>  ids: undefined undefined
                    _ onClick(index) ids: undefined undefined
                + {title} ids: undefined undefined
      m get_li_Style ids: undefined undefined
        param selected ids: undefined undefined
        return  ids: undefined undefined
          {  ids: undefined undefined
            @ float 'left' ids: undefined undefined
            @ marginRight 20 ids: undefined undefined
      m get_a_Style ids: undefined undefined
        param isActive ids: undefined undefined
        # TODO !isActive :hover == isActive ids: undefined undefined
        return  ids: undefined undefined
          {  ids: undefined undefined
            @ cursor 'pointer' ids: undefined undefined
            @ display 'block' ids: undefined undefined
            @ color ( isActive ? '#3498DB' : '#A9A9A9' ) ids: undefined undefined
    set TabItem.propTypes ids: undefined undefined
      {  ids: undefined undefined
        @ index React.PropTypes.number.isRequired ids: undefined undefined
        @ title React.PropTypes.string.isRequired ids: undefined undefined
        @ onClick React.PropTypes.func.isRequired ids: undefined undefined
    wz-class TabPanel ids: undefined undefined
      super Component ids: undefined undefined
      m render ids: undefined undefined
        return  ids: undefined undefined
          div  ids: undefined undefined
            + {this.props.children} ids: undefined undefined
    set TabPanel.propTypes ids: undefined undefined
      {  ids: undefined undefined