r-component( AppDrawer )

	$append imports
		import List from 'material-ui/List'
		import Toolbar from 'material-ui/Toolbar'
		import Drawer from 'material-ui/Drawer'
		import Typography from 'material-ui/Typography'
		import Divider from 'material-ui/Divider'
		import AppDrawerNavItem from './AppDrawerNavItem'
		import Link from './Link'

		function renderNavItems
			param props
			param navRoot
			
			# log 'renderNavItems.props.navRoot', props, navRoot
			
			let navItems = null
			
			if navRoot.childRoutes && navRoot.childRoutes.length
				# eslint-disable-next-line no-use-before-define
				set navItems
					_ navRoot.childRoutes.reduce
						_ reduceChildRoutes.bind(null, props)
						[
			return
				< List
					+ {navItems}

		function reduceChildRoutes
			param props
			param items
			param childRoute
			param index
			# log 'reduceChildRoutes.childRoute' , childRoute , index, props
			if childRoute.nav
				if childRoute.childRoutes && childRoute.childRoutes.length
					const openImmediately = props.routes.indexOf(childRoute) !== -1 || false
					_ items.push
						< AppDrawerNavItem
							@ key {index}
							@ openImmediately {openImmediately}
							@ title {childRoute.title}
							+ {renderNavItems(props, childRoute)}
				else
					_ items.push
						< AppDrawerNavItem
							@ key {index}
							@ title {childRoute.title}
							@ to {childRoute.path}
							@ onClick {props.onRequestClose}
						
			return items
	
	prop classes
		{
		required
	prop className
		string
	prop docked
		boolean
		required
	prop onRequestClose
		func
		required
	prop open
		boolean
		required
	prop routes
		[
		required
			
	style

		@ paper
			{ 
				@ width 250
				@ backgroundColor theme.palette.background.paper
		@ title
			{ 
				@ color theme.palette.text.secondary
				@ '&:hover'
					{ 
						@ color theme.palette.primary[500]
		@ toolbar
			{ 
				@ flexDirection 'column'
				@ alignItems 'flex-start'
				@ justifyContent 'center'
		@ anchor
			{ 
				@ color theme.palette.text.secondary
	
	render
		
		prop classes
		prop className
		prop open
		prop onRequestClose
		prop docked
		prop routes

		return
			< Drawer
				@ className {className}
				@ classes
					{
						@ paper classes.paper
				@ open {open}
				@ onRequestClose {onRequestClose}
				@ docked {docked}
				div
					@ className {classes.nav}
					< Toolbar
						@ className {classes.toolbar}
						< Link
							@ className {classes.title}
							@ to "/"
							@ onClick {onRequestClose}
							< Typography
								@ type "title"
								@ gutterBottom {true}
								@ color 'inherit'
								+ Wizzi Factory
						< Divider
							@ absolute
					+ {renderNavItems(this.props, routes[0])}

