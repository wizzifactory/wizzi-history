$group

	class WrapperPanel
		super React.Component
		ctor
			set this.state
				{
					@ fixed false

		m componentDidMount
			const { data } = this.props
			const { fixEvent } = data
			if fixEvent
				var that = this
				set this.fixEventHandler
					_ builder.events.subscribe
						@ fixEvent
						function
							log 'WrapperPanel received event ' + fixEvent
							_ that.setState
								{
									@ fixed !that.state.fixed
            
		m componentWillUnmount
			if this.fixEventHandler
				_ this.fixEventHandler.remove()

		m render
			const { data } = this.props
			const { id, flex, style: elementStyle } = data
			return
				div
					@ id { id }
					@style { this.style(flex, elementStyle) }
					{
						_ data.panels.map
							=>
								param panel
								var PanelComponent = builder.create(panel)
								return
									< PanelComponent
										@ data { panel }    

		m style
			param flex
			param elementStyle
			
			const ret
					_ Object.assign
						{
						{
							@ width '100%'
							@ minWidth '320px'
						@ elementStyle

			if flex === 'row' || flex === 'column'
				_ builder.setFlex(ret, flex)

			if this.state.fixed
				set ret.height = '100%'
				set ret.overflow = 'hidden'
			
			return ret
