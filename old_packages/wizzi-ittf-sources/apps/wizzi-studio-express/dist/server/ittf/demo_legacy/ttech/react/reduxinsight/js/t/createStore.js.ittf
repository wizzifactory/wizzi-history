$group

    var createStoreActionTypes
        { 
            @ INIT '@@redux/INIT'
    
	function createStore
        param reducer
        param initialState
        
		if typeof (reducer) !== 'function'
            throw 
                new Error('Expected the reducer to be a function.')
        
		var currentReducer = reducer
        
		var currentState = initialState
        
		var listeners
            [ 
        
		var isDispatching = false
        
		function getState
            return currentState
        
		function subscribe
            param listener
            _ listeners.push(listener)
            var isSubscribed = true
            return 
                function unsubscribe
                    if ! (isSubscribed)
                        return 
                    set isSubscribed = false
                    var index = listeners.indexOf(listener)
                    _ listeners.splice(index, 1)
        
		function dispatch
            param action
            if !isPlainObject(action)
                throw 
                    new Error(('Actions must be plain objects. ' + 'Use custom middleware for async actions.'))
            
			if typeof (action.type) === 'undefined'
                throw 
                    new Error(('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?'))
            
			if isDispatching
                throw 
                    new Error('Reducers may not dispatch actions.')
            
			try 
                set isDispatching = true
                set currentState = currentReducer(currentState, action)
            finally 
                set isDispatching = false
            
			_ listeners.slice()
                ._ forEach
                    function 
                        param listener
                        return listener()
            
			return action
        
		function replaceReducer
            param nextReducer
            set currentReducer = nextReducer
            _ dispatch
                { 
                    @ type createStoreActionTypes.INIT
        
		_ dispatch
            { 
                @ type createStoreActionTypes.INIT
        
		return 
            { 
                @ dispatch dispatch
                @ subscribe subscribe
                @ getState getState
                @ replaceReducer replaceReducer


