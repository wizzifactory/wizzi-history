$group
	
	e model
		# A Wizzi model instance acting as a data context during the evaluation of another "model"
		# or during an artifact generation.
		# The IttfNodeValue is the name of the model.
		# The name of the model must be unique in a "wfjob"; it will become the default export name of the context
		# value that exposes the model during evaluations. 
		# A "model" will be loaded once, and will be reused if
		# referenced in many evaluations.
		a src
			# The path to the PrimaryIttfDocument of the "model".
			# When relative, the base path is the "modelsBaseFolder"
			# declared on the "wfjob" element.
		
		a schema
			# The name of the WizziSchema that will validate the "model".
		
		a_tag( dumpFile, dump-file )
			# A filepath where the loaded must be dumped for test.
			# The model must implement the toJson method. See the "exportTo" attribute in wizzischema root nodes.
			# When declared the loaded model is JSON.stringyfied and written
			# to the "dumpFile" filepath.
		r modelRef/s
			# References to "model" instances acting as data context during this "model" evaluation.
			# A "model" is referenced by its name.
	
	e_tag( modelRef, model-ref )
		
		a_tag( exportName, export-name )
			# The name of the context property that will expose the loaded model during
			# an evaluation. Overrides the name of the "model" that is the default export name.
		
		r transformer/s
			# A model may have one or more transformers.
			# Transformers are chained and the output of a transformation
			# is the input for the next one.
		r modelCollection/s
			# TODO This is a one-to-one relation, not yet implemented.
			# Single items of a collection contained in the "model" may act as data contexts
			# of artifacts where each collection item generates a separate artifact.
		
		m wzinitialize
			if this.modelCollections.length > 0
				
				set this.modelCollection = this.modelCollections[0]
				set this.collName = this.modelCollection.wzName
				set this.collItemName = this.modelCollection.itemName
				set this.collPathTemplateValues = []
				
				foreach item in this.modelCollection.pathTemplateValues
					_ this.collPathTemplateValues.push
						{
							@ token item.token
							@ attribute item.attribute
							@ function item.function
				$$ log 'this.modelCollection.wzName', this.modelCollection.wzName
				$$ log 'this.collName', this.collName
				$$ log 'this.collItemName', this.collItemName
	
	e_tag( modelCollection, model-coll )
		
		# Single items of a collection contained in a "model" may act as data contexts
		# of artifacts where each collection item generates a separate artifact.
		# This element, contained in a "modelRef" element, specifies:
		# . the collection name: the IttfNodeValue of this element
		# . the export name of the collection item when acting as a data context: the "item-name" attribute
		# . the property names of the collection item that will be used to build the destination path
		#   of the artifact: the "pathTemplateValues" child elements
		
		a_tag( itemName, item-name )
			# The export name of a collection item when acting as a data context.
		
		r pathTemplateValue/s
	
	e_tag( pathTemplateValue, path-template-value )
		a attribute
			# The property of the context object (a collection item) containing the value which will replace 
			# the "token" value in the generated artifact path template.
			# Is alternative to "function"
		a function
			# The function of the context object (a collection item) that returns the value which will replace 
			# the "token" value in the generated artifact path template.
			# Is alternative to "attribute"
		a token
			# The token that will be replaced by the value returned accessing "attribute" or calling "function"
			# on a context object.
	
