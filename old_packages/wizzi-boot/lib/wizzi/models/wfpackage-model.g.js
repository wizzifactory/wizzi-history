// generator: /wizzi-labs/wizzi-lab-site/ittf/lib/artifacts/js/module/gen/main.js, utc time: Thu, 23 Mar 2017 19:48:48 GMT
'use strict';
// generated by js.module.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');

var md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row,col,sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();


md.wzSourceLineInfo = wzSourceLineInfo;
var wfpackageBase = (function () {
    function wfpackageBase(name,sourceLineInfo) {
        _classCallCheck(this, wfpackageBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    wfpackageBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    wfpackageBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadContext.getIttfDocumentUri(sourceKey);
    }
    wfpackageBase.prototype.wzVerify = function() {
    }
    wfpackageBase.prototype.wzInitialize = function() {
    }
    wfpackageBase.prototype.wzInitializeAsync = function(ctx,callback) {
        callback(null);
    }
    wfpackageBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    wfpackageBase.prototype.wzLoadToChildColl = function(child,type,coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfpackageBase.prototype.wzLoadToChildren = function(child,type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfpackageBase.prototype.wzLoadOneToOne = function(child,type,fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    wfpackageBase.prototype.error = function(message,node) {
        throw new md.wfpackageException(message, node, this);
    }
    return wfpackageBase;
})();


md.wfpackageBase = wfpackageBase;

/**
    element wfpackage
     The root tag of the wfpackage schema.
*/
var wfpackage = (function (wfpackageBase) {
    _inherits(wfpackage, wfpackageBase);
    function wfpackage(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wfpackage.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wfpackage);
        this.wzElement = "wfpackage";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.srcCwd = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.assetsCwd = null;
        // relation buildCwd
        this.buildCwds = [];
        // relation schema
        this.schemas = [];
    }
    wfpackage.prototype.addBuildCwd = function(name,sourceLineInfo) {
        var retval = new md.buildCwd(name, sourceLineInfo);
        retval.wzParent = this;
        this.buildCwds.push(retval);
        return retval;
    }
    wfpackage.prototype.getBuildCwd = function(name) {
        var found = null;
        this.buildCwds.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfpackage.prototype.addSchema = function(name,sourceLineInfo) {
        var retval = new md.schema(name, sourceLineInfo);
        retval.wzParent = this;
        this.schemas.push(retval);
        return retval;
    }
    wfpackage.prototype.getSchema = function(name) {
        var found = null;
        this.schemas.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    wfpackage.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'schema') {
                return this.wzLoadToChildColl(child, md.schema, this.schemas);
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'src-cwd') {
                this.srcCwd = child.v; return true;
            }
            else if (name === 'src_cwd') {
                this.srcCwd = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'b') {
            if (name === 'buildcwd') {
                return this.wzLoadToChildColl(child, md.buildCwd, this.buildCwds);
            }
        }
        if (_l == 9 && _ch == 'b') {
            if (name === 'build-cwd') {
                return this.wzLoadToChildColl(child, md.buildCwd, this.buildCwds);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'assets-cwd') {
                this.assetsCwd = child.v; return true;
            }
            else if (name === 'assets_cwd') {
                this.assetsCwd = child.v; return true;
            }
        }
        return ok;
    }
    wfpackage.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    wfpackage.prototype.wzVerify = function(ctx) {
        var i, i_len=this.buildCwds.length, item;
        for (i=0; i<i_len; i++) {
            item = this.buildCwds[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.schemas.length, item;
        for (i=0; i<i_len; i++) {
            item = this.schemas[i];
            item.wzVerify(ctx);
        }
        md.wfpackageBase.prototype.wzVerify.call(this, ctx);
    }
    wfpackage.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.buildCwds.length, item;
        for (i=0; i<i_len; i++) {
            item = this.buildCwds[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.schemas.length, item;
        for (i=0; i<i_len; i++) {
            item = this.schemas[i];
            item.wzInitialize(ctx);
        }
        md.wfpackageBase.prototype.wzInitialize.call(this, ctx);
    }
    wfpackage.prototype.getJobs = function() {
        var ret = {
            name: this.wzName, 
            title: this.title, 
            srcCwd: this.srcCwd, 
            assetsCwd: this.assetsCwd, 
            buildCwds: [], 
            schemas: [], 
            jobs: [
                {
                    title: 'build ' + this.wzName + ' assets', 
                    exe: 'node', 
                    cwd: this.srcCwd, 
                    args: 'index'
                }
            ]
        };
        if (this.schemas.length > 0) {
            ret.jobs.push({
                title: 'generate ' + this.wzName + ' wizzi model types in the assets folder', 
                exe: 'node', 
                cwd: this.assetsCwd, 
                args: 'schemas'
            });
            var i, i_len=this.schemas.length, item;
            for (i=0; i<i_len; i++) {
                item = this.schemas[i];
                ret.schemas.push({
                    name: item.wzName
                });
            }
        }
        var i, i_len=this.buildCwds.length, item;
        for (i=0; i<i_len; i++) {
            item = this.buildCwds[i];
            ret.buildCwds.push({
                cwd: item.wzName, 
                title: item.title
            });
        }
        return ret;
    }
    return wfpackage;
})(wfpackageBase);


md.wfpackage = wfpackage;
// element buildCwd
var buildCwd = (function (wfpackageBase) {
    _inherits(buildCwd, wfpackageBase);
    function buildCwd(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(buildCwd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, buildCwd);
        this.wzElement = "buildCwd";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
    }
    buildCwd.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        return ok;
    }
    buildCwd.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return buildCwd;
})(wfpackageBase);


md.buildCwd = buildCwd;
/**
    element schema
     A WizziSchema defined by this WizziFactoryPackage
*/
var schema = (function (wfpackageBase) {
    _inherits(schema, wfpackageBase);
    function schema(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(schema.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, schema);
        this.wzElement = "schema";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
        // relation transformer
        this.transformers = [];
        // relation artifact
        this.artifacts = [];
        // relation example
        this.examples = [];
    }
    schema.prototype.addTransformer = function(name,sourceLineInfo) {
        var retval = new md.transformer(name, sourceLineInfo);
        retval.wzParent = this;
        this.transformers.push(retval);
        return retval;
    }
    schema.prototype.getTransformer = function(name) {
        var found = null;
        this.transformers.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    schema.prototype.addArtifact = function(name,sourceLineInfo) {
        var retval = new md.artifact(name, sourceLineInfo);
        retval.wzParent = this;
        this.artifacts.push(retval);
        return retval;
    }
    schema.prototype.getArtifact = function(name) {
        var found = null;
        this.artifacts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    schema.prototype.addExample = function(name,sourceLineInfo) {
        var retval = new md.example(name, sourceLineInfo);
        retval.wzParent = this;
        this.examples.push(retval);
        return retval;
    }
    schema.prototype.getExample = function(name) {
        var found = null;
        this.examples.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    schema.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'example') {
                return this.wzLoadToChildColl(child, md.example, this.examples);
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'artifact') {
                return this.wzLoadToChildColl(child, md.artifact, this.artifacts);
            }
        }
        if (_l == 11 && _ch == 'i') {
            if (name === 'ittfexample') {
                return this.wzLoadToChildColl(child, md.ittfExample, this.examples);
            }
        }
        if (_l == 11 && _ch == 't') {
            if (name === 'transformer') {
                return this.wzLoadToChildColl(child, md.transformer, this.transformers);
            }
        }
        if (_l == 12 && _ch == 'i') {
            if (name === 'ittf-example') {
                return this.wzLoadToChildColl(child, md.ittfExample, this.examples);
            }
        }
        if (_l == 15 && _ch == 'a') {
            if (name === 'artifactexample') {
                return this.wzLoadToChildColl(child, md.artifactExample, this.examples);
            }
        }
        if (_l == 16 && _ch == 'a') {
            if (name === 'artifact-example') {
                return this.wzLoadToChildColl(child, md.artifactExample, this.examples);
            }
        }
        return ok;
    }
    schema.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    schema.prototype.wzVerify = function(ctx) {
        var i, i_len=this.transformers.length, item;
        for (i=0; i<i_len; i++) {
            item = this.transformers[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.artifacts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.artifacts[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.examples.length, item;
        for (i=0; i<i_len; i++) {
            item = this.examples[i];
            item.wzVerify(ctx);
        }
        md.wfpackageBase.prototype.wzVerify.call(this, ctx);
    }
    schema.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.transformers.length, item;
        for (i=0; i<i_len; i++) {
            item = this.transformers[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.artifacts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.artifacts[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.examples.length, item;
        for (i=0; i<i_len; i++) {
            item = this.examples[i];
            item.wzInitialize(ctx);
        }
        md.wfpackageBase.prototype.wzInitialize.call(this, ctx);
    }
    return schema;
})(wfpackageBase);


md.schema = schema;
/**
    element transformer
     A WizziModelTransformer
*/
var transformer = (function (wfpackageBase) {
    _inherits(transformer, wfpackageBase);
    function transformer(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(transformer.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transformer);
        this.wzElement = "transformer";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
    }
    transformer.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        return ok;
    }
    transformer.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return transformer;
})(wfpackageBase);


md.transformer = transformer;
/**
    element artifact
     An ArtifactGenerator
*/
var artifact = (function (wfpackageBase) {
    _inherits(artifact, wfpackageBase);
    function artifact(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(artifact.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, artifact);
        this.wzElement = "artifact";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
    }
    artifact.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        return ok;
    }
    artifact.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return artifact;
})(wfpackageBase);


md.artifact = artifact;
/**
    element example
     The base node for examples
*/
var example = (function (wfpackageBase) {
    _inherits(example, wfpackageBase);
    function example(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(example.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, example);
        this.wzElement = "example";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
        // relation node
        this.nodes = [];
    }
    example.prototype.addNode = function(name,sourceLineInfo) {
        var retval = new md.node(name, sourceLineInfo);
        retval.wzParent = this;
        this.nodes.push(retval);
        return retval;
    }
    example.prototype.getNode = function(name) {
        var found = null;
        this.nodes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    example.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'n') {
            if (name === 'node') {
                return this.wzLoadToChildColl(child, md.node, this.nodes);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        return ok;
    }
    example.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.wfpackageException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    example.prototype.wzVerify = function(ctx) {
        var i, i_len=this.nodes.length, item;
        for (i=0; i<i_len; i++) {
            item = this.nodes[i];
            item.wzVerify(ctx);
        }
        md.wfpackageBase.prototype.wzVerify.call(this, ctx);
    }
    example.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.nodes.length, item;
        for (i=0; i<i_len; i++) {
            item = this.nodes[i];
            item.wzInitialize(ctx);
        }
        md.wfpackageBase.prototype.wzInitialize.call(this, ctx);
    }
    return example;
})(wfpackageBase);


md.example = example;
/**
    element ittfExample
     An IttfDocument example
*/
var ittfExample = (function (example) {
    _inherits(ittfExample, example);
    function ittfExample(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ittfExample.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ittfExample);
        this.wzElement = "ittfExample";
    }
    return ittfExample;
})(example);


md.ittfExample = ittfExample;
/**
    element artifactExample
     An artifact generation example
*/
var artifactExample = (function (example) {
    _inherits(artifactExample, example);
    function artifactExample(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(artifactExample.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, artifactExample);
        this.wzElement = "artifactExample";
    }
    return artifactExample;
})(example);


md.artifactExample = artifactExample;
// element node
var node = (function (wfpackageBase) {
    _inherits(node, wfpackageBase);
    function node(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(node.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, node);
        this.wzElement = "node";
    }
    return node;
})(wfpackageBase);


md.node = node;
md.__tagElementMapping = { 'build-cwd': 'buildCwd', 'buildcwd': 'buildCwd', 'ittf-example': 'ittfExample', 'ittfexample': 'ittfExample', 'artifact-example': 'artifactExample', 'artifactexample': 'artifactExample' };
var wfpackageException = (function () {
    function wfpackageException(message,node,instance) {
        _classCallCheck(this, wfpackageException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        this.stack = new Error().stack;
        this.node = node;
    }
    return wfpackageException;
})();


md.wfpackageException = wfpackageException;
var wfpackageContext = (function () {
    function wfpackageContext() {
        _classCallCheck(this, wfpackageContext);
        this.validationErrors = [];
    }
    wfpackageContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    wfpackageContext.prototype.addError = function(message,node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return wfpackageContext;
})();


md.wfpackageContext = wfpackageContext;
function parsestring(value,defaultValue,node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}

function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}

function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}

function isBoolean(value) {
    return value === 'true' || value === 'false';
}


