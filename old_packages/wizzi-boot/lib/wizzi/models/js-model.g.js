// generator: /wizzi-labs/wizzi-lab-site/ittf/lib/artifacts/js/module/gen/main.js, utc time: Thu, 23 Mar 2017 19:48:50 GMT
'use strict';
// generated by js.module.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');

var md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row,col,sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();


md.wzSourceLineInfo = wzSourceLineInfo;
var jsBase = (function () {
    function jsBase(name,sourceLineInfo) {
        _classCallCheck(this, jsBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    jsBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    jsBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadContext.getIttfDocumentUri(sourceKey);
    }
    jsBase.prototype.wzVerify = function() {
    }
    jsBase.prototype.wzInitialize = function() {
    }
    jsBase.prototype.wzInitializeAsync = function(ctx,callback) {
        callback(null);
    }
    jsBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    jsBase.prototype.wzLoadToChildColl = function(child,type,coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.wzLoadToChildren = function(child,type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.wzLoadOneToOne = function(child,type,fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    jsBase.prototype.error = function(message,node) {
        throw new md.jsException(message, node, this);
    }
    return jsBase;
})();


md.jsBase = jsBase;

/**
    element module
     The root element of the js schema.
*/
var module = (function (jsBase) {
    _inherits(module, jsBase);
    function module(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(module.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, module);
        this.allowedKINDS = [ "jsfile", "nodejs", "react", "es6"];
        this.KIND_JSFILE = "jsfile";
        this.KIND_NODEJS = "nodejs";
        this.KIND_REACT = "react";
        this.KIND_ES6 = "es6";
        this.allowedECMAS = [ "es5", "es6"];
        this.ECMA_ES5 = "es5";
        this.ECMA_ES6 = "es6";
        this.wzElement = "module";
        this.kind = "jsfile";
        this.ecma = "es5";
        this.no_strict = false;
        // relation resource
        this.resources = [];
        // relation statement
        this.statements = [];
    }
    module.KIND_JSFILE = "jsfile";
    module.KIND_NODEJS = "nodejs";
    module.KIND_REACT = "react";
    module.KIND_ES6 = "es6";
    module.ECMA_ES5 = "es5";
    module.ECMA_ES6 = "es6";
    module.prototype.addResource = function(name,sourceLineInfo) {
        var retval = new md.resource(name, sourceLineInfo);
        retval.wzParent = this;
        this.resources.push(retval);
        return retval;
    }
    module.prototype.getResource = function(name) {
        var found = null;
        this.resources.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    module.prototype.addStatement = function(name,sourceLineInfo) {
        var retval = new md.statement(name, sourceLineInfo);
        retval.wzParent = this;
        this.statements.push(retval);
        return retval;
    }
    module.prototype.getStatement = function(name) {
        var found = null;
        this.statements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    module.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, md.comment, this.statements);
            }
        }
        if (_l == 1 && _ch == '(') {
            if (name === '(') {
                return this.wzLoadToChildColl(child, md.callOnValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, md.statement, this.statements);
            }
        }
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, md.memberAccess, this.statements);
            }
        }
        if (_l == 1 && _ch == '<') {
            if (name === '<') {
                return this.wzLoadToChildColl(child, md.htmlelement, this.statements);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, md.jsPropertyOrValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, md.jsArray, this.statements);
            }
        }
        if (_l == 1 && _ch == '_') {
            if (name === '_') {
                return this.wzLoadToChildColl(child, md.call, this.statements);
            }
        }
        if (_l == 1 && _ch == 'a') {
            if (name === 'a') {
                return this.wzLoadToChildColl(child, md.a, this.statements);
            }
        }
        if (_l == 1 && _ch == 'b') {
            if (name === 'b') {
                return this.wzLoadToChildColl(child, md.b, this.statements);
            }
        }
        if (_l == 1 && _ch == 'i') {
            if (name === 'i') {
                return this.wzLoadToChildColl(child, md.i, this.statements);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, md.method, this.statements);
            }
        }
        if (_l == 1 && _ch == 'p') {
            if (name === 'p') {
                return this.wzLoadToChildColl(child, md.p, this.statements);
            }
        }
        if (_l == 1 && _ch == 'q') {
            if (name === 'q') {
                return this.wzLoadToChildColl(child, md.q, this.statements);
            }
        }
        if (_l == 1 && _ch == 's') {
            if (name === 's') {
                return this.wzLoadToChildColl(child, md.s, this.statements);
            }
        }
        if (_l == 1 && _ch == 'u') {
            if (name === 'u') {
                return this.wzLoadToChildColl(child, md.u, this.statements);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, md.jsObject, this.statements);
            }
        }
        if (_l == 1 && _ch == 'ยง') {
            if (name === 'ยง') {
                return this.wzLoadToChildColl(child, md.component, this.statements);
            }
        }
        if (_l == 2 && _ch == '!') {
            if (name === '!!') {
                return this.wzLoadToChildColl(child, md.assert, this.statements);
            }
        }
        if (_l == 2 && _ch == '#') {
            if (name === '##') {
                return this.wzLoadToChildColl(child, md.commentmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '&') {
            if (name === '&&') {
                return this.wzLoadToChildColl(child, md.and, this.statements);
            }
        }
        if (_l == 2 && _ch == '+') {
            if (name === '++') {
                return this.wzLoadToChildColl(child, md.statementmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '.') {
            if (name === '._') {
                return this.wzLoadToChildColl(child, md.memberCall, this.statements);
            }
            else if (name === '.[') {
                return this.wzLoadToChildColl(child, md.memberAccessComputed, this.statements);
            }
        }
        if (_l == 2 && _ch == '=') {
            if (name === '=>') {
                return this.wzLoadToChildColl(child, md.arrowfunction, this.statements);
            }
        }
        if (_l == 2 && _ch == '@') {
            if (name === '@_') {
                return this.wzLoadToChildColl(child, md.decoratorCall, this.statements);
            }
        }
        if (_l == 2 && _ch == 'b') {
            if (name === 'br') {
                return this.wzLoadToChildColl(child, md.br, this.statements);
            }
        }
        if (_l == 2 && _ch == 'd') {
            if (name === 'do') {
                return this.wzLoadToChildColl(child, md.xdo, this.statements);
            }
            else if (name === 'dd') {
                return this.wzLoadToChildColl(child, md.dd, this.statements);
            }
            else if (name === 'dl') {
                return this.wzLoadToChildColl(child, md.dl, this.statements);
            }
            else if (name === 'dt') {
                return this.wzLoadToChildColl(child, md.dt, this.statements);
            }
        }
        if (_l == 2 && _ch == 'e') {
            if (name === 'em') {
                return this.wzLoadToChildColl(child, md.em, this.statements);
            }
        }
        if (_l == 2 && _ch == 'h') {
            if (name === 'h1') {
                return this.wzLoadToChildColl(child, md.h1, this.statements);
            }
            else if (name === 'h2') {
                return this.wzLoadToChildColl(child, md.h2, this.statements);
            }
            else if (name === 'h3') {
                return this.wzLoadToChildColl(child, md.h3, this.statements);
            }
            else if (name === 'h4') {
                return this.wzLoadToChildColl(child, md.h4, this.statements);
            }
            else if (name === 'h5') {
                return this.wzLoadToChildColl(child, md.h5, this.statements);
            }
            else if (name === 'h6') {
                return this.wzLoadToChildColl(child, md.h6, this.statements);
            }
            else if (name === 'hr') {
                return this.wzLoadToChildColl(child, md.hr, this.statements);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'if') {
                return this.wzLoadToChildColl(child, md.xif, this.statements);
            }
            else if (name === 'it') {
                return this.wzLoadToChildColl(child, md.it, this.statements);
            }
        }
        if (_l == 2 && _ch == 'j') {
            if (name === 'js') {
                return this.wzLoadToChildColl(child, md.js, this.statements);
            }
        }
        if (_l == 2 && _ch == 'l') {
            if (name === 'li') {
                return this.wzLoadToChildColl(child, md.li, this.statements);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'op') {
                return this.wzLoadToChildColl(child, md.op_minus, this.statements);
            }
            else if (name === 'ol') {
                return this.wzLoadToChildColl(child, md.ol, this.statements);
            }
        }
        if (_l == 2 && _ch == 'r') {
            if (name === 'rp') {
                return this.wzLoadToChildColl(child, md.rp, this.statements);
            }
            else if (name === 'rt') {
                return this.wzLoadToChildColl(child, md.rt, this.statements);
            }
        }
        if (_l == 2 && _ch == 't') {
            if (name === 'td') {
                return this.wzLoadToChildColl(child, md.td, this.statements);
            }
            else if (name === 'th') {
                return this.wzLoadToChildColl(child, md.th, this.statements);
            }
            else if (name === 'tr') {
                return this.wzLoadToChildColl(child, md.tr, this.statements);
            }
        }
        if (_l == 2 && _ch == 'u') {
            if (name === 'ul') {
                return this.wzLoadToChildColl(child, md.ul, this.statements);
            }
        }
        if (_l == 2 && _ch == '|') {
            if (name === '||') {
                return this.wzLoadToChildColl(child, md.or, this.statements);
            }
        }
        if (_l == 3 && _ch == '!') {
            if (name === '!!=') {
                return this.wzLoadToChildColl(child, md.assert_equal, this.statements);
            }
        }
        if (_l == 3 && _ch == 'b') {
            if (name === 'bdi') {
                return this.wzLoadToChildColl(child, md.bdi, this.statements);
            }
            else if (name === 'bdo') {
                return this.wzLoadToChildColl(child, md.bdo, this.statements);
            }
            else if (name === 'big') {
                return this.wzLoadToChildColl(child, md.big, this.statements);
            }
        }
        if (_l == 3 && _ch == 'c') {
            if (name === 'col') {
                return this.wzLoadToChildColl(child, md.col, this.statements);
            }
            else if (name === 'css') {
                return this.wzLoadToChildColl(child, md.css, this.statements);
            }
        }
        if (_l == 3 && _ch == 'd') {
            if (name === 'del') {
                return this.wzLoadToChildColl(child, md.del, this.statements);
            }
            else if (name === 'dfn') {
                return this.wzLoadToChildColl(child, md.dfn, this.statements);
            }
            else if (name === 'div') {
                return this.wzLoadToChildColl(child, md.div, this.statements);
            }
        }
        if (_l == 3 && _ch == 'f') {
            if (name === 'for') {
                return this.wzLoadToChildColl(child, md.xfor, this.statements);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'iif') {
                return this.wzLoadToChildColl(child, md.iif, this.statements);
            }
            else if (name === 'img') {
                return this.wzLoadToChildColl(child, md.img, this.statements);
            }
            else if (name === 'ins') {
                return this.wzLoadToChildColl(child, md.ins, this.statements);
            }
        }
        if (_l == 3 && _ch == 'j') {
            if (name === 'jst') {
                return this.wzLoadToChildColl(child, md.jsonStatementTree, this.statements);
            }
        }
        if (_l == 3 && _ch == 'k') {
            if (name === 'kbd') {
                return this.wzLoadToChildColl(child, md.kbd, this.statements);
            }
        }
        if (_l == 3 && _ch == 'l') {
            if (name === 'let') {
                return this.wzLoadToChildColl(child, md.xlet, this.statements);
            }
            else if (name === 'log') {
                return this.wzLoadToChildColl(child, md.log, this.statements);
            }
        }
        if (_l == 3 && _ch == 'm') {
            if (name === 'map') {
                return this.wzLoadToChildColl(child, md.map, this.statements);
            }
        }
        if (_l == 3 && _ch == 'n') {
            if (name === 'new') {
                return this.wzLoadToChildColl(child, md.xnew, this.statements);
            }
            else if (name === 'nav') {
                return this.wzLoadToChildColl(child, md.nav, this.statements);
            }
        }
        if (_l == 3 && _ch == 'o') {
            if (name === 'op-') {
                return this.wzLoadToChildColl(child, md.op_minus, this.statements);
            }
            else if (name === 'op+') {
                return this.wzLoadToChildColl(child, md.op_plus, this.statements);
            }
            else if (name === 'op*') {
                return this.wzLoadToChildColl(child, md.op_times, this.statements);
            }
            else if (name === 'op/') {
                return this.wzLoadToChildColl(child, md.op_div, this.statements);
            }
            else if (name === 'op^') {
                return this.wzLoadToChildColl(child, md.op_power, this.statements);
            }
            else if (name === 'op%') {
                return this.wzLoadToChildColl(child, md.op_mod, this.statements);
            }
            else if (name === 'op|') {
                return this.wzLoadToChildColl(child, md.op_xor, this.statements);
            }
            else if (name === 'op&') {
                return this.wzLoadToChildColl(child, md.op_xand, this.statements);
            }
            else if (name === 'op>') {
                return this.wzLoadToChildColl(child, md.op_gt, this.statements);
            }
            else if (name === 'op<') {
                return this.wzLoadToChildColl(child, md.op_lt, this.statements);
            }
        }
        if (_l == 3 && _ch == 'p') {
            if (name === 'pre') {
                return this.wzLoadToChildColl(child, md.pre, this.statements);
            }
        }
        if (_l == 3 && _ch == 's') {
            if (name === 'set') {
                return this.wzLoadToChildColl(child, md.set, this.statements);
            }
            else if (name === 'sub') {
                return this.wzLoadToChildColl(child, md.sub, this.statements);
            }
            else if (name === 'sup') {
                return this.wzLoadToChildColl(child, md.sup, this.statements);
            }
        }
        if (_l == 3 && _ch == 't') {
            if (name === 'try') {
                return this.wzLoadToChildColl(child, md.xtry, this.statements);
            }
        }
        if (_l == 3 && _ch == 'v') {
            if (name === 'var') {
                return this.wzLoadToChildColl(child, md.xvar, this.statements);
            }
            else if (name === 'var') {
                return this.wzLoadToChildColl(child, md.xvar, this.statements);
            }
        }
        if (_l == 3 && _ch == 'w') {
            if (name === 'wbr') {
                return this.wzLoadToChildColl(child, md.wbr, this.statements);
            }
        }
        if (_l == 4 && _ch == 'a') {
            if (name === 'abbr') {
                return this.wzLoadToChildColl(child, md.abbr, this.statements);
            }
            else if (name === 'area') {
                return this.wzLoadToChildColl(child, md.area, this.statements);
            }
        }
        if (_l == 4 && _ch == 'b') {
            if (name === 'base') {
                return this.wzLoadToChildColl(child, md.base, this.statements);
            }
            else if (name === 'base') {
                return this.wzLoadToChildColl(child, md.base, this.statements);
            }
            else if (name === 'body') {
                return this.wzLoadToChildColl(child, md.body, this.statements);
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'case') {
                return this.wzLoadToChildColl(child, md.xcase, this.statements);
            }
            else if (name === 'ctor') {
                return this.wzLoadToChildColl(child, md.ctor, this.statements);
            }
            else if (name === 'cite') {
                return this.wzLoadToChildColl(child, md.cite, this.statements);
            }
            else if (name === 'code') {
                return this.wzLoadToChildColl(child, md.code, this.statements);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'decl') {
                return this.wzLoadToChildColl(child, md.decl, this.statements);
            }
            else if (name === 'data') {
                return this.wzLoadToChildColl(child, md.data, this.statements);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'ecma') {
                this.ecma = child.v; return true;
            }
            else if (name === 'elif') {
                return this.wzLoadToChildColl(child, md.elif, this.statements);
            }
            else if (name === 'else') {
                return this.wzLoadToChildColl(child, md.xelse, this.statements);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'form') {
                return this.wzLoadToChildColl(child, md.form, this.statements);
            }
        }
        if (_l == 4 && _ch == 'h') {
            if (name === 'head') {
                return this.wzLoadToChildColl(child, md.head, this.statements);
            }
            else if (name === 'html') {
                return this.wzLoadToChildColl(child, md.html, this.statements);
            }
        }
        if (_l == 4 && _ch == 'i') {
            if (name === 'iife') {
                return this.wzLoadToChildColl(child, md.iife, this.statements);
            }
        }
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'link') {
                return this.wzLoadToChildColl(child, md.link, this.statements);
            }
            else if (name === 'log?') {
                return this.wzLoadToChildColl(child, md.inspect, this.statements);
            }
        }
        if (_l == 4 && _ch == 'm') {
            if (name === 'main') {
                return this.wzLoadToChildColl(child, md.main, this.statements);
            }
            else if (name === 'mark') {
                return this.wzLoadToChildColl(child, md.mark, this.statements);
            }
            else if (name === 'menu') {
                return this.wzLoadToChildColl(child, md.menu, this.statements);
            }
            else if (name === 'meta') {
                return this.wzLoadToChildColl(child, md.meta, this.statements);
            }
        }
        if (_l == 4 && _ch == 'o') {
            if (name === 'op==') {
                return this.wzLoadToChildColl(child, md.op_eq, this.statements);
            }
            else if (name === 'op!=') {
                return this.wzLoadToChildColl(child, md.op_noteq, this.statements);
            }
            else if (name === 'op||') {
                return this.wzLoadToChildColl(child, md.op_or, this.statements);
            }
            else if (name === 'op&&') {
                return this.wzLoadToChildColl(child, md.op_and, this.statements);
            }
            else if (name === 'op>=') {
                return this.wzLoadToChildColl(child, md.op_ge, this.statements);
            }
            else if (name === 'op<=') {
                return this.wzLoadToChildColl(child, md.op_le, this.statements);
            }
        }
        if (_l == 4 && _ch == 'r') {
            if (name === 'ruby') {
                return this.wzLoadToChildColl(child, md.ruby, this.statements);
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'samp') {
                return this.wzLoadToChildColl(child, md.samp, this.statements);
            }
            else if (name === 'span') {
                return this.wzLoadToChildColl(child, md.span, this.statements);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                return this.wzLoadToChildColl(child, md.type, this.statements);
            }
            else if (name === 'test') {
                return this.wzLoadToChildColl(child, md.test, this.statements);
            }
            else if (name === 'then') {
                return this.wzLoadToChildColl(child, md.then, this.statements);
            }
            else if (name === 'time') {
                return this.wzLoadToChildColl(child, md.time, this.statements);
            }
        }
        if (_l == 4 && _ch == 'w') {
            if (name === 'warn') {
                return this.wzLoadToChildColl(child, md.warn, this.statements);
            }
        }
        if (_l == 5 && _ch == 'a') {
            if (name === 'aside') {
                return this.wzLoadToChildColl(child, md.aside, this.statements);
            }
            else if (name === 'audio') {
                return this.wzLoadToChildColl(child, md.audio, this.statements);
            }
            else if (name === 'after') {
                return this.wzLoadToChildColl(child, md.after, this.statements);
            }
        }
        if (_l == 5 && _ch == 'b') {
            if (name === 'block') {
                return this.wzLoadToChildColl(child, md.block, this.statements);
            }
            else if (name === 'break') {
                return this.wzLoadToChildColl(child, md.xbreak, this.statements);
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'const') {
                return this.wzLoadToChildColl(child, md.xconst, this.statements);
            }
            else if (name === 'catch') {
                return this.wzLoadToChildColl(child, md.xcatch, this.statements);
            }
            else if (name === 'class') {
                return this.wzLoadToChildColl(child, md.xclass, this.statements);
            }
            else if (name === 'chalk') {
                return this.wzLoadToChildColl(child, md.chalk, this.statements);
            }
        }
        if (_l == 5 && _ch == 'd') {
            if (name === 'debug') {
                return this.wzLoadToChildColl(child, md.debug, this.statements);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'embed') {
                return this.wzLoadToChildColl(child, md.embed, this.statements);
            }
            else if (name === 'error') {
                return this.wzLoadToChildColl(child, md.error, this.statements);
            }
        }
        if (_l == 5 && _ch == 'i') {
            if (name === 'input') {
                return this.wzLoadToChildColl(child, md.input, this.statements);
            }
        }
        if (_l == 5 && _ch == 'l') {
            if (name === 'label') {
                return this.wzLoadToChildColl(child, md.label, this.statements);
            }
            else if (name === 'label') {
                return this.wzLoadToChildColl(child, md.label, this.statements);
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'meter') {
                return this.wzLoadToChildColl(child, md.meter, this.statements);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'op===') {
                return this.wzLoadToChildColl(child, md.op_eq_strict, this.statements);
            }
            else if (name === 'op!==') {
                return this.wzLoadToChildColl(child, md.op_noteq_strict, this.statements);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, md.param, this.statements);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'react') {
                return this.wzLoadToChildColl(child, md.reactComponent, this.statements);
            }
            else if (name === 'ready') {
                return this.wzLoadToChildColl(child, md.ready, this.statements);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'small') {
                return this.wzLoadToChildColl(child, md.small, this.statements);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'throw') {
                return this.wzLoadToChildColl(child, md.xthrow, this.statements);
            }
            else if (name === 'table') {
                return this.wzLoadToChildColl(child, md.table, this.statements);
            }
            else if (name === 'tbody') {
                return this.wzLoadToChildColl(child, md.tbody, this.statements);
            }
            else if (name === 'tfoot') {
                return this.wzLoadToChildColl(child, md.tfoot, this.statements);
            }
            else if (name === 'thead') {
                return this.wzLoadToChildColl(child, md.thead, this.statements);
            }
            else if (name === 'title') {
                return this.wzLoadToChildColl(child, md.title, this.statements);
            }
            else if (name === 'track') {
                return this.wzLoadToChildColl(child, md.track, this.statements);
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'video') {
                return this.wzLoadToChildColl(child, md.video, this.statements);
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'wzvar') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
            else if (name === 'while') {
                return this.wzLoadToChildColl(child, md.xwhile, this.statements);
            }
            else if (name === 'wzvar') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
        }
        if (_l == 6 && _ch == '@') {
            if (name === '@style') {
                return this.wzLoadToChildColl(child, md._style, this.statements);
            }
        }
        if (_l == 6 && _ch == 'b') {
            if (name === 'button') {
                return this.wzLoadToChildColl(child, md.button, this.statements);
            }
            else if (name === 'before') {
                return this.wzLoadToChildColl(child, md.before, this.statements);
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'canvas') {
                return this.wzLoadToChildColl(child, md.canvas, this.statements);
            }
        }
        if (_l == 6 && _ch == 'd') {
            if (name === 'delete') {
                return this.wzLoadToChildColl(child, md.xdelete, this.statements);
            }
            else if (name === 'dialog') {
                return this.wzLoadToChildColl(child, md.dialog, this.statements);
            }
        }
        if (_l == 6 && _ch == 'e') {
            if (name === 'export') {
                return this.wzLoadToChildColl(child, md.xexport, this.statements);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'figure') {
                return this.wzLoadToChildColl(child, md.figure, this.statements);
            }
            else if (name === 'footer') {
                return this.wzLoadToChildColl(child, md.footer, this.statements);
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'header') {
                return this.wzLoadToChildColl(child, md.header, this.statements);
            }
            else if (name === 'html_f') {
                return this.wzLoadToChildColl(child, md.html_f, this.statements);
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'import') {
                return this.wzLoadToChildColl(child, md.ximport, this.statements);
            }
            else if (name === 'iframe') {
                return this.wzLoadToChildColl(child, md.iframe, this.statements);
            }
        }
        if (_l == 6 && _ch == 'k') {
            if (name === 'keygen') {
                return this.wzLoadToChildColl(child, md.keygen, this.statements);
            }
        }
        if (_l == 6 && _ch == 'l') {
            if (name === 'legend') {
                return this.wzLoadToChildColl(child, md.legend, this.statements);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'object') {
                return this.wzLoadToChildColl(child, md.object, this.statements);
            }
            else if (name === 'option') {
                return this.wzLoadToChildColl(child, md.option, this.statements);
            }
            else if (name === 'output') {
                return this.wzLoadToChildColl(child, md.output, this.statements);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'return') {
                return this.wzLoadToChildColl(child, md.xreturn, this.statements);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'switch') {
                return this.wzLoadToChildColl(child, md.xswitch, this.statements);
            }
            else if (name === 'script') {
                return this.wzLoadToChildColl(child, md.script, this.statements);
            }
            else if (name === 'select') {
                return this.wzLoadToChildColl(child, md.select, this.statements);
            }
            else if (name === 'source') {
                return this.wzLoadToChildColl(child, md.source, this.statements);
            }
            else if (name === 'strong') {
                return this.wzLoadToChildColl(child, md.strong, this.statements);
            }
        }
        if (_l == 6 && _ch == 't') {
            if (name === 'tohtml') {
                return this.wzLoadToChildColl(child, md.tohtml, this.statements);
            }
        }
        if (_l == 6 && _ch == 'w') {
            if (name === 'wz-var') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
            else if (name === 'wziife') {
                return this.wzLoadToChildColl(child, md.wzIife, this.statements);
            }
            else if (name === 'wz-var') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'address') {
                return this.wzLoadToChildColl(child, md.address, this.statements);
            }
            else if (name === 'article') {
                return this.wzLoadToChildColl(child, md.article, this.statements);
            }
        }
        if (_l == 7 && _ch == 'c') {
            if (name === 'caption') {
                return this.wzLoadToChildColl(child, md.caption, this.statements);
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'default') {
                return this.wzLoadToChildColl(child, md.xdefault, this.statements);
            }
            else if (name === 'doctype') {
                return this.wzLoadToChildColl(child, md.doctype, this.statements);
            }
            else if (name === 'details') {
                return this.wzLoadToChildColl(child, md.details, this.statements);
            }
        }
        if (_l == 7 && _ch == 'f') {
            if (name === 'foreach') {
                return this.wzLoadToChildColl(child, md.foreach, this.statements);
            }
            else if (name === 'finally') {
                return this.wzLoadToChildColl(child, md.xfinally, this.statements);
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'html_ng') {
                return this.wzLoadToChildColl(child, md.html_ng, this.statements);
            }
            else if (name === 'html_hb') {
                return this.wzLoadToChildColl(child, md.html_hb, this.statements);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'itasync') {
                return this.wzLoadToChildColl(child, md.itAsync, this.statements);
            }
        }
        if (_l == 7 && _ch == 'l') {
            if (name === 'loginfo') {
                return this.wzLoadToChildColl(child, md.log_info, this.statements);
            }
        }
        if (_l == 7 && _ch == 'p') {
            if (name === 'picture') {
                return this.wzLoadToChildColl(child, md.picture, this.statements);
            }
        }
        if (_l == 7 && _ch == 'r') {
            if (name === 'require') {
                return this.wzLoadToChildColl(child, md.require, this.statements);
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'section') {
                return this.wzLoadToChildColl(child, md.section, this.statements);
            }
            else if (name === 'summary') {
                return this.wzLoadToChildColl(child, md.summary, this.statements);
            }
        }
        if (_l == 7 && _ch == 'w') {
            if (name === 'wz-iife') {
                return this.wzLoadToChildColl(child, md.wzIife, this.statements);
            }
            else if (name === 'wzclass') {
                return this.wzLoadToChildColl(child, md.wzClass, this.statements);
            }
        }
        if (_l == 8 && _ch == 'b') {
            if (name === 'backeach') {
                return this.wzLoadToChildColl(child, md.backeach, this.statements);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'continue') {
                return this.wzLoadToChildColl(child, md.xcontinue, this.statements);
            }
            else if (name === 'colgroup') {
                return this.wzLoadToChildColl(child, md.colgroup, this.statements);
            }
        }
        if (_l == 8 && _ch == 'd') {
            if (name === 'datalist') {
                return this.wzLoadToChildColl(child, md.datalist, this.statements);
            }
            else if (name === 'describe') {
                return this.wzLoadToChildColl(child, md.describe, this.statements);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'function') {
                return this.wzLoadToChildColl(child, md.xfunction, this.statements);
            }
            else if (name === 'fieldset') {
                return this.wzLoadToChildColl(child, md.fieldset, this.statements);
            }
        }
        if (_l == 8 && _ch == 'h') {
            if (name === 'html_dom') {
                return this.wzLoadToChildColl(child, md.html_dom, this.statements);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'it-async') {
                return this.wzLoadToChildColl(child, md.itAsync, this.statements);
            }
        }
        if (_l == 8 && _ch == 'l') {
            if (name === 'log-info') {
                return this.wzLoadToChildColl(child, md.log_info, this.statements);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'menuitem') {
                return this.wzLoadToChildColl(child, md.menuitem, this.statements);
            }
        }
        if (_l == 8 && _ch == 'n') {
            if (name === 'noscript') {
                return this.wzLoadToChildColl(child, md.noscript, this.statements);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'optgroup') {
                return this.wzLoadToChildColl(child, md.optgroup, this.statements);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                return this.wzLoadToChildColl(child, md.property, this.statements);
            }
            else if (name === 'progress') {
                return this.wzLoadToChildColl(child, md.progress, this.statements);
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'resource') {
                return this.wzLoadToChildColl(child, md.resource, this.resources);
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'textarea') {
                return this.wzLoadToChildColl(child, md.textarea, this.statements);
            }
        }
        if (_l == 8 && _ch == 'w') {
            if (name === 'wz-class') {
                return this.wzLoadToChildColl(child, md.wzClass, this.statements);
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'aftereach') {
                return this.wzLoadToChildColl(child, md.afterEach, this.statements);
            }
        }
        if (_l == 9 && _ch == 'n') {
            if (name === 'no_strict') {
                this.no_strict = parseboolean(child.v, null, child); return true;
            }
        }
        if (_l == 9 && _ch == 'w') {
            if (name === 'wzrequire') {
                return this.wzLoadToChildColl(child, md.wzRequire, this.statements);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'afterasync') {
                return this.wzLoadToChildColl(child, md.afterAsync, this.statements);
            }
            else if (name === 'after-each') {
                return this.wzLoadToChildColl(child, md.afterEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'b') {
            if (name === 'blockquote') {
                return this.wzLoadToChildColl(child, md.blockquote, this.statements);
            }
            else if (name === 'beforeeach') {
                return this.wzLoadToChildColl(child, md.beforeEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'figcaption') {
                return this.wzLoadToChildColl(child, md.figcaption, this.statements);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'superagent') {
                return this.wzLoadToChildColl(child, md.superagent, this.statements);
            }
        }
        if (_l == 10 && _ch == 'w') {
            if (name === 'wzfunction') {
                return this.wzLoadToChildColl(child, md.wzFunction, this.statements);
            }
            else if (name === 'wz-require') {
                return this.wzLoadToChildColl(child, md.wzRequire, this.statements);
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'after-async') {
                return this.wzLoadToChildColl(child, md.afterAsync, this.statements);
            }
        }
        if (_l == 11 && _ch == 'b') {
            if (name === 'beforeasync') {
                return this.wzLoadToChildColl(child, md.beforeAsync, this.statements);
            }
            else if (name === 'before-each') {
                return this.wzLoadToChildColl(child, md.beforeEach, this.statements);
            }
        }
        if (_l == 11 && _ch == 'w') {
            if (name === 'wz-function') {
                return this.wzLoadToChildColl(child, md.wzFunction, this.statements);
            }
        }
        if (_l == 12 && _ch == 'b') {
            if (name === 'before-async') {
                return this.wzLoadToChildColl(child, md.beforeAsync, this.statements);
            }
        }
        return ok;
    }
    module.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    module.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("module", "kind", this.kind, this.allowedKINDS, this);
        ctx.verifyEnum("module", "ecma", this.ecma, this.allowedECMAS, this);
        var i, i_len=this.resources.length, item;
        for (i=0; i<i_len; i++) {
            item = this.resources[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzVerify(ctx);
        }
        md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    module.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.resources.length, item;
        for (i=0; i<i_len; i++) {
            item = this.resources[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzInitialize(ctx);
        }
        if (this.kind === 'react' || this.kind === 'es6') {
            this.ecma = 'es6';
        }
        this.wzModelState = ctx.modelState || {};
        md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return module;
})(jsBase);


md.module = module;
/**
    element resource
     A known resource (a javascript source), stored in a repository,
     that must be included in the generated artifact.
*/
var resource = (function (jsBase) {
    _inherits(resource, jsBase);
    function resource(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(resource.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, resource);
        this.wzElement = "resource";
    }
    return resource;
})(jsBase);


md.resource = resource;
/**
    element statement
     A generic code statement; the node wzName will be emitted as is.
     The indentation will depend to the node depth.
     Inside an html tag means a text node without line feed
*/
var statement = (function (jsBase) {
    _inherits(statement, jsBase);
    function statement(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(statement.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, statement);
        this.wzElement = "statement";
        // relation statement
        this.statements = [];
    }
    statement.prototype.addStatement = function(name,sourceLineInfo) {
        var retval = new md.statement(name, sourceLineInfo);
        retval.wzParent = this;
        this.statements.push(retval);
        return retval;
    }
    statement.prototype.getStatement = function(name) {
        var found = null;
        this.statements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    statement.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '#') {
            if (name === '#') {
                return this.wzLoadToChildColl(child, md.comment, this.statements);
            }
        }
        if (_l == 1 && _ch == '(') {
            if (name === '(') {
                return this.wzLoadToChildColl(child, md.callOnValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, md.statement, this.statements);
            }
        }
        if (_l == 1 && _ch == '.') {
            if (name === '.') {
                return this.wzLoadToChildColl(child, md.memberAccess, this.statements);
            }
        }
        if (_l == 1 && _ch == '<') {
            if (name === '<') {
                return this.wzLoadToChildColl(child, md.htmlelement, this.statements);
            }
        }
        if (_l == 1 && _ch == '@') {
            if (name === '@') {
                return this.wzLoadToChildColl(child, md.jsPropertyOrValue, this.statements);
            }
        }
        if (_l == 1 && _ch == '[') {
            if (name === '[') {
                return this.wzLoadToChildColl(child, md.jsArray, this.statements);
            }
        }
        if (_l == 1 && _ch == '_') {
            if (name === '_') {
                return this.wzLoadToChildColl(child, md.call, this.statements);
            }
        }
        if (_l == 1 && _ch == 'a') {
            if (name === 'a') {
                return this.wzLoadToChildColl(child, md.a, this.statements);
            }
        }
        if (_l == 1 && _ch == 'b') {
            if (name === 'b') {
                return this.wzLoadToChildColl(child, md.b, this.statements);
            }
        }
        if (_l == 1 && _ch == 'i') {
            if (name === 'i') {
                return this.wzLoadToChildColl(child, md.i, this.statements);
            }
        }
        if (_l == 1 && _ch == 'm') {
            if (name === 'm') {
                return this.wzLoadToChildColl(child, md.method, this.statements);
            }
        }
        if (_l == 1 && _ch == 'p') {
            if (name === 'p') {
                return this.wzLoadToChildColl(child, md.p, this.statements);
            }
        }
        if (_l == 1 && _ch == 'q') {
            if (name === 'q') {
                return this.wzLoadToChildColl(child, md.q, this.statements);
            }
        }
        if (_l == 1 && _ch == 's') {
            if (name === 's') {
                return this.wzLoadToChildColl(child, md.s, this.statements);
            }
        }
        if (_l == 1 && _ch == 'u') {
            if (name === 'u') {
                return this.wzLoadToChildColl(child, md.u, this.statements);
            }
        }
        if (_l == 1 && _ch == '{') {
            if (name === '{') {
                return this.wzLoadToChildColl(child, md.jsObject, this.statements);
            }
        }
        if (_l == 1 && _ch == 'ยง') {
            if (name === 'ยง') {
                return this.wzLoadToChildColl(child, md.component, this.statements);
            }
        }
        if (_l == 2 && _ch == '!') {
            if (name === '!!') {
                return this.wzLoadToChildColl(child, md.assert, this.statements);
            }
        }
        if (_l == 2 && _ch == '#') {
            if (name === '##') {
                return this.wzLoadToChildColl(child, md.commentmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '&') {
            if (name === '&&') {
                return this.wzLoadToChildColl(child, md.and, this.statements);
            }
        }
        if (_l == 2 && _ch == '+') {
            if (name === '++') {
                return this.wzLoadToChildColl(child, md.statementmultiline, this.statements);
            }
        }
        if (_l == 2 && _ch == '.') {
            if (name === '._') {
                return this.wzLoadToChildColl(child, md.memberCall, this.statements);
            }
            else if (name === '.[') {
                return this.wzLoadToChildColl(child, md.memberAccessComputed, this.statements);
            }
        }
        if (_l == 2 && _ch == '=') {
            if (name === '=>') {
                return this.wzLoadToChildColl(child, md.arrowfunction, this.statements);
            }
        }
        if (_l == 2 && _ch == '@') {
            if (name === '@_') {
                return this.wzLoadToChildColl(child, md.decoratorCall, this.statements);
            }
        }
        if (_l == 2 && _ch == 'b') {
            if (name === 'br') {
                return this.wzLoadToChildColl(child, md.br, this.statements);
            }
        }
        if (_l == 2 && _ch == 'd') {
            if (name === 'do') {
                return this.wzLoadToChildColl(child, md.xdo, this.statements);
            }
            else if (name === 'dd') {
                return this.wzLoadToChildColl(child, md.dd, this.statements);
            }
            else if (name === 'dl') {
                return this.wzLoadToChildColl(child, md.dl, this.statements);
            }
            else if (name === 'dt') {
                return this.wzLoadToChildColl(child, md.dt, this.statements);
            }
        }
        if (_l == 2 && _ch == 'e') {
            if (name === 'em') {
                return this.wzLoadToChildColl(child, md.em, this.statements);
            }
        }
        if (_l == 2 && _ch == 'h') {
            if (name === 'h1') {
                return this.wzLoadToChildColl(child, md.h1, this.statements);
            }
            else if (name === 'h2') {
                return this.wzLoadToChildColl(child, md.h2, this.statements);
            }
            else if (name === 'h3') {
                return this.wzLoadToChildColl(child, md.h3, this.statements);
            }
            else if (name === 'h4') {
                return this.wzLoadToChildColl(child, md.h4, this.statements);
            }
            else if (name === 'h5') {
                return this.wzLoadToChildColl(child, md.h5, this.statements);
            }
            else if (name === 'h6') {
                return this.wzLoadToChildColl(child, md.h6, this.statements);
            }
            else if (name === 'hr') {
                return this.wzLoadToChildColl(child, md.hr, this.statements);
            }
        }
        if (_l == 2 && _ch == 'i') {
            if (name === 'if') {
                return this.wzLoadToChildColl(child, md.xif, this.statements);
            }
            else if (name === 'it') {
                return this.wzLoadToChildColl(child, md.it, this.statements);
            }
        }
        if (_l == 2 && _ch == 'j') {
            if (name === 'js') {
                return this.wzLoadToChildColl(child, md.js, this.statements);
            }
        }
        if (_l == 2 && _ch == 'l') {
            if (name === 'li') {
                return this.wzLoadToChildColl(child, md.li, this.statements);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'op') {
                return this.wzLoadToChildColl(child, md.op_minus, this.statements);
            }
            else if (name === 'ol') {
                return this.wzLoadToChildColl(child, md.ol, this.statements);
            }
        }
        if (_l == 2 && _ch == 'r') {
            if (name === 'rp') {
                return this.wzLoadToChildColl(child, md.rp, this.statements);
            }
            else if (name === 'rt') {
                return this.wzLoadToChildColl(child, md.rt, this.statements);
            }
        }
        if (_l == 2 && _ch == 't') {
            if (name === 'td') {
                return this.wzLoadToChildColl(child, md.td, this.statements);
            }
            else if (name === 'th') {
                return this.wzLoadToChildColl(child, md.th, this.statements);
            }
            else if (name === 'tr') {
                return this.wzLoadToChildColl(child, md.tr, this.statements);
            }
        }
        if (_l == 2 && _ch == 'u') {
            if (name === 'ul') {
                return this.wzLoadToChildColl(child, md.ul, this.statements);
            }
        }
        if (_l == 2 && _ch == '|') {
            if (name === '||') {
                return this.wzLoadToChildColl(child, md.or, this.statements);
            }
        }
        if (_l == 3 && _ch == '!') {
            if (name === '!!=') {
                return this.wzLoadToChildColl(child, md.assert_equal, this.statements);
            }
        }
        if (_l == 3 && _ch == 'b') {
            if (name === 'bdi') {
                return this.wzLoadToChildColl(child, md.bdi, this.statements);
            }
            else if (name === 'bdo') {
                return this.wzLoadToChildColl(child, md.bdo, this.statements);
            }
            else if (name === 'big') {
                return this.wzLoadToChildColl(child, md.big, this.statements);
            }
        }
        if (_l == 3 && _ch == 'c') {
            if (name === 'col') {
                return this.wzLoadToChildColl(child, md.col, this.statements);
            }
            else if (name === 'css') {
                return this.wzLoadToChildColl(child, md.css, this.statements);
            }
        }
        if (_l == 3 && _ch == 'd') {
            if (name === 'del') {
                return this.wzLoadToChildColl(child, md.del, this.statements);
            }
            else if (name === 'dfn') {
                return this.wzLoadToChildColl(child, md.dfn, this.statements);
            }
            else if (name === 'div') {
                return this.wzLoadToChildColl(child, md.div, this.statements);
            }
        }
        if (_l == 3 && _ch == 'f') {
            if (name === 'for') {
                return this.wzLoadToChildColl(child, md.xfor, this.statements);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'iif') {
                return this.wzLoadToChildColl(child, md.iif, this.statements);
            }
            else if (name === 'img') {
                return this.wzLoadToChildColl(child, md.img, this.statements);
            }
            else if (name === 'ins') {
                return this.wzLoadToChildColl(child, md.ins, this.statements);
            }
        }
        if (_l == 3 && _ch == 'j') {
            if (name === 'jst') {
                return this.wzLoadToChildColl(child, md.jsonStatementTree, this.statements);
            }
        }
        if (_l == 3 && _ch == 'k') {
            if (name === 'kbd') {
                return this.wzLoadToChildColl(child, md.kbd, this.statements);
            }
        }
        if (_l == 3 && _ch == 'l') {
            if (name === 'let') {
                return this.wzLoadToChildColl(child, md.xlet, this.statements);
            }
            else if (name === 'log') {
                return this.wzLoadToChildColl(child, md.log, this.statements);
            }
        }
        if (_l == 3 && _ch == 'm') {
            if (name === 'map') {
                return this.wzLoadToChildColl(child, md.map, this.statements);
            }
        }
        if (_l == 3 && _ch == 'n') {
            if (name === 'new') {
                return this.wzLoadToChildColl(child, md.xnew, this.statements);
            }
            else if (name === 'nav') {
                return this.wzLoadToChildColl(child, md.nav, this.statements);
            }
        }
        if (_l == 3 && _ch == 'o') {
            if (name === 'op-') {
                return this.wzLoadToChildColl(child, md.op_minus, this.statements);
            }
            else if (name === 'op+') {
                return this.wzLoadToChildColl(child, md.op_plus, this.statements);
            }
            else if (name === 'op*') {
                return this.wzLoadToChildColl(child, md.op_times, this.statements);
            }
            else if (name === 'op/') {
                return this.wzLoadToChildColl(child, md.op_div, this.statements);
            }
            else if (name === 'op^') {
                return this.wzLoadToChildColl(child, md.op_power, this.statements);
            }
            else if (name === 'op%') {
                return this.wzLoadToChildColl(child, md.op_mod, this.statements);
            }
            else if (name === 'op|') {
                return this.wzLoadToChildColl(child, md.op_xor, this.statements);
            }
            else if (name === 'op&') {
                return this.wzLoadToChildColl(child, md.op_xand, this.statements);
            }
            else if (name === 'op>') {
                return this.wzLoadToChildColl(child, md.op_gt, this.statements);
            }
            else if (name === 'op<') {
                return this.wzLoadToChildColl(child, md.op_lt, this.statements);
            }
        }
        if (_l == 3 && _ch == 'p') {
            if (name === 'pre') {
                return this.wzLoadToChildColl(child, md.pre, this.statements);
            }
        }
        if (_l == 3 && _ch == 's') {
            if (name === 'set') {
                return this.wzLoadToChildColl(child, md.set, this.statements);
            }
            else if (name === 'sub') {
                return this.wzLoadToChildColl(child, md.sub, this.statements);
            }
            else if (name === 'sup') {
                return this.wzLoadToChildColl(child, md.sup, this.statements);
            }
        }
        if (_l == 3 && _ch == 't') {
            if (name === 'try') {
                return this.wzLoadToChildColl(child, md.xtry, this.statements);
            }
        }
        if (_l == 3 && _ch == 'v') {
            if (name === 'var') {
                return this.wzLoadToChildColl(child, md.xvar, this.statements);
            }
            else if (name === 'var') {
                return this.wzLoadToChildColl(child, md.xvar, this.statements);
            }
        }
        if (_l == 3 && _ch == 'w') {
            if (name === 'wbr') {
                return this.wzLoadToChildColl(child, md.wbr, this.statements);
            }
        }
        if (_l == 4 && _ch == 'a') {
            if (name === 'abbr') {
                return this.wzLoadToChildColl(child, md.abbr, this.statements);
            }
            else if (name === 'area') {
                return this.wzLoadToChildColl(child, md.area, this.statements);
            }
        }
        if (_l == 4 && _ch == 'b') {
            if (name === 'base') {
                return this.wzLoadToChildColl(child, md.base, this.statements);
            }
            else if (name === 'base') {
                return this.wzLoadToChildColl(child, md.base, this.statements);
            }
            else if (name === 'body') {
                return this.wzLoadToChildColl(child, md.body, this.statements);
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'case') {
                return this.wzLoadToChildColl(child, md.xcase, this.statements);
            }
            else if (name === 'ctor') {
                return this.wzLoadToChildColl(child, md.ctor, this.statements);
            }
            else if (name === 'cite') {
                return this.wzLoadToChildColl(child, md.cite, this.statements);
            }
            else if (name === 'code') {
                return this.wzLoadToChildColl(child, md.code, this.statements);
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'decl') {
                return this.wzLoadToChildColl(child, md.decl, this.statements);
            }
            else if (name === 'data') {
                return this.wzLoadToChildColl(child, md.data, this.statements);
            }
        }
        if (_l == 4 && _ch == 'e') {
            if (name === 'elif') {
                return this.wzLoadToChildColl(child, md.elif, this.statements);
            }
            else if (name === 'else') {
                return this.wzLoadToChildColl(child, md.xelse, this.statements);
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'form') {
                return this.wzLoadToChildColl(child, md.form, this.statements);
            }
        }
        if (_l == 4 && _ch == 'h') {
            if (name === 'head') {
                return this.wzLoadToChildColl(child, md.head, this.statements);
            }
            else if (name === 'html') {
                return this.wzLoadToChildColl(child, md.html, this.statements);
            }
        }
        if (_l == 4 && _ch == 'i') {
            if (name === 'iife') {
                return this.wzLoadToChildColl(child, md.iife, this.statements);
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'link') {
                return this.wzLoadToChildColl(child, md.link, this.statements);
            }
            else if (name === 'log?') {
                return this.wzLoadToChildColl(child, md.inspect, this.statements);
            }
        }
        if (_l == 4 && _ch == 'm') {
            if (name === 'main') {
                return this.wzLoadToChildColl(child, md.main, this.statements);
            }
            else if (name === 'mark') {
                return this.wzLoadToChildColl(child, md.mark, this.statements);
            }
            else if (name === 'menu') {
                return this.wzLoadToChildColl(child, md.menu, this.statements);
            }
            else if (name === 'meta') {
                return this.wzLoadToChildColl(child, md.meta, this.statements);
            }
        }
        if (_l == 4 && _ch == 'o') {
            if (name === 'op==') {
                return this.wzLoadToChildColl(child, md.op_eq, this.statements);
            }
            else if (name === 'op!=') {
                return this.wzLoadToChildColl(child, md.op_noteq, this.statements);
            }
            else if (name === 'op||') {
                return this.wzLoadToChildColl(child, md.op_or, this.statements);
            }
            else if (name === 'op&&') {
                return this.wzLoadToChildColl(child, md.op_and, this.statements);
            }
            else if (name === 'op>=') {
                return this.wzLoadToChildColl(child, md.op_ge, this.statements);
            }
            else if (name === 'op<=') {
                return this.wzLoadToChildColl(child, md.op_le, this.statements);
            }
        }
        if (_l == 4 && _ch == 'r') {
            if (name === 'ruby') {
                return this.wzLoadToChildColl(child, md.ruby, this.statements);
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'samp') {
                return this.wzLoadToChildColl(child, md.samp, this.statements);
            }
            else if (name === 'span') {
                return this.wzLoadToChildColl(child, md.span, this.statements);
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                return this.wzLoadToChildColl(child, md.type, this.statements);
            }
            else if (name === 'test') {
                return this.wzLoadToChildColl(child, md.test, this.statements);
            }
            else if (name === 'then') {
                return this.wzLoadToChildColl(child, md.then, this.statements);
            }
            else if (name === 'time') {
                return this.wzLoadToChildColl(child, md.time, this.statements);
            }
        }
        if (_l == 4 && _ch == 'w') {
            if (name === 'warn') {
                return this.wzLoadToChildColl(child, md.warn, this.statements);
            }
        }
        if (_l == 5 && _ch == 'a') {
            if (name === 'aside') {
                return this.wzLoadToChildColl(child, md.aside, this.statements);
            }
            else if (name === 'audio') {
                return this.wzLoadToChildColl(child, md.audio, this.statements);
            }
            else if (name === 'after') {
                return this.wzLoadToChildColl(child, md.after, this.statements);
            }
        }
        if (_l == 5 && _ch == 'b') {
            if (name === 'block') {
                return this.wzLoadToChildColl(child, md.block, this.statements);
            }
            else if (name === 'break') {
                return this.wzLoadToChildColl(child, md.xbreak, this.statements);
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'const') {
                return this.wzLoadToChildColl(child, md.xconst, this.statements);
            }
            else if (name === 'catch') {
                return this.wzLoadToChildColl(child, md.xcatch, this.statements);
            }
            else if (name === 'class') {
                return this.wzLoadToChildColl(child, md.xclass, this.statements);
            }
            else if (name === 'chalk') {
                return this.wzLoadToChildColl(child, md.chalk, this.statements);
            }
        }
        if (_l == 5 && _ch == 'd') {
            if (name === 'debug') {
                return this.wzLoadToChildColl(child, md.debug, this.statements);
            }
        }
        if (_l == 5 && _ch == 'e') {
            if (name === 'embed') {
                return this.wzLoadToChildColl(child, md.embed, this.statements);
            }
            else if (name === 'error') {
                return this.wzLoadToChildColl(child, md.error, this.statements);
            }
        }
        if (_l == 5 && _ch == 'i') {
            if (name === 'input') {
                return this.wzLoadToChildColl(child, md.input, this.statements);
            }
        }
        if (_l == 5 && _ch == 'l') {
            if (name === 'label') {
                return this.wzLoadToChildColl(child, md.label, this.statements);
            }
            else if (name === 'label') {
                return this.wzLoadToChildColl(child, md.label, this.statements);
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'meter') {
                return this.wzLoadToChildColl(child, md.meter, this.statements);
            }
        }
        if (_l == 5 && _ch == 'o') {
            if (name === 'op===') {
                return this.wzLoadToChildColl(child, md.op_eq_strict, this.statements);
            }
            else if (name === 'op!==') {
                return this.wzLoadToChildColl(child, md.op_noteq_strict, this.statements);
            }
        }
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, md.param, this.statements);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'react') {
                return this.wzLoadToChildColl(child, md.reactComponent, this.statements);
            }
            else if (name === 'ready') {
                return this.wzLoadToChildColl(child, md.ready, this.statements);
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'small') {
                return this.wzLoadToChildColl(child, md.small, this.statements);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'throw') {
                return this.wzLoadToChildColl(child, md.xthrow, this.statements);
            }
            else if (name === 'table') {
                return this.wzLoadToChildColl(child, md.table, this.statements);
            }
            else if (name === 'tbody') {
                return this.wzLoadToChildColl(child, md.tbody, this.statements);
            }
            else if (name === 'tfoot') {
                return this.wzLoadToChildColl(child, md.tfoot, this.statements);
            }
            else if (name === 'thead') {
                return this.wzLoadToChildColl(child, md.thead, this.statements);
            }
            else if (name === 'title') {
                return this.wzLoadToChildColl(child, md.title, this.statements);
            }
            else if (name === 'track') {
                return this.wzLoadToChildColl(child, md.track, this.statements);
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'video') {
                return this.wzLoadToChildColl(child, md.video, this.statements);
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'wzvar') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
            else if (name === 'while') {
                return this.wzLoadToChildColl(child, md.xwhile, this.statements);
            }
            else if (name === 'wzvar') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
        }
        if (_l == 6 && _ch == '@') {
            if (name === '@style') {
                return this.wzLoadToChildColl(child, md._style, this.statements);
            }
        }
        if (_l == 6 && _ch == 'b') {
            if (name === 'button') {
                return this.wzLoadToChildColl(child, md.button, this.statements);
            }
            else if (name === 'before') {
                return this.wzLoadToChildColl(child, md.before, this.statements);
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'canvas') {
                return this.wzLoadToChildColl(child, md.canvas, this.statements);
            }
        }
        if (_l == 6 && _ch == 'd') {
            if (name === 'delete') {
                return this.wzLoadToChildColl(child, md.xdelete, this.statements);
            }
            else if (name === 'dialog') {
                return this.wzLoadToChildColl(child, md.dialog, this.statements);
            }
        }
        if (_l == 6 && _ch == 'e') {
            if (name === 'export') {
                return this.wzLoadToChildColl(child, md.xexport, this.statements);
            }
        }
        if (_l == 6 && _ch == 'f') {
            if (name === 'figure') {
                return this.wzLoadToChildColl(child, md.figure, this.statements);
            }
            else if (name === 'footer') {
                return this.wzLoadToChildColl(child, md.footer, this.statements);
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'header') {
                return this.wzLoadToChildColl(child, md.header, this.statements);
            }
            else if (name === 'html_f') {
                return this.wzLoadToChildColl(child, md.html_f, this.statements);
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'import') {
                return this.wzLoadToChildColl(child, md.ximport, this.statements);
            }
            else if (name === 'iframe') {
                return this.wzLoadToChildColl(child, md.iframe, this.statements);
            }
        }
        if (_l == 6 && _ch == 'k') {
            if (name === 'keygen') {
                return this.wzLoadToChildColl(child, md.keygen, this.statements);
            }
        }
        if (_l == 6 && _ch == 'l') {
            if (name === 'legend') {
                return this.wzLoadToChildColl(child, md.legend, this.statements);
            }
        }
        if (_l == 6 && _ch == 'o') {
            if (name === 'object') {
                return this.wzLoadToChildColl(child, md.object, this.statements);
            }
            else if (name === 'option') {
                return this.wzLoadToChildColl(child, md.option, this.statements);
            }
            else if (name === 'output') {
                return this.wzLoadToChildColl(child, md.output, this.statements);
            }
        }
        if (_l == 6 && _ch == 'r') {
            if (name === 'return') {
                return this.wzLoadToChildColl(child, md.xreturn, this.statements);
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'switch') {
                return this.wzLoadToChildColl(child, md.xswitch, this.statements);
            }
            else if (name === 'script') {
                return this.wzLoadToChildColl(child, md.script, this.statements);
            }
            else if (name === 'select') {
                return this.wzLoadToChildColl(child, md.select, this.statements);
            }
            else if (name === 'source') {
                return this.wzLoadToChildColl(child, md.source, this.statements);
            }
            else if (name === 'strong') {
                return this.wzLoadToChildColl(child, md.strong, this.statements);
            }
        }
        if (_l == 6 && _ch == 't') {
            if (name === 'tohtml') {
                return this.wzLoadToChildColl(child, md.tohtml, this.statements);
            }
        }
        if (_l == 6 && _ch == 'w') {
            if (name === 'wz-var') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
            else if (name === 'wziife') {
                return this.wzLoadToChildColl(child, md.wzIife, this.statements);
            }
            else if (name === 'wz-var') {
                return this.wzLoadToChildColl(child, md.wzVar, this.statements);
            }
        }
        if (_l == 7 && _ch == 'a') {
            if (name === 'address') {
                return this.wzLoadToChildColl(child, md.address, this.statements);
            }
            else if (name === 'article') {
                return this.wzLoadToChildColl(child, md.article, this.statements);
            }
        }
        if (_l == 7 && _ch == 'c') {
            if (name === 'caption') {
                return this.wzLoadToChildColl(child, md.caption, this.statements);
            }
        }
        if (_l == 7 && _ch == 'd') {
            if (name === 'default') {
                return this.wzLoadToChildColl(child, md.xdefault, this.statements);
            }
            else if (name === 'doctype') {
                return this.wzLoadToChildColl(child, md.doctype, this.statements);
            }
            else if (name === 'details') {
                return this.wzLoadToChildColl(child, md.details, this.statements);
            }
        }
        if (_l == 7 && _ch == 'f') {
            if (name === 'foreach') {
                return this.wzLoadToChildColl(child, md.foreach, this.statements);
            }
            else if (name === 'finally') {
                return this.wzLoadToChildColl(child, md.xfinally, this.statements);
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'html_ng') {
                return this.wzLoadToChildColl(child, md.html_ng, this.statements);
            }
            else if (name === 'html_hb') {
                return this.wzLoadToChildColl(child, md.html_hb, this.statements);
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'itasync') {
                return this.wzLoadToChildColl(child, md.itAsync, this.statements);
            }
        }
        if (_l == 7 && _ch == 'l') {
            if (name === 'loginfo') {
                return this.wzLoadToChildColl(child, md.log_info, this.statements);
            }
        }
        if (_l == 7 && _ch == 'p') {
            if (name === 'picture') {
                return this.wzLoadToChildColl(child, md.picture, this.statements);
            }
        }
        if (_l == 7 && _ch == 'r') {
            if (name === 'require') {
                return this.wzLoadToChildColl(child, md.require, this.statements);
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'section') {
                return this.wzLoadToChildColl(child, md.section, this.statements);
            }
            else if (name === 'summary') {
                return this.wzLoadToChildColl(child, md.summary, this.statements);
            }
        }
        if (_l == 7 && _ch == 'w') {
            if (name === 'wz-iife') {
                return this.wzLoadToChildColl(child, md.wzIife, this.statements);
            }
            else if (name === 'wzclass') {
                return this.wzLoadToChildColl(child, md.wzClass, this.statements);
            }
        }
        if (_l == 8 && _ch == 'b') {
            if (name === 'backeach') {
                return this.wzLoadToChildColl(child, md.backeach, this.statements);
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'continue') {
                return this.wzLoadToChildColl(child, md.xcontinue, this.statements);
            }
            else if (name === 'colgroup') {
                return this.wzLoadToChildColl(child, md.colgroup, this.statements);
            }
        }
        if (_l == 8 && _ch == 'd') {
            if (name === 'datalist') {
                return this.wzLoadToChildColl(child, md.datalist, this.statements);
            }
            else if (name === 'describe') {
                return this.wzLoadToChildColl(child, md.describe, this.statements);
            }
        }
        if (_l == 8 && _ch == 'f') {
            if (name === 'function') {
                return this.wzLoadToChildColl(child, md.xfunction, this.statements);
            }
            else if (name === 'fieldset') {
                return this.wzLoadToChildColl(child, md.fieldset, this.statements);
            }
        }
        if (_l == 8 && _ch == 'h') {
            if (name === 'html_dom') {
                return this.wzLoadToChildColl(child, md.html_dom, this.statements);
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'it-async') {
                return this.wzLoadToChildColl(child, md.itAsync, this.statements);
            }
        }
        if (_l == 8 && _ch == 'l') {
            if (name === 'log-info') {
                return this.wzLoadToChildColl(child, md.log_info, this.statements);
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'menuitem') {
                return this.wzLoadToChildColl(child, md.menuitem, this.statements);
            }
        }
        if (_l == 8 && _ch == 'n') {
            if (name === 'noscript') {
                return this.wzLoadToChildColl(child, md.noscript, this.statements);
            }
        }
        if (_l == 8 && _ch == 'o') {
            if (name === 'optgroup') {
                return this.wzLoadToChildColl(child, md.optgroup, this.statements);
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                return this.wzLoadToChildColl(child, md.property, this.statements);
            }
            else if (name === 'progress') {
                return this.wzLoadToChildColl(child, md.progress, this.statements);
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'textarea') {
                return this.wzLoadToChildColl(child, md.textarea, this.statements);
            }
        }
        if (_l == 8 && _ch == 'w') {
            if (name === 'wz-class') {
                return this.wzLoadToChildColl(child, md.wzClass, this.statements);
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'aftereach') {
                return this.wzLoadToChildColl(child, md.afterEach, this.statements);
            }
        }
        if (_l == 9 && _ch == 'w') {
            if (name === 'wzrequire') {
                return this.wzLoadToChildColl(child, md.wzRequire, this.statements);
            }
        }
        if (_l == 10 && _ch == 'a') {
            if (name === 'afterasync') {
                return this.wzLoadToChildColl(child, md.afterAsync, this.statements);
            }
            else if (name === 'after-each') {
                return this.wzLoadToChildColl(child, md.afterEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'b') {
            if (name === 'blockquote') {
                return this.wzLoadToChildColl(child, md.blockquote, this.statements);
            }
            else if (name === 'beforeeach') {
                return this.wzLoadToChildColl(child, md.beforeEach, this.statements);
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'figcaption') {
                return this.wzLoadToChildColl(child, md.figcaption, this.statements);
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'superagent') {
                return this.wzLoadToChildColl(child, md.superagent, this.statements);
            }
        }
        if (_l == 10 && _ch == 'w') {
            if (name === 'wzfunction') {
                return this.wzLoadToChildColl(child, md.wzFunction, this.statements);
            }
            else if (name === 'wz-require') {
                return this.wzLoadToChildColl(child, md.wzRequire, this.statements);
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'after-async') {
                return this.wzLoadToChildColl(child, md.afterAsync, this.statements);
            }
        }
        if (_l == 11 && _ch == 'b') {
            if (name === 'beforeasync') {
                return this.wzLoadToChildColl(child, md.beforeAsync, this.statements);
            }
            else if (name === 'before-each') {
                return this.wzLoadToChildColl(child, md.beforeEach, this.statements);
            }
        }
        if (_l == 11 && _ch == 'w') {
            if (name === 'wz-function') {
                return this.wzLoadToChildColl(child, md.wzFunction, this.statements);
            }
        }
        if (_l == 12 && _ch == 'b') {
            if (name === 'before-async') {
                return this.wzLoadToChildColl(child, md.beforeAsync, this.statements);
            }
        }
        return ok;
    }
    statement.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    statement.prototype.wzVerify = function(ctx) {
        var i, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzVerify(ctx);
        }
        md.jsBase.prototype.wzVerify.call(this, ctx);
    }
    statement.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.statements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.statements[i];
            item.wzInitialize(ctx);
        }
        md.jsBase.prototype.wzInitialize.call(this, ctx);
    }
    return statement;
})(jsBase);


md.statement = statement;
/**
    element statementmultiline
     Inside an html tag means a text node preceded by a line feed
*/
var statementmultiline = (function (statement) {
    _inherits(statementmultiline, statement);
    function statementmultiline(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(statementmultiline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, statementmultiline);
        this.wzElement = "statementmultiline";
    }
    return statementmultiline;
})(statement);


md.statementmultiline = statementmultiline;
// element comment
var comment = (function (statement) {
    _inherits(comment, statement);
    function comment(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    return comment;
})(statement);


md.comment = comment;
// element commentmultiline
var commentmultiline = (function (statement) {
    _inherits(commentmultiline, statement);
    function commentmultiline(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(commentmultiline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, commentmultiline);
        this.wzElement = "commentmultiline";
    }
    return commentmultiline;
})(statement);


md.commentmultiline = commentmultiline;
/**
    element xvar
     ittf:
     var i
     var i = 0
     var f_alpha
     function
     param p
     var obj_beta
     {                |
     @ name stefi
     js:
     var i;
     var i = 0;
     var alpha = function(p) {
     ...
     };
     var obj_beta = { name: 'stefi' };
*/
var xvar = (function (statement) {
    _inherits(xvar, statement);
    function xvar(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xvar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xvar);
        this.wzElement = "xvar";
    }
    xvar.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xvar.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return xvar;
})(statement);


md.xvar = xvar;
/**
    element decl
     ittf:
     var i
     decl x = 0
     decl a
     {
     js:
     var i, x = 0, a = {};
*/
var decl = (function (statement) {
    _inherits(decl, statement);
    function decl(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(decl.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decl);
        this.wzElement = "decl";
    }
    return decl;
})(statement);


md.decl = decl;
// element xconst
var xconst = (function (statement) {
    _inherits(xconst, statement);
    function xconst(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xconst.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xconst);
        this.wzElement = "xconst";
    }
    return xconst;
})(statement);


md.xconst = xconst;
// element xlet
var xlet = (function (statement) {
    _inherits(xlet, statement);
    function xlet(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xlet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xlet);
        this.wzElement = "xlet";
    }
    return xlet;
})(statement);


md.xlet = xlet;
/**
    element jsObject
     ittf:
     {
     @ name 'stefi'
     @ birth 1957
     @ friends
     [
     {
     @ name 'mario'
     @ birth 1957
     {
     @ name 'arturo'
     @ birth 1955
     @ age
     function
     return new Date().year() - birth
    
*/
var jsObject = (function (statement) {
    _inherits(jsObject, statement);
    function jsObject(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(jsObject.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsObject);
        this.wzElement = "jsObject";
    }
    return jsObject;
})(statement);


md.jsObject = jsObject;
// element jsArray
var jsArray = (function (statement) {
    _inherits(jsArray, statement);
    function jsArray(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(jsArray.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsArray);
        this.wzElement = "jsArray";
    }
    return jsArray;
})(statement);


md.jsArray = jsArray;
// element jsPropertyOrValue
var jsPropertyOrValue = (function (statement) {
    _inherits(jsPropertyOrValue, statement);
    function jsPropertyOrValue(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(jsPropertyOrValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsPropertyOrValue);
        this.wzElement = "jsPropertyOrValue";
    }
    return jsPropertyOrValue;
})(statement);


md.jsPropertyOrValue = jsPropertyOrValue;
/**
    element jsonStatementTree
     The wzName contains a stringified node tree of statements
*/
var jsonStatementTree = (function (statement) {
    _inherits(jsonStatementTree, statement);
    function jsonStatementTree(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(jsonStatementTree.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsonStatementTree);
        this.wzElement = "jsonStatementTree";
    }
    return jsonStatementTree;
})(statement);


md.jsonStatementTree = jsonStatementTree;
// element require
var require = (function (statement) {
    _inherits(require, statement);
    function require(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(require.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, require);
        this.wzElement = "require";
    }
    return require;
})(statement);


md.require = require;
// element ximport
var ximport = (function (statement) {
    _inherits(ximport, statement);
    function ximport(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ximport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ximport);
        this.wzElement = "ximport";
    }
    return ximport;
})(statement);


md.ximport = ximport;
// element xexport
var xexport = (function (statement) {
    _inherits(xexport, statement);
    function xexport(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xexport.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xexport);
        this.wzElement = "xexport";
        // relation param
        this.params = [];
    }
    xexport.prototype.addParam = function(name,sourceLineInfo) {
        var retval = new md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    xexport.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xexport.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, md.param, this.params);
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xexport.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xexport.prototype.wzVerify = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    xexport.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        console.log('wzInitialize', this.wzName);
        var tokens = this.wzName.split(' ');
        if (tokens.length > 1) {
            if (tokens[0] == 'default') {
                this.__default = true;
                if (tokens[1] == 'function') {
                    this.__function = true;
                }
            }
            else if (tokens[0] == 'function') {
                this.__default = false;
                this.__function = true;
                this.__name = tokens[1];
            }
        }
        if (this.__function) {
            console.log('this.__function', this.__default, this.__function, this.__name);
        }
        md.statement.prototype.wzInitialize.call(this, ctx);
    }
    xexport.prototype.getParams = function() {
        var ret = [];
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            ret.push(item.wzName);
        }
        return ret;
    }
    return xexport;
})(statement);


md.xexport = xexport;
// element block
var block = (function (statement) {
    _inherits(block, statement);
    function block(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(block.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, block);
        this.wzElement = "block";
    }
    return block;
})(statement);


md.block = block;
// element set
var set = (function (statement) {
    _inherits(set, statement);
    function set(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(set.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, set);
        this.wzElement = "set";
    }
    return set;
})(statement);


md.set = set;
// element xdelete
var xdelete = (function (statement) {
    _inherits(xdelete, statement);
    function xdelete(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xdelete.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdelete);
        this.wzElement = "xdelete";
    }
    return xdelete;
})(statement);


md.xdelete = xdelete;
/**
    element xif
     ittf:
     if a === b
     elif a === c
     else
     js:
     if ( a === b ) {
     }
     else if ( a === c ) {
     }
     else {
     }
*/
var xif = (function (statement) {
    _inherits(xif, statement);
    function xif(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xif);
        this.wzElement = "xif";
    }
    return xif;
})(statement);


md.xif = xif;
// element elif
var elif = (function (statement) {
    _inherits(elif, statement);
    function elif(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(elif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, elif);
        this.wzElement = "elif";
    }
    return elif;
})(statement);


md.elif = elif;
// element xelse
var xelse = (function (statement) {
    _inherits(xelse, statement);
    function xelse(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xelse.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xelse);
        this.wzElement = "xelse";
    }
    return xelse;
})(statement);


md.xelse = xelse;
// element xfor
var xfor = (function (statement) {
    _inherits(xfor, statement);
    function xfor(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xfor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfor);
        this.wzElement = "xfor";
    }
    return xfor;
})(statement);


md.xfor = xfor;
// element foreach
var foreach = (function (statement) {
    _inherits(foreach, statement);
    function foreach(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(foreach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, foreach);
        this.wzElement = "foreach";
    }
    return foreach;
})(statement);


md.foreach = foreach;
// element backeach
var backeach = (function (statement) {
    _inherits(backeach, statement);
    function backeach(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(backeach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, backeach);
        this.wzElement = "backeach";
    }
    return backeach;
})(statement);


md.backeach = backeach;
// element xbreak
var xbreak = (function (statement) {
    _inherits(xbreak, statement);
    function xbreak(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xbreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xbreak);
        this.wzElement = "xbreak";
    }
    return xbreak;
})(statement);


md.xbreak = xbreak;
// element xcontinue
var xcontinue = (function (statement) {
    _inherits(xcontinue, statement);
    function xcontinue(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xcontinue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcontinue);
        this.wzElement = "xcontinue";
    }
    return xcontinue;
})(statement);


md.xcontinue = xcontinue;
// element label
var label = (function (statement) {
    _inherits(label, statement);
    function label(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(label.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, label);
        this.wzElement = "label";
    }
    return label;
})(statement);


md.label = label;
// element xwhile
var xwhile = (function (statement) {
    _inherits(xwhile, statement);
    function xwhile(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xwhile.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xwhile);
        this.wzElement = "xwhile";
    }
    return xwhile;
})(statement);


md.xwhile = xwhile;
// element xdo
var xdo = (function (statement) {
    _inherits(xdo, statement);
    function xdo(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xdo.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdo);
        this.wzElement = "xdo";
    }
    return xdo;
})(statement);


md.xdo = xdo;
// element xswitch
var xswitch = (function (statement) {
    _inherits(xswitch, statement);
    function xswitch(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xswitch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xswitch);
        this.wzElement = "xswitch";
    }
    return xswitch;
})(statement);


md.xswitch = xswitch;
// element xcase
var xcase = (function (statement) {
    _inherits(xcase, statement);
    function xcase(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xcase.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcase);
        this.wzElement = "xcase";
    }
    return xcase;
})(statement);


md.xcase = xcase;
// element xdefault
var xdefault = (function (statement) {
    _inherits(xdefault, statement);
    function xdefault(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xdefault.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdefault);
        this.wzElement = "xdefault";
    }
    return xdefault;
})(statement);


md.xdefault = xdefault;
// element xtry
var xtry = (function (statement) {
    _inherits(xtry, statement);
    function xtry(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xtry.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xtry);
        this.wzElement = "xtry";
    }
    return xtry;
})(statement);


md.xtry = xtry;
// element xcatch
var xcatch = (function (statement) {
    _inherits(xcatch, statement);
    function xcatch(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xcatch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xcatch);
        this.wzElement = "xcatch";
    }
    return xcatch;
})(statement);


md.xcatch = xcatch;
// element xfinally
var xfinally = (function (statement) {
    _inherits(xfinally, statement);
    function xfinally(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xfinally.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfinally);
        this.wzElement = "xfinally";
    }
    return xfinally;
})(statement);


md.xfinally = xfinally;
// element xthrow
var xthrow = (function (statement) {
    _inherits(xthrow, statement);
    function xthrow(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xthrow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xthrow);
        this.wzElement = "xthrow";
    }
    return xthrow;
})(statement);


md.xthrow = xthrow;
// element xfunction
var xfunction = (function (statement) {
    _inherits(xfunction, statement);
    function xfunction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xfunction);
        this.wzElement = "xfunction";
        // relation param
        this.params = [];
    }
    xfunction.prototype.addParam = function(name,sourceLineInfo) {
        var retval = new md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    xfunction.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xfunction.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, md.param, this.params);
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xfunction.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xfunction.prototype.wzVerify = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    xfunction.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        md.statement.prototype.wzInitialize.call(this, ctx);
    }
    xfunction.prototype.getParams = function() {
        var ret = [];
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            ret.push(item.wzName);
        }
        return ret;
    }
    return xfunction;
})(statement);


md.xfunction = xfunction;
// element arrowfunction
var arrowfunction = (function (xfunction) {
    _inherits(arrowfunction, xfunction);
    function arrowfunction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(arrowfunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arrowfunction);
        this.wzElement = "arrowfunction";
    }
    return arrowfunction;
})(xfunction);


md.arrowfunction = arrowfunction;
// element xreturn
var xreturn = (function (statement) {
    _inherits(xreturn, statement);
    function xreturn(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xreturn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xreturn);
        this.wzElement = "xreturn";
    }
    return xreturn;
})(statement);


md.xreturn = xreturn;
/**
    element xclass
     A javascript class
*/
var xclass = (function (statement) {
    _inherits(xclass, statement);
    function xclass(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xclass.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xclass);
        this.wzElement = "xclass";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.super = null;
    }
    xclass.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 's') {
            if (name === 'super') {
                this.super = child.v; return true;
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xclass.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xclass.prototype.wzInitialize = function(ctx) {
        ctx.modelState = ctx.modelState || {};
        ctx.modelState.hasClasses = true;
        var tokens = this.wzName.split(':');
        if (tokens.length == 2) {
            this.wzName = tokens[0];
            this.super = tokens[1];
        }
        md.statement.prototype.wzInitialize.call(this, ctx);
    }
    xclass.prototype.findCtor = function() {
        return _.find(this.statements, function(item) { return item.wzElement === 'ctor' });
    }
    return xclass;
})(statement);


md.xclass = xclass;
// element ctor
var ctor = (function (xfunction) {
    _inherits(ctor, xfunction);
    function ctor(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ctor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ctor);
        this.wzElement = "ctor";
        // relation base
        this.bases = [];
    }
    ctor.prototype.addBase = function(name,sourceLineInfo) {
        var retval = new md.base(name, sourceLineInfo);
        retval.wzParent = this;
        this.bases.push(retval);
        return retval;
    }
    ctor.prototype.getBase = function(name) {
        var found = null;
        this.bases.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    ctor.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'b') {
            if (name === 'base') {
                return this.wzLoadToChildColl(child, md.base, this.bases);
            }
        }
        ok = md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    ctor.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    ctor.prototype.wzVerify = function(ctx) {
        var i, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            item.wzVerify(ctx);
        }
        md.xfunction.prototype.wzVerify.call(this, ctx);
    }
    ctor.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            item.wzInitialize(ctx);
        }
        md.xfunction.prototype.wzInitialize.call(this, ctx);
    }
    ctor.prototype.getBaseArgs = function() {
        var ret = [];
        var i, i_len=this.bases.length, item;
        for (i=0; i<i_len; i++) {
            item = this.bases[i];
            ret.push(item.wzName);
        }
        return ret;
    }
    return ctor;
})(xfunction);


md.ctor = ctor;
// element base
var base = (function (xfunction) {
    _inherits(base, xfunction);
    function base(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(base.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, base);
        this.wzElement = "base";
    }
    return base;
})(xfunction);


md.base = base;
// element method
var method = (function (xfunction) {
    _inherits(method, xfunction);
    function method(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(method.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, method);
        this.wzElement = "method";
        this.static = false;
    }
    method.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 's') {
            if (name === 'static') {
                this.static = parseboolean(child.v, true, child); return true;
            }
        }
        ok = md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    method.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return method;
})(xfunction);


md.method = method;
// element property
var property = (function (xfunction) {
    _inherits(property, xfunction);
    function property(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(property.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, property);
        this.wzElement = "property";
        this.static = false;
    }
    property.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 6 && _ch == 's') {
            if (name === 'static') {
                this.static = parseboolean(child.v, true, child); return true;
            }
        }
        ok = md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    property.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return property;
})(xfunction);


md.property = property;
// element iife
var iife = (function (xfunction) {
    _inherits(iife, xfunction);
    function iife(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(iife.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, iife);
        this.wzElement = "iife";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.unary_prefix = null;
        // relation arg
        this.args = [];
    }
    iife.prototype.addArg = function(name,sourceLineInfo) {
        var retval = new md.arg(name, sourceLineInfo);
        retval.wzParent = this;
        this.args.push(retval);
        return retval;
    }
    iife.prototype.getArg = function(name) {
        var found = null;
        this.args.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    iife.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 'a') {
            if (name === 'arg') {
                return this.wzLoadToChildColl(child, md.arg, this.args);
            }
        }
        if (_l == 12 && _ch == 'u') {
            if (name === 'unary-prefix') {
                this.unary_prefix = child.v; return true;
            }
            else if (name === 'unary_prefix') {
                this.unary_prefix = child.v; return true;
            }
        }
        ok = md.xfunction.prototype.loadChild.call(this, child);
        return ok;
    }
    iife.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    iife.prototype.wzVerify = function(ctx) {
        var i, i_len=this.args.length, item;
        for (i=0; i<i_len; i++) {
            item = this.args[i];
            item.wzVerify(ctx);
        }
        md.xfunction.prototype.wzVerify.call(this, ctx);
    }
    iife.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.args.length, item;
        for (i=0; i<i_len; i++) {
            item = this.args[i];
            item.wzInitialize(ctx);
        }
        md.xfunction.prototype.wzInitialize.call(this, ctx);
    }
    iife.prototype.getArgs = function() {
        var ret = [];
        var i, i_len=this.args.length, item;
        for (i=0; i<i_len; i++) {
            item = this.args[i];
            ret.push(item.wzName);
        }
        return ret;
    }
    return iife;
})(xfunction);


md.iife = iife;
/**
    element xnew
     ittf:
     var h
     new Hello
     var j
     new Hello
     function
     param p
     + ...
     js:
     var h = new Hello();
     var j = new Hello(function(p) { ... });
*/
var xnew = (function (statement) {
    _inherits(xnew, statement);
    function xnew(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xnew.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xnew);
        this.wzElement = "xnew";
        // relation param
        this.params = [];
    }
    xnew.prototype.addParam = function(name,sourceLineInfo) {
        var retval = new md.param(name, sourceLineInfo);
        retval.wzParent = this;
        this.params.push(retval);
        return retval;
    }
    xnew.prototype.getParam = function(name) {
        var found = null;
        this.params.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    xnew.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 5 && _ch == 'p') {
            if (name === 'param') {
                return this.wzLoadToChildColl(child, md.param, this.params);
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    xnew.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    xnew.prototype.wzVerify = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzVerify(ctx);
        }
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    xnew.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.params.length, item;
        for (i=0; i<i_len; i++) {
            item = this.params[i];
            item.wzInitialize(ctx);
        }
        md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return xnew;
})(statement);


md.xnew = xnew;
// element type
var type = (function (statement) {
    _inherits(type, statement);
    function type(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(type.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, type);
        this.wzElement = "type";
    }
    return type;
})(statement);


md.type = type;
// element param
var param = (function (jsBase) {
    _inherits(param, jsBase);
    function param(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(param.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, param);
        this.wzElement = "param";
    }
    return param;
})(jsBase);


md.param = param;
// element arg
var arg = (function (jsBase) {
    _inherits(arg, jsBase);
    function arg(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(arg.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, arg);
        this.wzElement = "arg";
    }
    return arg;
})(jsBase);


md.arg = arg;
/**
    element call
     A function call.
     ittf:
     _ sayHello('stefi', 10)
     _ init
     {
     @ key 0
     function
     param value
     return calc(value)
*/
var call = (function (statement) {
    _inherits(call, statement);
    function call(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(call.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, call);
        this.wzElement = "call";
    }
    return call;
})(statement);


md.call = call;
/**
    element memberCall
     ittf:
     set value
     _ init
     ._calc
     js:
     value = init().calc()
*/
var memberCall = (function (statement) {
    _inherits(memberCall, statement);
    function memberCall(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(memberCall.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberCall);
        this.wzElement = "memberCall";
    }
    return memberCall;
})(statement);


md.memberCall = memberCall;
/**
    element decoratorCall
     ittf:
     @_ alpha
     @ 200
     function
     return 'a';
     js:
     @alpha(200, function() { return 'a'; })
*/
var decoratorCall = (function (statement) {
    _inherits(decoratorCall, statement);
    function decoratorCall(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(decoratorCall.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decoratorCall);
        this.wzElement = "decoratorCall";
    }
    return decoratorCall;
})(statement);


md.decoratorCall = decoratorCall;
/**
    element callOnValue
     ittf:
     _ getFunction()
     (
     @ 'stefi'
     js:
     getFunction()('stefi')
*/
var callOnValue = (function (statement) {
    _inherits(callOnValue, statement);
    function callOnValue(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(callOnValue.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, callOnValue);
        this.wzElement = "callOnValue";
    }
    return callOnValue;
})(statement);


md.callOnValue = callOnValue;
/**
    element memberAccess
     ittf:
     set name = obj
     . name
     js:
     name = obj.name
*/
var memberAccess = (function (statement) {
    _inherits(memberAccess, statement);
    function memberAccess(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(memberAccess.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberAccess);
        this.wzElement = "memberAccess";
    }
    return memberAccess;
})(statement);


md.memberAccess = memberAccess;
/**
    element memberAccessComputed
     ittf:
     set name = obj
     .[ name
     js:
     name = obj[name]
*/
var memberAccessComputed = (function (statement) {
    _inherits(memberAccessComputed, statement);
    function memberAccessComputed(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(memberAccessComputed.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, memberAccessComputed);
        this.wzElement = "memberAccessComputed";
    }
    return memberAccessComputed;
})(statement);


md.memberAccessComputed = memberAccessComputed;
/**
    element iif
     ittf:
     iif a === b
     then 0
     else 1
     js:
     ( a === b ) ? 0 : 1
*/
var iif = (function (statement) {
    _inherits(iif, statement);
    function iif(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(iif.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, iif);
        this.wzElement = "iif";
    }
    return iif;
})(statement);


md.iif = iif;
// element test
var test = (function (statement) {
    _inherits(test, statement);
    function test(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(test.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, test);
        this.wzElement = "test";
    }
    return test;
})(statement);


md.test = test;
// element then
var then = (function (statement) {
    _inherits(then, statement);
    function then(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(then.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, then);
        this.wzElement = "then";
    }
    return then;
})(statement);


md.then = then;
// element or
var or = (function (statement) {
    _inherits(or, statement);
    function or(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(or.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, or);
        this.wzElement = "or";
    }
    return or;
})(statement);


md.or = or;
// element and
var and = (function (statement) {
    _inherits(and, statement);
    function and(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(and.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, and);
        this.wzElement = "and";
    }
    return and;
})(statement);


md.and = and;
// element op_eq_strict
var op_eq_strict = (function (statement) {
    _inherits(op_eq_strict, statement);
    function op_eq_strict(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_eq_strict.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_eq_strict);
        this.wzElement = "op_eq_strict";
    }
    return op_eq_strict;
})(statement);


md.op_eq_strict = op_eq_strict;
// element op_noteq_strict
var op_noteq_strict = (function (statement) {
    _inherits(op_noteq_strict, statement);
    function op_noteq_strict(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_noteq_strict.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_noteq_strict);
        this.wzElement = "op_noteq_strict";
    }
    return op_noteq_strict;
})(statement);


md.op_noteq_strict = op_noteq_strict;
// element op_eq
var op_eq = (function (statement) {
    _inherits(op_eq, statement);
    function op_eq(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_eq.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_eq);
        this.wzElement = "op_eq";
    }
    return op_eq;
})(statement);


md.op_eq = op_eq;
// element op_noteq
var op_noteq = (function (statement) {
    _inherits(op_noteq, statement);
    function op_noteq(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_noteq.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_noteq);
        this.wzElement = "op_noteq";
    }
    return op_noteq;
})(statement);


md.op_noteq = op_noteq;
// element op_or
var op_or = (function (statement) {
    _inherits(op_or, statement);
    function op_or(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_or.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_or);
        this.wzElement = "op_or";
    }
    return op_or;
})(statement);


md.op_or = op_or;
// element op_and
var op_and = (function (statement) {
    _inherits(op_and, statement);
    function op_and(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_and.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_and);
        this.wzElement = "op_and";
    }
    return op_and;
})(statement);


md.op_and = op_and;
// element op_minus
var op_minus = (function (statement) {
    _inherits(op_minus, statement);
    function op_minus(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_minus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_minus);
        this.wzElement = "op_minus";
    }
    return op_minus;
})(statement);


md.op_minus = op_minus;
// element op_plus
var op_plus = (function (statement) {
    _inherits(op_plus, statement);
    function op_plus(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_plus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_plus);
        this.wzElement = "op_plus";
    }
    return op_plus;
})(statement);


md.op_plus = op_plus;
// element op_times
var op_times = (function (statement) {
    _inherits(op_times, statement);
    function op_times(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_times.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_times);
        this.wzElement = "op_times";
    }
    return op_times;
})(statement);


md.op_times = op_times;
// element op_div
var op_div = (function (statement) {
    _inherits(op_div, statement);
    function op_div(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_div.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_div);
        this.wzElement = "op_div";
    }
    return op_div;
})(statement);


md.op_div = op_div;
// element op_power
var op_power = (function (statement) {
    _inherits(op_power, statement);
    function op_power(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_power.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_power);
        this.wzElement = "op_power";
    }
    return op_power;
})(statement);


md.op_power = op_power;
// element op_mod
var op_mod = (function (statement) {
    _inherits(op_mod, statement);
    function op_mod(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_mod.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_mod);
        this.wzElement = "op_mod";
    }
    return op_mod;
})(statement);


md.op_mod = op_mod;
// element op_xor
var op_xor = (function (statement) {
    _inherits(op_xor, statement);
    function op_xor(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_xor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_xor);
        this.wzElement = "op_xor";
    }
    return op_xor;
})(statement);


md.op_xor = op_xor;
// element op_xand
var op_xand = (function (statement) {
    _inherits(op_xand, statement);
    function op_xand(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_xand.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_xand);
        this.wzElement = "op_xand";
    }
    return op_xand;
})(statement);


md.op_xand = op_xand;
// element op_gt
var op_gt = (function (statement) {
    _inherits(op_gt, statement);
    function op_gt(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_gt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_gt);
        this.wzElement = "op_gt";
    }
    return op_gt;
})(statement);


md.op_gt = op_gt;
// element op_ge
var op_ge = (function (statement) {
    _inherits(op_ge, statement);
    function op_ge(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_ge.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_ge);
        this.wzElement = "op_ge";
    }
    return op_ge;
})(statement);


md.op_ge = op_ge;
// element op_lt
var op_lt = (function (statement) {
    _inherits(op_lt, statement);
    function op_lt(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_lt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_lt);
        this.wzElement = "op_lt";
    }
    return op_lt;
})(statement);


md.op_lt = op_lt;
// element op_le
var op_le = (function (statement) {
    _inherits(op_le, statement);
    function op_le(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(op_le.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, op_le);
        this.wzElement = "op_le";
    }
    return op_le;
})(statement);


md.op_le = op_le;
// element wzIife
var wzIife = (function (iife) {
    _inherits(wzIife, iife);
    function wzIife(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wzIife.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzIife);
        this.wzElement = "wzIife";
    }
    return wzIife;
})(iife);


md.wzIife = wzIife;
// element wzRequire
var wzRequire = (function (statement) {
    _inherits(wzRequire, statement);
    function wzRequire(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wzRequire.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzRequire);
        this.wzElement = "wzRequire";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.from = null;
    }
    wzRequire.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'f') {
            if (name === 'from') {
                this.from = child.v; return true;
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    wzRequire.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return wzRequire;
})(statement);


md.wzRequire = wzRequire;
// element wzVar
var wzVar = (function (xvar) {
    _inherits(wzVar, xvar);
    function wzVar(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wzVar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzVar);
        this.wzElement = "wzVar";
    }
    return wzVar;
})(xvar);


md.wzVar = wzVar;
// element wzFunction
var wzFunction = (function (xfunction) {
    _inherits(wzFunction, xfunction);
    function wzFunction(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wzFunction.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzFunction);
        this.wzElement = "wzFunction";
    }
    return wzFunction;
})(xfunction);


md.wzFunction = wzFunction;
// element wzClass
var wzClass = (function (xclass) {
    _inherits(wzClass, xclass);
    function wzClass(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wzClass.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wzClass);
        this.wzElement = "wzClass";
    }
    return wzClass;
})(xclass);


md.wzClass = wzClass;
// element component
var component = (function (statement) {
    _inherits(component, statement);
    function component(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(component.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, component);
        this.wzElement = "component";
    }
    component.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    component.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return component;
})(statement);


md.component = component;
// element reactComponent
var reactComponent = (function (component) {
    _inherits(reactComponent, component);
    function reactComponent(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(reactComponent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reactComponent);
        this.wzElement = "reactComponent";
    }
    return reactComponent;
})(component);


md.reactComponent = reactComponent;
// element htmlelement
var htmlelement = (function (statement) {
    _inherits(htmlelement, statement);
    function htmlelement(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(htmlelement.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htmlelement);
        this.wzElement = "htmlelement";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoCapitalize = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoCorrect = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.property = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.itemProp = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.itemScope = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.itemType = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.itemRef = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.itemID = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.unselectable = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.results = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoSave = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.class = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.aria__ = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.data__ = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.accept = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.acceptCharset = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.accessKey = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.action = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.allowFullScreen = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.allowTransparency = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.alt = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.async = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoComplete = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoFocus = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.autoPlay = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.capture = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.cellPadding = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.cellSpacing = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.charSet = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.challenge = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.checked = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.classID = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.className = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.cols = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.colSpan = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.content = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.contentEditable = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.contextMenu = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.controls = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.coords = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.crossOrigin = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.data = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.dateTime = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.defer = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.dir = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.disabled = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.download = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.draggable = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.encType = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.form = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.formAction = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.formEncType = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.formMethod = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.formNoValidate = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.formTarget = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.frameBorder = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.headers = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.height = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.hidden = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.high = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.href = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.hrefLang = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.htmlFor = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.httpEquiv = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.icon = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.id = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.inputMode = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.keyParams = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.keyType = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this._label = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.lang = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.list = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.loop = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.low = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.manifest = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.marginHeight = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.marginWidth = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.max = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.maxLength = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.media = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.mediaGroup = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.method = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.min = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.minLength = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.multiple = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.muted = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.name = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.noValidate = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.open = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.optimum = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.pattern = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.placeholder = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.poster = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.preload = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.radioGroup = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.readOnly = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.rel = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.required = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.role = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.rows = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.rowSpan = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.sandbox = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.scope = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.scoped = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.scrolling = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.seamless = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.selected = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.shape = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.size = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.sizes = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this._span = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.spellCheck = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.src = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.srcDoc = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.srcSet = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.start = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.step = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.style = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this._summary = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.tabIndex = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.target = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.title = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.type = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.useMap = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.value = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.width = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.wmode = null;
        // TODO avoid this declaration, attributes should be tested for undefined not null
        this.wrap = null;
    }
    htmlelement.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                this.id = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'alt') {
                this.alt = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'd') {
            if (name === 'dir') {
                this.dir = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'l') {
            if (name === 'low') {
                this.low = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'm') {
            if (name === 'max') {
                this.max = child.v; return true;
            }
            else if (name === 'min') {
                this.min = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'rel') {
                this.rel = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 's') {
            if (name === 'src') {
                this.src = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'c') {
            if (name === 'cols') {
                this.cols = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'd') {
            if (name === 'data') {
                this.data = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'f') {
            if (name === 'form') {
                this.form = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'h') {
            if (name === 'high') {
                this.high = child.v; return true;
            }
            else if (name === 'href') {
                this.href = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'i') {
            if (name === 'icon') {
                this.icon = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'l') {
            if (name === 'lang') {
                this.lang = child.v; return true;
            }
            else if (name === 'list') {
                this.list = child.v; return true;
            }
            else if (name === 'loop') {
                this.loop = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'n') {
            if (name === 'name') {
                this.name = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'o') {
            if (name === 'open') {
                this.open = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'r') {
            if (name === 'role') {
                this.role = child.v; return true;
            }
            else if (name === 'rows') {
                this.rows = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'size') {
                this.size = child.v; return true;
            }
            else if (name === 'step') {
                this.step = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 't') {
            if (name === 'type') {
                this.type = child.v; return true;
            }
        }
        if (_l == 4 && _ch == 'w') {
            if (name === 'wrap') {
                this.wrap = child.v; return true;
            }
        }
        if (_l == 5 && _ch == '@') {
            if (name === '@span') {
                this._span = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'a') {
            if (name === 'async') {
                this.async = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'c') {
            if (name === 'class') {
                this.class = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'd') {
            if (name === 'defer') {
                this.defer = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'm') {
            if (name === 'media') {
                this.media = child.v; return true;
            }
            else if (name === 'muted') {
                this.muted = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 's') {
            if (name === 'scope') {
                this.scope = child.v; return true;
            }
            else if (name === 'shape') {
                this.shape = child.v; return true;
            }
            else if (name === 'sizes') {
                this.sizes = child.v; return true;
            }
            else if (name === 'start') {
                this.start = child.v; return true;
            }
            else if (name === 'style') {
                this.style = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'value') {
                this.value = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 'w') {
            if (name === 'width') {
                this.width = child.v; return true;
            }
            else if (name === 'wmode') {
                this.wmode = child.v; return true;
            }
        }
        if (_l == 6 && _ch == '@') {
            if (name === '@label') {
                this._label = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'a') {
            if (name === 'accept') {
                this.accept = child.v; return true;
            }
            else if (name === 'action') {
                this.action = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'c') {
            if (name === 'coords') {
                this.coords = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'h') {
            if (name === 'height') {
                this.height = child.v; return true;
            }
            else if (name === 'hidden') {
                this.hidden = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'i') {
            if (name === 'itemid') {
                this.itemID = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'm') {
            if (name === 'method') {
                this.method = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'p') {
            if (name === 'poster') {
                this.poster = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 's') {
            if (name === 'scoped') {
                this.scoped = child.v; return true;
            }
            else if (name === 'srcdoc') {
                this.srcDoc = child.v; return true;
            }
            else if (name === 'srcset') {
                this.srcSet = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 't') {
            if (name === 'target') {
                this.target = child.v; return true;
            }
        }
        if (_l == 6 && _ch == 'u') {
            if (name === 'usemap') {
                this.useMap = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'c') {
            if (name === 'capture') {
                this.capture = child.v; return true;
            }
            else if (name === 'charset') {
                this.charSet = child.v; return true;
            }
            else if (name === 'checked') {
                this.checked = child.v; return true;
            }
            else if (name === 'classid') {
                this.classID = child.v; return true;
            }
            else if (name === 'colspan') {
                this.colSpan = child.v; return true;
            }
            else if (name === 'content') {
                this.content = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'enctype') {
                this.encType = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'h') {
            if (name === 'headers') {
                this.headers = child.v; return true;
            }
            else if (name === 'htmlfor') {
                this.htmlFor = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'i') {
            if (name === 'itemref') {
                this.itemRef = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'k') {
            if (name === 'keytype') {
                this.keyType = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'o') {
            if (name === 'optimum') {
                this.optimum = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'p') {
            if (name === 'pattern') {
                this.pattern = child.v; return true;
            }
            else if (name === 'preload') {
                this.preload = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 'r') {
            if (name === 'results') {
                this.results = child.v; return true;
            }
            else if (name === 'rowspan') {
                this.rowSpan = child.v; return true;
            }
        }
        if (_l == 7 && _ch == 's') {
            if (name === 'sandbox') {
                this.sandbox = child.v; return true;
            }
        }
        if (_l == 8 && _ch == '@') {
            if (name === '@summary') {
                this._summary = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'a') {
            if (name === 'autosave') {
                this.autoSave = child.v; return true;
            }
            else if (name === 'autoplay') {
                this.autoPlay = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'c') {
            if (name === 'controls') {
                this.controls = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'd') {
            if (name === 'datetime') {
                this.dateTime = child.v; return true;
            }
            else if (name === 'disabled') {
                this.disabled = child.v; return true;
            }
            else if (name === 'download') {
                this.download = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'h') {
            if (name === 'hreflang') {
                this.hrefLang = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'i') {
            if (name === 'itemprop') {
                this.itemProp = child.v; return true;
            }
            else if (name === 'itemtype') {
                this.itemType = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'm') {
            if (name === 'manifest') {
                this.manifest = child.v; return true;
            }
            else if (name === 'multiple') {
                this.multiple = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'p') {
            if (name === 'property') {
                this.property = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 'r') {
            if (name === 'readonly') {
                this.readOnly = child.v; return true;
            }
            else if (name === 'required') {
                this.required = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 's') {
            if (name === 'seamless') {
                this.seamless = child.v; return true;
            }
            else if (name === 'selected') {
                this.selected = child.v; return true;
            }
        }
        if (_l == 8 && _ch == 't') {
            if (name === 'tabindex') {
                this.tabIndex = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'a') {
            if (name === 'accesskey') {
                this.accessKey = child.v; return true;
            }
            else if (name === 'autofocus') {
                this.autoFocus = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'c') {
            if (name === 'challenge') {
                this.challenge = child.v; return true;
            }
            else if (name === 'classname') {
                this.className = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'd') {
            if (name === 'draggable') {
                this.draggable = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'h') {
            if (name === 'httpequiv') {
                this.httpEquiv = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'i') {
            if (name === 'itemscope') {
                this.itemScope = child.v; return true;
            }
            else if (name === 'inputmode') {
                this.inputMode = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'k') {
            if (name === 'keyparams') {
                this.keyParams = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 'm') {
            if (name === 'maxlength') {
                this.maxLength = child.v; return true;
            }
            else if (name === 'minlength') {
                this.minLength = child.v; return true;
            }
        }
        if (_l == 9 && _ch == 's') {
            if (name === 'scrolling') {
                this.scrolling = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'f') {
            if (name === 'formaction') {
                this.formAction = child.v; return true;
            }
            else if (name === 'formmethod') {
                this.formMethod = child.v; return true;
            }
            else if (name === 'formtarget') {
                this.formTarget = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'm') {
            if (name === 'mediagroup') {
                this.mediaGroup = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'n') {
            if (name === 'novalidate') {
                this.noValidate = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 'r') {
            if (name === 'radiogroup') {
                this.radioGroup = child.v; return true;
            }
        }
        if (_l == 10 && _ch == 's') {
            if (name === 'spellcheck') {
                this.spellCheck = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'a') {
            if (name === 'autocorrect') {
                this.autoCorrect = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'c') {
            if (name === 'cellpadding') {
                this.cellPadding = child.v; return true;
            }
            else if (name === 'cellspacing') {
                this.cellSpacing = child.v; return true;
            }
            else if (name === 'contextmenu') {
                this.contextMenu = child.v; return true;
            }
            else if (name === 'crossorigin') {
                this.crossOrigin = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'f') {
            if (name === 'formenctype') {
                this.formEncType = child.v; return true;
            }
            else if (name === 'frameborder') {
                this.frameBorder = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'm') {
            if (name === 'marginwidth') {
                this.marginWidth = child.v; return true;
            }
        }
        if (_l == 11 && _ch == 'p') {
            if (name === 'placeholder') {
                this.placeholder = child.v; return true;
            }
        }
        if (_l == 12 && _ch == 'a') {
            if (name === 'autocomplete') {
                this.autoComplete = child.v; return true;
            }
        }
        if (_l == 12 && _ch == 'm') {
            if (name === 'marginheight') {
                this.marginHeight = child.v; return true;
            }
        }
        if (_l == 12 && _ch == 'u') {
            if (name === 'unselectable') {
                this.unselectable = child.v; return true;
            }
        }
        if (_l == 13 && _ch == 'a') {
            if (name === 'acceptcharset') {
                this.acceptCharset = child.v; return true;
            }
        }
        if (_l == 14 && _ch == 'a') {
            if (name === 'autocapitalize') {
                this.autoCapitalize = child.v; return true;
            }
        }
        if (_l == 14 && _ch == 'f') {
            if (name === 'formnovalidate') {
                this.formNoValidate = child.v; return true;
            }
        }
        if (_l == 15 && _ch == 'a') {
            if (name === 'allowfullscreen') {
                this.allowFullScreen = child.v; return true;
            }
        }
        if (_l == 15 && _ch == 'c') {
            if (name === 'contenteditable') {
                this.contentEditable = child.v; return true;
            }
        }
        if (_l == 17 && _ch == 'a') {
            if (name === 'allowtransparency') {
                this.allowTransparency = child.v; return true;
            }
        }
        if (name.substr(0, 5) == "aria-") {
            this[name] = child.v;
            return true;
        }
        if (name.substr(0, 5) == "data-") {
            this[name] = child.v;
            return true;
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    htmlelement.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return htmlelement;
})(statement);


md.htmlelement = htmlelement;
// element doctype
var doctype = (function (htmlelement) {
    _inherits(doctype, htmlelement);
    function doctype(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(doctype.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, doctype);
        this.wzElement = "doctype";
    }
    return doctype;
})(htmlelement);


md.doctype = doctype;
// element a
var a = (function (htmlelement) {
    _inherits(a, htmlelement);
    function a(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(a.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, a);
        this.wzElement = "a";
    }
    return a;
})(htmlelement);


md.a = a;
// element abbr
var abbr = (function (htmlelement) {
    _inherits(abbr, htmlelement);
    function abbr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(abbr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, abbr);
        this.wzElement = "abbr";
    }
    return abbr;
})(htmlelement);


md.abbr = abbr;
// element address
var address = (function (htmlelement) {
    _inherits(address, htmlelement);
    function address(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(address.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, address);
        this.wzElement = "address";
    }
    return address;
})(htmlelement);


md.address = address;
// element area
var area = (function (htmlelement) {
    _inherits(area, htmlelement);
    function area(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(area.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, area);
        this.wzElement = "area";
    }
    return area;
})(htmlelement);


md.area = area;
// element article
var article = (function (htmlelement) {
    _inherits(article, htmlelement);
    function article(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(article.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, article);
        this.wzElement = "article";
    }
    return article;
})(htmlelement);


md.article = article;
// element aside
var aside = (function (htmlelement) {
    _inherits(aside, htmlelement);
    function aside(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(aside.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, aside);
        this.wzElement = "aside";
    }
    return aside;
})(htmlelement);


md.aside = aside;
// element audio
var audio = (function (htmlelement) {
    _inherits(audio, htmlelement);
    function audio(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(audio.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, audio);
        this.wzElement = "audio";
    }
    return audio;
})(htmlelement);


md.audio = audio;
// element b
var b = (function (htmlelement) {
    _inherits(b, htmlelement);
    function b(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(b.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, b);
        this.wzElement = "b";
    }
    return b;
})(htmlelement);


md.b = b;
// element base
var base = (function (htmlelement) {
    _inherits(base, htmlelement);
    function base(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(base.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, base);
        this.wzElement = "base";
    }
    return base;
})(htmlelement);


md.base = base;
// element bdi
var bdi = (function (htmlelement) {
    _inherits(bdi, htmlelement);
    function bdi(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(bdi.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bdi);
        this.wzElement = "bdi";
    }
    return bdi;
})(htmlelement);


md.bdi = bdi;
// element bdo
var bdo = (function (htmlelement) {
    _inherits(bdo, htmlelement);
    function bdo(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(bdo.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bdo);
        this.wzElement = "bdo";
    }
    return bdo;
})(htmlelement);


md.bdo = bdo;
// element big
var big = (function (htmlelement) {
    _inherits(big, htmlelement);
    function big(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(big.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, big);
        this.wzElement = "big";
    }
    return big;
})(htmlelement);


md.big = big;
// element blockquote
var blockquote = (function (htmlelement) {
    _inherits(blockquote, htmlelement);
    function blockquote(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(blockquote.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, blockquote);
        this.wzElement = "blockquote";
    }
    return blockquote;
})(htmlelement);


md.blockquote = blockquote;
// element body
var body = (function (htmlelement) {
    _inherits(body, htmlelement);
    function body(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(body.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, body);
        this.wzElement = "body";
    }
    return body;
})(htmlelement);


md.body = body;
// element br
var br = (function (htmlelement) {
    _inherits(br, htmlelement);
    function br(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(br.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, br);
        this.wzElement = "br";
    }
    return br;
})(htmlelement);


md.br = br;
// element button
var button = (function (htmlelement) {
    _inherits(button, htmlelement);
    function button(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(button.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, button);
        this.wzElement = "button";
    }
    return button;
})(htmlelement);


md.button = button;
// element canvas
var canvas = (function (htmlelement) {
    _inherits(canvas, htmlelement);
    function canvas(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(canvas.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, canvas);
        this.wzElement = "canvas";
    }
    return canvas;
})(htmlelement);


md.canvas = canvas;
// element caption
var caption = (function (htmlelement) {
    _inherits(caption, htmlelement);
    function caption(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(caption.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, caption);
        this.wzElement = "caption";
    }
    return caption;
})(htmlelement);


md.caption = caption;
// element cite
var cite = (function (htmlelement) {
    _inherits(cite, htmlelement);
    function cite(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(cite.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, cite);
        this.wzElement = "cite";
    }
    return cite;
})(htmlelement);


md.cite = cite;
// element code
var code = (function (htmlelement) {
    _inherits(code, htmlelement);
    function code(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(code.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, code);
        this.wzElement = "code";
    }
    return code;
})(htmlelement);


md.code = code;
// element col
var col = (function (htmlelement) {
    _inherits(col, htmlelement);
    function col(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(col.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, col);
        this.wzElement = "col";
    }
    return col;
})(htmlelement);


md.col = col;
// element colgroup
var colgroup = (function (htmlelement) {
    _inherits(colgroup, htmlelement);
    function colgroup(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(colgroup.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, colgroup);
        this.wzElement = "colgroup";
    }
    return colgroup;
})(htmlelement);


md.colgroup = colgroup;
// element data
var data = (function (htmlelement) {
    _inherits(data, htmlelement);
    function data(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(data.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, data);
        this.wzElement = "data";
    }
    return data;
})(htmlelement);


md.data = data;
// element datalist
var datalist = (function (htmlelement) {
    _inherits(datalist, htmlelement);
    function datalist(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(datalist.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, datalist);
        this.wzElement = "datalist";
    }
    return datalist;
})(htmlelement);


md.datalist = datalist;
// element dd
var dd = (function (htmlelement) {
    _inherits(dd, htmlelement);
    function dd(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(dd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dd);
        this.wzElement = "dd";
    }
    return dd;
})(htmlelement);


md.dd = dd;
// element del
var del = (function (htmlelement) {
    _inherits(del, htmlelement);
    function del(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(del.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, del);
        this.wzElement = "del";
    }
    return del;
})(htmlelement);


md.del = del;
// element details
var details = (function (htmlelement) {
    _inherits(details, htmlelement);
    function details(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(details.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, details);
        this.wzElement = "details";
    }
    return details;
})(htmlelement);


md.details = details;
// element dfn
var dfn = (function (htmlelement) {
    _inherits(dfn, htmlelement);
    function dfn(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(dfn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dfn);
        this.wzElement = "dfn";
    }
    return dfn;
})(htmlelement);


md.dfn = dfn;
// element dialog
var dialog = (function (htmlelement) {
    _inherits(dialog, htmlelement);
    function dialog(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(dialog.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dialog);
        this.wzElement = "dialog";
    }
    return dialog;
})(htmlelement);


md.dialog = dialog;
// element div
var div = (function (htmlelement) {
    _inherits(div, htmlelement);
    function div(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(div.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, div);
        this.wzElement = "div";
    }
    return div;
})(htmlelement);


md.div = div;
// element dl
var dl = (function (htmlelement) {
    _inherits(dl, htmlelement);
    function dl(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(dl.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dl);
        this.wzElement = "dl";
    }
    return dl;
})(htmlelement);


md.dl = dl;
// element dt
var dt = (function (htmlelement) {
    _inherits(dt, htmlelement);
    function dt(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(dt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, dt);
        this.wzElement = "dt";
    }
    return dt;
})(htmlelement);


md.dt = dt;
// element em
var em = (function (htmlelement) {
    _inherits(em, htmlelement);
    function em(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(em.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, em);
        this.wzElement = "em";
    }
    return em;
})(htmlelement);


md.em = em;
// element embed
var embed = (function (htmlelement) {
    _inherits(embed, htmlelement);
    function embed(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(embed.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, embed);
        this.wzElement = "embed";
    }
    return embed;
})(htmlelement);


md.embed = embed;
// element fieldset
var fieldset = (function (htmlelement) {
    _inherits(fieldset, htmlelement);
    function fieldset(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(fieldset.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fieldset);
        this.wzElement = "fieldset";
    }
    return fieldset;
})(htmlelement);


md.fieldset = fieldset;
// element figcaption
var figcaption = (function (htmlelement) {
    _inherits(figcaption, htmlelement);
    function figcaption(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(figcaption.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, figcaption);
        this.wzElement = "figcaption";
    }
    return figcaption;
})(htmlelement);


md.figcaption = figcaption;
// element figure
var figure = (function (htmlelement) {
    _inherits(figure, htmlelement);
    function figure(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(figure.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, figure);
        this.wzElement = "figure";
    }
    return figure;
})(htmlelement);


md.figure = figure;
// element footer
var footer = (function (htmlelement) {
    _inherits(footer, htmlelement);
    function footer(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(footer.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, footer);
        this.wzElement = "footer";
    }
    return footer;
})(htmlelement);


md.footer = footer;
// element form
var form = (function (htmlelement) {
    _inherits(form, htmlelement);
    function form(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(form.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, form);
        this.wzElement = "form";
    }
    return form;
})(htmlelement);


md.form = form;
// element h1
var h1 = (function (htmlelement) {
    _inherits(h1, htmlelement);
    function h1(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h1);
        this.wzElement = "h1";
    }
    return h1;
})(htmlelement);


md.h1 = h1;
// element h2
var h2 = (function (htmlelement) {
    _inherits(h2, htmlelement);
    function h2(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h2);
        this.wzElement = "h2";
    }
    return h2;
})(htmlelement);


md.h2 = h2;
// element h3
var h3 = (function (htmlelement) {
    _inherits(h3, htmlelement);
    function h3(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h3.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h3);
        this.wzElement = "h3";
    }
    return h3;
})(htmlelement);


md.h3 = h3;
// element h4
var h4 = (function (htmlelement) {
    _inherits(h4, htmlelement);
    function h4(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h4.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h4);
        this.wzElement = "h4";
    }
    return h4;
})(htmlelement);


md.h4 = h4;
// element h5
var h5 = (function (htmlelement) {
    _inherits(h5, htmlelement);
    function h5(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h5.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h5);
        this.wzElement = "h5";
    }
    return h5;
})(htmlelement);


md.h5 = h5;
// element h6
var h6 = (function (htmlelement) {
    _inherits(h6, htmlelement);
    function h6(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h6.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h6);
        this.wzElement = "h6";
    }
    return h6;
})(htmlelement);


md.h6 = h6;
// element head
var head = (function (htmlelement) {
    _inherits(head, htmlelement);
    function head(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(head.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, head);
        this.wzElement = "head";
    }
    return head;
})(htmlelement);


md.head = head;
// element header
var header = (function (htmlelement) {
    _inherits(header, htmlelement);
    function header(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(header.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, header);
        this.wzElement = "header";
    }
    return header;
})(htmlelement);


md.header = header;
// element hr
var hr = (function (htmlelement) {
    _inherits(hr, htmlelement);
    function hr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(hr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hr);
        this.wzElement = "hr";
    }
    return hr;
})(htmlelement);


md.hr = hr;
// element html
var html = (function (htmlelement) {
    _inherits(html, htmlelement);
    function html(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(html.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html);
        this.wzElement = "html";
    }
    return html;
})(htmlelement);


md.html = html;
// element i
var i = (function (htmlelement) {
    _inherits(i, htmlelement);
    function i(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(i.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, i);
        this.wzElement = "i";
    }
    return i;
})(htmlelement);


md.i = i;
// element iframe
var iframe = (function (htmlelement) {
    _inherits(iframe, htmlelement);
    function iframe(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(iframe.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, iframe);
        this.wzElement = "iframe";
    }
    return iframe;
})(htmlelement);


md.iframe = iframe;
// element img
var img = (function (htmlelement) {
    _inherits(img, htmlelement);
    function img(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(img.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, img);
        this.wzElement = "img";
    }
    return img;
})(htmlelement);


md.img = img;
// element input
var input = (function (htmlelement) {
    _inherits(input, htmlelement);
    function input(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(input.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, input);
        this.wzElement = "input";
    }
    return input;
})(htmlelement);


md.input = input;
// element ins
var ins = (function (htmlelement) {
    _inherits(ins, htmlelement);
    function ins(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ins.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ins);
        this.wzElement = "ins";
    }
    return ins;
})(htmlelement);


md.ins = ins;
// element kbd
var kbd = (function (htmlelement) {
    _inherits(kbd, htmlelement);
    function kbd(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(kbd.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, kbd);
        this.wzElement = "kbd";
    }
    return kbd;
})(htmlelement);


md.kbd = kbd;
// element keygen
var keygen = (function (htmlelement) {
    _inherits(keygen, htmlelement);
    function keygen(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(keygen.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, keygen);
        this.wzElement = "keygen";
    }
    return keygen;
})(htmlelement);


md.keygen = keygen;
// element label
var label = (function (htmlelement) {
    _inherits(label, htmlelement);
    function label(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(label.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, label);
        this.wzElement = "label";
    }
    return label;
})(htmlelement);


md.label = label;
// element legend
var legend = (function (htmlelement) {
    _inherits(legend, htmlelement);
    function legend(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(legend.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, legend);
        this.wzElement = "legend";
    }
    return legend;
})(htmlelement);


md.legend = legend;
// element li
var li = (function (htmlelement) {
    _inherits(li, htmlelement);
    function li(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(li.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, li);
        this.wzElement = "li";
    }
    return li;
})(htmlelement);


md.li = li;
// element link
var link = (function (htmlelement) {
    _inherits(link, htmlelement);
    function link(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(link.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, link);
        this.wzElement = "link";
    }
    return link;
})(htmlelement);


md.link = link;
// element main
var main = (function (htmlelement) {
    _inherits(main, htmlelement);
    function main(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(main.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, main);
        this.wzElement = "main";
    }
    return main;
})(htmlelement);


md.main = main;
// element map
var map = (function (htmlelement) {
    _inherits(map, htmlelement);
    function map(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(map.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, map);
        this.wzElement = "map";
    }
    return map;
})(htmlelement);


md.map = map;
// element mark
var mark = (function (htmlelement) {
    _inherits(mark, htmlelement);
    function mark(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(mark.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, mark);
        this.wzElement = "mark";
    }
    return mark;
})(htmlelement);


md.mark = mark;
// element menu
var menu = (function (htmlelement) {
    _inherits(menu, htmlelement);
    function menu(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(menu.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, menu);
        this.wzElement = "menu";
    }
    return menu;
})(htmlelement);


md.menu = menu;
// element menuitem
var menuitem = (function (htmlelement) {
    _inherits(menuitem, htmlelement);
    function menuitem(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(menuitem.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, menuitem);
        this.wzElement = "menuitem";
    }
    return menuitem;
})(htmlelement);


md.menuitem = menuitem;
// element meta
var meta = (function (htmlelement) {
    _inherits(meta, htmlelement);
    function meta(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(meta.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, meta);
        this.wzElement = "meta";
    }
    return meta;
})(htmlelement);


md.meta = meta;
// element meter
var meter = (function (htmlelement) {
    _inherits(meter, htmlelement);
    function meter(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(meter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, meter);
        this.wzElement = "meter";
    }
    return meter;
})(htmlelement);


md.meter = meter;
// element nav
var nav = (function (htmlelement) {
    _inherits(nav, htmlelement);
    function nav(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(nav.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, nav);
        this.wzElement = "nav";
    }
    return nav;
})(htmlelement);


md.nav = nav;
// element noscript
var noscript = (function (htmlelement) {
    _inherits(noscript, htmlelement);
    function noscript(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(noscript.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, noscript);
        this.wzElement = "noscript";
    }
    return noscript;
})(htmlelement);


md.noscript = noscript;
// element object
var object = (function (htmlelement) {
    _inherits(object, htmlelement);
    function object(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(object.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, object);
        this.wzElement = "object";
    }
    return object;
})(htmlelement);


md.object = object;
// element ol
var ol = (function (htmlelement) {
    _inherits(ol, htmlelement);
    function ol(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ol);
        this.wzElement = "ol";
    }
    return ol;
})(htmlelement);


md.ol = ol;
// element optgroup
var optgroup = (function (htmlelement) {
    _inherits(optgroup, htmlelement);
    function optgroup(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(optgroup.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, optgroup);
        this.wzElement = "optgroup";
    }
    return optgroup;
})(htmlelement);


md.optgroup = optgroup;
// element option
var option = (function (htmlelement) {
    _inherits(option, htmlelement);
    function option(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(option.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, option);
        this.wzElement = "option";
    }
    return option;
})(htmlelement);


md.option = option;
// element output
var output = (function (htmlelement) {
    _inherits(output, htmlelement);
    function output(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(output.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, output);
        this.wzElement = "output";
    }
    return output;
})(htmlelement);


md.output = output;
// element p
var p = (function (htmlelement) {
    _inherits(p, htmlelement);
    function p(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(p.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, p);
        this.wzElement = "p";
    }
    return p;
})(htmlelement);


md.p = p;
// element param
var param = (function (htmlelement) {
    _inherits(param, htmlelement);
    function param(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(param.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, param);
        this.wzElement = "param";
    }
    return param;
})(htmlelement);


md.param = param;
// element picture
var picture = (function (htmlelement) {
    _inherits(picture, htmlelement);
    function picture(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(picture.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, picture);
        this.wzElement = "picture";
    }
    return picture;
})(htmlelement);


md.picture = picture;
// element pre
var pre = (function (htmlelement) {
    _inherits(pre, htmlelement);
    function pre(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(pre.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pre);
        this.wzElement = "pre";
    }
    return pre;
})(htmlelement);


md.pre = pre;
// element progress
var progress = (function (htmlelement) {
    _inherits(progress, htmlelement);
    function progress(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(progress.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, progress);
        this.wzElement = "progress";
    }
    return progress;
})(htmlelement);


md.progress = progress;
// element q
var q = (function (htmlelement) {
    _inherits(q, htmlelement);
    function q(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(q.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, q);
        this.wzElement = "q";
    }
    return q;
})(htmlelement);


md.q = q;
// element rp
var rp = (function (htmlelement) {
    _inherits(rp, htmlelement);
    function rp(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(rp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, rp);
        this.wzElement = "rp";
    }
    return rp;
})(htmlelement);


md.rp = rp;
// element rt
var rt = (function (htmlelement) {
    _inherits(rt, htmlelement);
    function rt(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(rt.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, rt);
        this.wzElement = "rt";
    }
    return rt;
})(htmlelement);


md.rt = rt;
// element ruby
var ruby = (function (htmlelement) {
    _inherits(ruby, htmlelement);
    function ruby(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ruby.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ruby);
        this.wzElement = "ruby";
    }
    return ruby;
})(htmlelement);


md.ruby = ruby;
// element s
var s = (function (htmlelement) {
    _inherits(s, htmlelement);
    function s(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(s.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, s);
        this.wzElement = "s";
    }
    return s;
})(htmlelement);


md.s = s;
// element samp
var samp = (function (htmlelement) {
    _inherits(samp, htmlelement);
    function samp(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(samp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, samp);
        this.wzElement = "samp";
    }
    return samp;
})(htmlelement);


md.samp = samp;
// element script
var script = (function (htmlelement) {
    _inherits(script, htmlelement);
    function script(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(script.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, script);
        this.wzElement = "script";
    }
    return script;
})(htmlelement);


md.script = script;
// element section
var section = (function (htmlelement) {
    _inherits(section, htmlelement);
    function section(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(section.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, section);
        this.wzElement = "section";
    }
    return section;
})(htmlelement);


md.section = section;
// element select
var select = (function (htmlelement) {
    _inherits(select, htmlelement);
    function select(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(select.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, select);
        this.wzElement = "select";
    }
    return select;
})(htmlelement);


md.select = select;
// element small
var small = (function (htmlelement) {
    _inherits(small, htmlelement);
    function small(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(small.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, small);
        this.wzElement = "small";
    }
    return small;
})(htmlelement);


md.small = small;
// element source
var source = (function (htmlelement) {
    _inherits(source, htmlelement);
    function source(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(source.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, source);
        this.wzElement = "source";
    }
    return source;
})(htmlelement);


md.source = source;
// element span
var span = (function (htmlelement) {
    _inherits(span, htmlelement);
    function span(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(span.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, span);
        this.wzElement = "span";
    }
    return span;
})(htmlelement);


md.span = span;
// element strong
var strong = (function (htmlelement) {
    _inherits(strong, htmlelement);
    function strong(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(strong.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, strong);
        this.wzElement = "strong";
    }
    return strong;
})(htmlelement);


md.strong = strong;
// element _style
var _style = (function (htmlelement) {
    _inherits(_style, htmlelement);
    function _style(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(_style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, _style);
        this.wzElement = "_style";
    }
    return _style;
})(htmlelement);


md._style = _style;
// element sub
var sub = (function (htmlelement) {
    _inherits(sub, htmlelement);
    function sub(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(sub.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, sub);
        this.wzElement = "sub";
    }
    return sub;
})(htmlelement);


md.sub = sub;
// element summary
var summary = (function (htmlelement) {
    _inherits(summary, htmlelement);
    function summary(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(summary.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, summary);
        this.wzElement = "summary";
    }
    return summary;
})(htmlelement);


md.summary = summary;
// element sup
var sup = (function (htmlelement) {
    _inherits(sup, htmlelement);
    function sup(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(sup.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, sup);
        this.wzElement = "sup";
    }
    return sup;
})(htmlelement);


md.sup = sup;
// element table
var table = (function (htmlelement) {
    _inherits(table, htmlelement);
    function table(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(htmlelement);


md.table = table;
// element tbody
var tbody = (function (htmlelement) {
    _inherits(tbody, htmlelement);
    function tbody(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tbody.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tbody);
        this.wzElement = "tbody";
    }
    return tbody;
})(htmlelement);


md.tbody = tbody;
// element td
var td = (function (htmlelement) {
    _inherits(td, htmlelement);
    function td(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(td.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, td);
        this.wzElement = "td";
    }
    return td;
})(htmlelement);


md.td = td;
// element textarea
var textarea = (function (htmlelement) {
    _inherits(textarea, htmlelement);
    function textarea(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(textarea.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, textarea);
        this.wzElement = "textarea";
    }
    return textarea;
})(htmlelement);


md.textarea = textarea;
// element tfoot
var tfoot = (function (htmlelement) {
    _inherits(tfoot, htmlelement);
    function tfoot(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tfoot.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tfoot);
        this.wzElement = "tfoot";
    }
    return tfoot;
})(htmlelement);


md.tfoot = tfoot;
// element th
var th = (function (htmlelement) {
    _inherits(th, htmlelement);
    function th(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(th.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, th);
        this.wzElement = "th";
    }
    return th;
})(htmlelement);


md.th = th;
// element thead
var thead = (function (htmlelement) {
    _inherits(thead, htmlelement);
    function thead(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(thead.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, thead);
        this.wzElement = "thead";
    }
    return thead;
})(htmlelement);


md.thead = thead;
// element time
var time = (function (htmlelement) {
    _inherits(time, htmlelement);
    function time(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(time.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, time);
        this.wzElement = "time";
    }
    return time;
})(htmlelement);


md.time = time;
// element title
var title = (function (htmlelement) {
    _inherits(title, htmlelement);
    function title(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(title.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, title);
        this.wzElement = "title";
    }
    return title;
})(htmlelement);


md.title = title;
// element tr
var tr = (function (htmlelement) {
    _inherits(tr, htmlelement);
    function tr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tr);
        this.wzElement = "tr";
    }
    return tr;
})(htmlelement);


md.tr = tr;
// element track
var track = (function (htmlelement) {
    _inherits(track, htmlelement);
    function track(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(track.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, track);
        this.wzElement = "track";
    }
    return track;
})(htmlelement);


md.track = track;
// element u
var u = (function (htmlelement) {
    _inherits(u, htmlelement);
    function u(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(u.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, u);
        this.wzElement = "u";
    }
    return u;
})(htmlelement);


md.u = u;
// element ul
var ul = (function (htmlelement) {
    _inherits(ul, htmlelement);
    function ul(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ul.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ul);
        this.wzElement = "ul";
    }
    return ul;
})(htmlelement);


md.ul = ul;
// element xvar
var xvar = (function (htmlelement) {
    _inherits(xvar, htmlelement);
    function xvar(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(xvar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xvar);
        this.wzElement = "xvar";
    }
    xvar.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = md.htmlelement.prototype.loadChild.call(this, child);
        return ok;
    }
    xvar.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return xvar;
})(htmlelement);


md.xvar = xvar;
// element video
var video = (function (htmlelement) {
    _inherits(video, htmlelement);
    function video(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(video.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, video);
        this.wzElement = "video";
    }
    return video;
})(htmlelement);


md.video = video;
// element wbr
var wbr = (function (htmlelement) {
    _inherits(wbr, htmlelement);
    function wbr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(wbr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wbr);
        this.wzElement = "wbr";
    }
    return wbr;
})(htmlelement);


md.wbr = wbr;
// element js
var js = (function (htmlelement) {
    _inherits(js, htmlelement);
    function js(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(js.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, js);
        this.wzElement = "js";
    }
    return js;
})(htmlelement);


md.js = js;
// element css
var css = (function (htmlelement) {
    _inherits(css, htmlelement);
    function css(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(css.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, css);
        this.wzElement = "css";
    }
    return css;
})(htmlelement);


md.css = css;
// element ready
var ready = (function (statement) {
    _inherits(ready, statement);
    function ready(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ready.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ready);
        this.allowedKINDS = [ "jquery", "window"];
        this.KIND_JQUERY = "jquery";
        this.KIND_WINDOW = "window";
        this.wzElement = "ready";
        this.kind = "jquery";
    }
    ready.KIND_JQUERY = "jquery";
    ready.KIND_WINDOW = "window";
    ready.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    ready.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    ready.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("ready", "kind", this.kind, this.allowedKINDS, this);
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    return ready;
})(statement);


md.ready = ready;
// element tohtml
var tohtml = (function (statement) {
    _inherits(tohtml, statement);
    function tohtml(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tohtml.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tohtml);
        this.allowedKINDS = [ "wizzi", "ng", "dom", "hb"];
        this.KIND_WIZZI = "wizzi";
        this.KIND_NG = "ng";
        this.KIND_DOM = "dom";
        this.KIND_HB = "hb";
        this.wzElement = "tohtml";
        this.kind = "wizzi";
    }
    tohtml.KIND_WIZZI = "wizzi";
    tohtml.KIND_NG = "ng";
    tohtml.KIND_DOM = "dom";
    tohtml.KIND_HB = "hb";
    tohtml.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'k') {
            if (name === 'kind') {
                this.kind = child.v; return true;
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    tohtml.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    tohtml.prototype.wzVerify = function(ctx) {
        ctx.verifyEnum("tohtml", "kind", this.kind, this.allowedKINDS, this);
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    return tohtml;
})(statement);


md.tohtml = tohtml;
/**
    element html_f
     create a function
     that returns am html string
*/
var html_f = (function (statement) {
    _inherits(html_f, statement);
    function html_f(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(html_f.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_f);
        this.wzElement = "html_f";
    }
    return html_f;
})(statement);


md.html_f = html_f;
/**
    element html_ng
     create a function
     that returns am html string preserving {{ }}, for interpolation use [[ ]]
*/
var html_ng = (function (statement) {
    _inherits(html_ng, statement);
    function html_ng(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(html_ng.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_ng);
        this.wzElement = "html_ng";
    }
    return html_ng;
})(statement);


md.html_ng = html_ng;
/**
    element html_dom
     create a function
     that returns am html dom tree using jQuery
*/
var html_dom = (function (statement) {
    _inherits(html_dom, statement);
    function html_dom(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(html_dom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_dom);
        this.wzElement = "html_dom";
    }
    return html_dom;
})(statement);


md.html_dom = html_dom;
/**
    element html_hb
     create a function
     that returns a compiled handlebar template
*/
var html_hb = (function (statement) {
    _inherits(html_hb, statement);
    function html_hb(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(html_hb.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html_hb);
        this.wzElement = "html_hb";
    }
    return html_hb;
})(statement);


md.html_hb = html_hb;
// element debug
var debug = (function (statement) {
    _inherits(debug, statement);
    function debug(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(debug.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, debug);
        this.wzElement = "debug";
    }
    debug.prototype._require = function(_require) {
        ctx.require('debug');
    }
    return debug;
})(statement);


md.debug = debug;
// element assert
var assert = (function (statement) {
    _inherits(assert, statement);
    function assert(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(assert.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, assert);
        this.wzElement = "assert";
    }
    return assert;
})(statement);


md.assert = assert;
// element assert_equal
var assert_equal = (function (statement) {
    _inherits(assert_equal, statement);
    function assert_equal(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(assert_equal.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, assert_equal);
        this.wzElement = "assert_equal";
    }
    return assert_equal;
})(statement);


md.assert_equal = assert_equal;
// element chalk
var chalk = (function (statement) {
    _inherits(chalk, statement);
    function chalk(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(chalk.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, chalk);
        this.wzElement = "chalk";
    }
    return chalk;
})(statement);


md.chalk = chalk;
/**
    element log
     ittf:
     log 'xxx', yyy
     js:
     console.log( 'xxx', yyy );
    
*/
var log = (function (statement) {
    _inherits(log, statement);
    function log(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(log.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, log);
        this.wzElement = "log";
    }
    log.prototype._toJs = function(_toJs) {
        ctx.w('console.log(' + this.WmtName + ');');
    }
    return log;
})(statement);


md.log = log;
// element warn
var warn = (function (statement) {
    _inherits(warn, statement);
    function warn(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(warn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, warn);
        this.wzElement = "warn";
    }
    return warn;
})(statement);


md.warn = warn;
// element error
var error = (function (statement) {
    _inherits(error, statement);
    function error(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(error.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, error);
        this.wzElement = "error";
    }
    return error;
})(statement);


md.error = error;
// element inspect
var inspect = (function (statement) {
    _inherits(inspect, statement);
    function inspect(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(inspect.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, inspect);
        this.wzElement = "inspect";
    }
    return inspect;
})(statement);


md.inspect = inspect;
/**
    element log_info
     log.info(...)
*/
var log_info = (function (statement) {
    _inherits(log_info, statement);
    function log_info(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(log_info.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, log_info);
        this.wzElement = "log_info";
    }
    log_info.prototype._require = function(_require) {
        ctx.require('log');
    }
    return log_info;
})(statement);


md.log_info = log_info;
// element describe
var describe = (function (statement) {
    _inherits(describe, statement);
    function describe(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(describe.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, describe);
        this.wzElement = "describe";
    }
    return describe;
})(statement);


md.describe = describe;
// element it
var it = (function (statement) {
    _inherits(it, statement);
    function it(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(it.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, it);
        this.wzElement = "it";
    }
    return it;
})(statement);


md.it = it;
// element itAsync
var itAsync = (function (statement) {
    _inherits(itAsync, statement);
    function itAsync(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(itAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, itAsync);
        this.wzElement = "itAsync";
    }
    return itAsync;
})(statement);


md.itAsync = itAsync;
// element before
var before = (function (statement) {
    _inherits(before, statement);
    function before(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, before);
        this.wzElement = "before";
    }
    return before;
})(statement);


md.before = before;
// element beforeAsync
var beforeAsync = (function (statement) {
    _inherits(beforeAsync, statement);
    function beforeAsync(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(beforeAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, beforeAsync);
        this.wzElement = "beforeAsync";
    }
    return beforeAsync;
})(statement);


md.beforeAsync = beforeAsync;
// element beforeEach
var beforeEach = (function (statement) {
    _inherits(beforeEach, statement);
    function beforeEach(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(beforeEach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, beforeEach);
        this.wzElement = "beforeEach";
    }
    return beforeEach;
})(statement);


md.beforeEach = beforeEach;
// element after
var after = (function (statement) {
    _inherits(after, statement);
    function after(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, after);
        this.wzElement = "after";
    }
    return after;
})(statement);


md.after = after;
// element afterAsync
var afterAsync = (function (statement) {
    _inherits(afterAsync, statement);
    function afterAsync(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(afterAsync.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, afterAsync);
        this.wzElement = "afterAsync";
    }
    return afterAsync;
})(statement);


md.afterAsync = afterAsync;
// element afterEach
var afterEach = (function (statement) {
    _inherits(afterEach, statement);
    function afterEach(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(afterEach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, afterEach);
        this.wzElement = "afterEach";
    }
    return afterEach;
})(statement);


md.afterEach = afterEach;
// element superagent
var superagent = (function (statement) {
    _inherits(superagent, statement);
    function superagent(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(superagent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, superagent);
        this.wzElement = "superagent";
        // relation get
        this.gets = [];
        // relation post
        this.posts = [];
        // relation put
        this.puts = [];
        // relation end
        this.ends = [];
    }
    superagent.prototype.addGet = function(name,sourceLineInfo) {
        var retval = new md.get(name, sourceLineInfo);
        retval.wzParent = this;
        this.gets.push(retval);
        return retval;
    }
    superagent.prototype.getGet = function(name) {
        var found = null;
        this.gets.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    superagent.prototype.addPost = function(name,sourceLineInfo) {
        var retval = new md.post(name, sourceLineInfo);
        retval.wzParent = this;
        this.posts.push(retval);
        return retval;
    }
    superagent.prototype.getPost = function(name) {
        var found = null;
        this.posts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    superagent.prototype.addPut = function(name,sourceLineInfo) {
        var retval = new md.put(name, sourceLineInfo);
        retval.wzParent = this;
        this.puts.push(retval);
        return retval;
    }
    superagent.prototype.getPut = function(name) {
        var found = null;
        this.puts.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    superagent.prototype.addEnd = function(name,sourceLineInfo) {
        var retval = new md.end(name, sourceLineInfo);
        retval.wzParent = this;
        this.ends.push(retval);
        return retval;
    }
    superagent.prototype.getEnd = function(name) {
        var found = null;
        this.ends.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    superagent.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 'e') {
            if (name === 'end') {
                return this.wzLoadToChildColl(child, md.end, this.ends);
            }
        }
        if (_l == 3 && _ch == 'g') {
            if (name === 'get') {
                return this.wzLoadToChildColl(child, md.get, this.gets);
            }
        }
        if (_l == 3 && _ch == 'p') {
            if (name === 'put') {
                return this.wzLoadToChildColl(child, md.put, this.puts);
            }
        }
        if (_l == 4 && _ch == 'p') {
            if (name === 'post') {
                return this.wzLoadToChildColl(child, md.post, this.posts);
            }
        }
        ok = md.statement.prototype.loadChild.call(this, child);
        return ok;
    }
    superagent.prototype.loadFromNode = function(node) {
        var loaded = false;
        var i, i_len=node.childs.length, item;
        for (i=0; i<i_len; i++) {
            item = node.childs[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.jsException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    superagent.prototype.wzVerify = function(ctx) {
        var i, i_len=this.gets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.gets[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.posts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.posts[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.puts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.puts[i];
            item.wzVerify(ctx);
        }
        var i, i_len=this.ends.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ends[i];
            item.wzVerify(ctx);
        }
        md.statement.prototype.wzVerify.call(this, ctx);
    }
    superagent.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.gets.length, item;
        for (i=0; i<i_len; i++) {
            item = this.gets[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.posts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.posts[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.puts.length, item;
        for (i=0; i<i_len; i++) {
            item = this.puts[i];
            item.wzInitialize(ctx);
        }
        var i, i_len=this.ends.length, item;
        for (i=0; i<i_len; i++) {
            item = this.ends[i];
            item.wzInitialize(ctx);
        }
        md.statement.prototype.wzInitialize.call(this, ctx);
    }
    return superagent;
})(statement);


md.superagent = superagent;
// element get
var get = (function (jsBase) {
    _inherits(get, jsBase);
    function get(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(get.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, get);
        this.wzElement = "get";
    }
    return get;
})(jsBase);


md.get = get;
// element post
var post = (function (jsBase) {
    _inherits(post, jsBase);
    function post(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(post.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, post);
        this.wzElement = "post";
    }
    return post;
})(jsBase);


md.post = post;
// element put
var put = (function (jsBase) {
    _inherits(put, jsBase);
    function put(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(put.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, put);
        this.wzElement = "put";
    }
    return put;
})(jsBase);


md.put = put;
// element end
var end = (function (jsBase) {
    _inherits(end, jsBase);
    function end(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(end.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, end);
        this.wzElement = "end";
    }
    return end;
})(jsBase);


md.end = end;
md.__tagElementMapping = { '+': 'statement', '++': 'statementmultiline', '#': 'comment', '##': 'commentmultiline', 'var': 'xvar', 'wz-var': 'wzVar', 'wzvar': 'wzVar', 'const': 'xconst', 'let': 'xlet', '{': 'jsObject', '[': 'jsArray', '@': 'jsPropertyOrValue', 'jst': 'jsonStatementTree', 'import': 'ximport', 'export': 'xexport', 'delete': 'xdelete', 'if': 'xif', 'else': 'xelse', 'for': 'xfor', 'break': 'xbreak', 'continue': 'xcontinue', 'while': 'xwhile', 'do': 'xdo', 'switch': 'xswitch', 'case': 'xcase', 'default': 'xdefault', 'try': 'xtry', 'catch': 'xcatch', 'finally': 'xfinally', 'throw': 'xthrow', 'function': 'xfunction', '=>': 'arrowfunction', 'm': 'method', 'wz-iife': 'wzIife', 'wziife': 'wzIife', 'wz-function': 'wzFunction', 'wzfunction': 'wzFunction', 'return': 'xreturn', 'class': 'xclass', 'wz-class': 'wzClass', 'wzclass': 'wzClass', 'new': 'xnew', '_': 'call', '._': 'memberCall', '@_': 'decoratorCall', '(': 'callOnValue', '.': 'memberAccess', '.[': 'memberAccessComputed', '||': 'or', '&&': 'and', 'op===': 'op_eq_strict', 'op!==': 'op_noteq_strict', 'op==': 'op_eq', 'op!=': 'op_noteq', 'op||': 'op_or', 'op&&': 'op_and', 'op-': 'op_minus', 'op': 'op_minus', 'op+': 'op_plus', 'op*': 'op_times', 'op/': 'op_div', 'op^': 'op_power', 'op%': 'op_mod', 'op|': 'op_xor', 'op&': 'op_xand', 'op>': 'op_gt', 'op>=': 'op_ge', 'op<': 'op_lt', 'op<=': 'op_le', 'wz-require': 'wzRequire', 'wzrequire': 'wzRequire', 'ยง': 'component', 'react': 'reactComponent', '<': 'htmlelement', '@style': '_style', '!!': 'assert', '!!=': 'assert_equal', 'log?': 'inspect', 'log-info': 'log_info', 'loginfo': 'log_info', 'it-async': 'itAsync', 'itasync': 'itAsync', 'before-async': 'beforeAsync', 'beforeasync': 'beforeAsync', 'before-each': 'beforeEach', 'beforeeach': 'beforeEach', 'after-async': 'afterAsync', 'afterasync': 'afterAsync', 'after-each': 'afterEach', 'aftereach': 'afterEach' };
var jsException = (function () {
    function jsException(message,node,instance) {
        _classCallCheck(this, jsException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        this.stack = new Error().stack;
        this.node = node;
    }
    return jsException;
})();


md.jsException = jsException;
var jsContext = (function () {
    function jsContext() {
        _classCallCheck(this, jsContext);
        this.validationErrors = [];
    }
    jsContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    jsContext.prototype.addError = function(message,node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    jsContext.prototype.verifyEnum = function(valueType,valueName,value,allowed,node) {
        if (value && allowed.indexOf(value) < 0) {
            var allowedStr = 'allowed: ' + allowed.join(', ');
            this.validationErrors.push(valueType + ' ' + valueName + ' has an invalid value: ' + value + ' ' + allowedStr + '. At ' + (node.wzSourceLineInfo ? node.wzSourceLineInfo.toString(node) : 'location unavailable'));
        }
    }
    return jsContext;
})();


md.jsContext = jsContext;
function parsestring(value,defaultValue,node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}

function parseboolean(value,defaultValue,node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    if (!isBoolean(value)) {
        throw new nodeException('Must be a boolean value (\"true\" or \"false\"), got:' + value, node);
    }
    return value === 'true' ? true : false;
}

function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}

function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}

function isBoolean(value) {
    return value === 'true' || value === 'false';
}


