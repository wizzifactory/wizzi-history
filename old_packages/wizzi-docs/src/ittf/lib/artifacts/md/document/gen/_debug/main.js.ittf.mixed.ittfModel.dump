  module  ids: 1 99
    kind jsfile ids: 2 100
    var util = require('util') ids: 3 101
    var wizzi = require('wizzi') ids: 4 102
    var verify = wizzi.verify ids: 5 103
    var utilnode = wizzi.utilnode ids: 6 104
    var lineParser = wizzi.lineParser ids: 7 105
    var md = module.exports = {} ids: 8 106
    var myname = 'mdx.document.main' ids: 9 107
    set md.gen ids: 10 108
      function  ids: 11 109
        param model ids: 12 110
        param ctx ids: 13 111
        param callback ids: 14 112
        # log 'model', util.inspect(model, { depth: 1 }) ids: 15 113
        _ this.genItem(model, ctx) ids: 16 114
        _ callback(null, ctx) ids: 17 115
    set md.gen.prototype.genItems ids: 18 116
      function  ids: 19 117
        param items ids: 20 118
        param ctx ids: 21 119
        param options ids: 22 120
        var  ids: 23 121
          decl opt = options || {} ids: 24 122
          decl from = opt.from || 0 ids: 25 123
        for var i = from; i < items.length; i++ ids: 26 124
          var item = items[i] ids: 27 125
          _ this.genItem(item, ctx) ids: 28 126
    set md.gen.prototype.${name} ids: 197 203
      $args: genItem  $params: name
      function  ids: 199 204
        param model ids: 200 205
        param ctx ids: 201 206
        if this[model.wzElement] ids: 30 128
          # known element ids: 31 129
          if this[model.wzElement](model, ctx) ids: 32 130
            # ok, processed ids: 33 131
            return  ids: 34 132
    set md.gen.prototype.${name} ids: 197 208
      $args: mdx  $params: name
      function  ids: 199 209
        param model ids: 200 210
        param ctx ids: 201 211
        _ this.genItems(model.elements, ctx) ids: 36 134
        return true; ids: 37 135
    set md.gen.prototype.${name} ids: 197 213
      $args: h1  $params: name
      function  ids: 199 214
        param model ids: 200 215
        param ctx ids: 201 216
        _ ctx.w("# " + model.wzName) ids: 39 137
        return true; ids: 40 138
    set md.gen.prototype.${name} ids: 197 218
      $args: h2  $params: name
      function  ids: 199 219
        param model ids: 200 220
        param ctx ids: 201 221
        _ ctx.w("## " + model.wzName) ids: 42 140
        return true; ids: 43 141
    set md.gen.prototype.${name} ids: 197 223
      $args: h3  $params: name
      function  ids: 199 224
        param model ids: 200 225
        param ctx ids: 201 226
        _ ctx.w("### " + model.wzName) ids: 45 143
        return true; ids: 46 144
    set md.gen.prototype.${name} ids: 197 228
      $args: h4  $params: name
      function  ids: 199 229
        param model ids: 200 230
        param ctx ids: 201 231
        _ ctx.w("#### " + model.wzName) ids: 48 146
        return true; ids: 49 147
    set md.gen.prototype.${name} ids: 197 233
      $args: h5  $params: name
      function  ids: 199 234
        param model ids: 200 235
        param ctx ids: 201 236
        _ ctx.w("##### " + model.wzName) ids: 51 149
        return true; ids: 52 150
    set md.gen.prototype.${name} ids: 197 238
      $args: h6  $params: name
      function  ids: 199 239
        param model ids: 200 240
        param ctx ids: 201 241
        _ ctx.w("##### " + model.wzName) ids: 54 152
        return true; ids: 55 153
    set md.gen.prototype.${name} ids: 197 243
      $args: p  $params: name
      function  ids: 199 244
        param model ids: 200 245
        param ctx ids: 201 246
        _ ctx.w(model.wzName) ids: 57 155
        if ctx.isCode ids: 58 156
          _ ctx.indent() ids: 59 157
        _ this.genItems(model.elements, ctx) ids: 60 158
        if ctx.isCode ids: 61 159
          _ ctx.deindent() ids: 62 160
        return true; ids: 63 161
    set md.gen.prototype.${name} ids: 197 248
      $args: br  $params: name
      function  ids: 199 249
        param model ids: 200 250
        param ctx ids: 201 251
        _ ctx.w() ids: 65 163
        return true; ids: 66 164
    set md.gen.prototype.${name} ids: 197 253
      $args: i  $params: name
      function  ids: 199 254
        param model ids: 200 255
        param ctx ids: 201 256
        _ ctx.write('*' + model.wzName) ids: 68 166
        _ this.genItems(model.elements, ctx) ids: 69 167
        _ ctx.write('*') ids: 70 168
        return true; ids: 71 169
    set md.gen.prototype.${name} ids: 197 258
      $args: b  $params: name
      function  ids: 199 259
        param model ids: 200 260
        param ctx ids: 201 261
        _ ctx.write('**' + model.wzName) ids: 73 171
        _ this.genItems(model.elements, ctx) ids: 74 172
        _ ctx.write('**') ids: 75 173
        return true; ids: 76 174
    set md.gen.prototype.${name} ids: 197 263
      $args: span  $params: name
      function  ids: 199 264
        param model ids: 200 265
        param ctx ids: 201 266
        _ ctx.write(model.wzName) ids: 78 176
        _ this.genItems(model.elements, ctx) ids: 79 177
        return true; ids: 80 178
    set md.gen.prototype.${name} ids: 197 268
      $args: blank  $params: name
      function  ids: 199 269
        param model ids: 200 270
        param ctx ids: 201 271
        _ ctx.write(' ' + model.wzName) ids: 82 180
        _ this.genItems(model.elements, ctx) ids: 83 181
        return true; ids: 84 182
    set md.gen.prototype.${name} ids: 197 273
      $args: code  $params: name
      function  ids: 199 274
        param model ids: 200 275
        param ctx ids: 201 276
        _ ctx.w("`" + model.wzName + "`") ids: 86 184
        return true; ids: 87 185
    set md.gen.prototype.${name} ids: 197 278
      $args: js  $params: name
      function  ids: 199 279
        param model ids: 200 280
        param ctx ids: 201 281
        _ ctx.w("```javascript") ids: 89 187
        set ctx.isCode = true ids: 90 188
        _ this.genItems(model.elements, ctx) ids: 91 189
        set ctx.isCode = false ids: 92 190
        _ ctx.w("```") ids: 93 191
        return true; ids: 94 192
    set md.isLineTag ids: 95 193
      function  ids: 96 194
        param model ids: 97 195
        return ['p', 'br'].indexOf(model.wzElement) > -1; ids: 98 196