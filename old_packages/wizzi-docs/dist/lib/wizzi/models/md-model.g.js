/*
    artifact generator: /wizzi/lib/artifacts/js/module/gen/main.js
    primary source IttfDocument: c:\my\wizzi\v4\node_modules\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Mon, 23 Oct 2017 10:07:41 GMT
*/
'use strict';
// generated by js.module.es2015.module
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var verify = require('wizzi-utils').verify;


var md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row,col,sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();


md.wzSourceLineInfo = wzSourceLineInfo;
var mdBase = (function () {
    function mdBase(name,sourceLineInfo) {
        _classCallCheck(this, mdBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    mdBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    mdBase.prototype.wzSourceFilepath = function(sourceKey) {
        return this.wzRoot().loadHistory.getIttfDocumentUri(sourceKey);
    }
    mdBase.prototype.wzVerify = function() {
    }
    mdBase.prototype.wzInitialize = function() {
    }
    mdBase.prototype.wzInitializeAsync = function(ctx,callback) {
        callback(null);
    }
    mdBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    mdBase.prototype.wzLoadToChildColl = function(child,type,coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.wzLoadToChildren = function(child,type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.wzLoadOneToOne = function(child,type,fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.error = function(message,node) {
        throw new md.mdModelException(message, node, this);
    }
    return mdBase;
})();


md.mdBase = mdBase;

/**
    element mdx
     The root element of the md schema.
*/
var mdx = (function (mdBase) {
    _inherits(mdx, mdBase);
    function mdx(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(mdx.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, mdx);
        this.wzElement = "mdx";
        // relation element
        this.elements = [];
    }
    mdx.prototype.addElement = function(name,sourceLineInfo) {
        var retval = new md.element(name, sourceLineInfo);
        retval.wzParent = this;
        this.elements.push(retval);
        return retval;
    }
    mdx.prototype.getElement = function(name) {
        var found = null;
        this.elements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    mdx.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, md.code, this.elements);
            }
        }
        if (_l == 1 && _ch == 'a') {
            if (name === 'a') {
                return this.wzLoadToChildColl(child, md.a, this.elements);
            }
        }
        if (_l == 1 && _ch == 'b') {
            if (name === 'b') {
                return this.wzLoadToChildColl(child, md.b, this.elements);
            }
        }
        if (_l == 1 && _ch == 'i') {
            if (name === 'i') {
                return this.wzLoadToChildColl(child, md.i, this.elements);
            }
        }
        if (_l == 1 && _ch == 'p') {
            if (name === 'p') {
                return this.wzLoadToChildColl(child, md.p, this.elements);
            }
        }
        if (_l == 2 && _ch == 'b') {
            if (name === 'br') {
                return this.wzLoadToChildColl(child, md.br, this.elements);
            }
        }
        if (_l == 2 && _ch == 'h') {
            if (name === 'h1') {
                return this.wzLoadToChildColl(child, md.h1, this.elements);
            }
            else if (name === 'h2') {
                return this.wzLoadToChildColl(child, md.h2, this.elements);
            }
            else if (name === 'h3') {
                return this.wzLoadToChildColl(child, md.h3, this.elements);
            }
            else if (name === 'h4') {
                return this.wzLoadToChildColl(child, md.h4, this.elements);
            }
            else if (name === 'h5') {
                return this.wzLoadToChildColl(child, md.h5, this.elements);
            }
            else if (name === 'h6') {
                return this.wzLoadToChildColl(child, md.h6, this.elements);
            }
            else if (name === 'hr') {
                return this.wzLoadToChildColl(child, md.hr, this.elements);
            }
        }
        if (_l == 2 && _ch == 'j') {
            if (name === 'js') {
                return this.wzLoadToChildColl(child, md.js, this.elements);
            }
        }
        if (_l == 2 && _ch == 'l') {
            if (name === 'li') {
                return this.wzLoadToChildColl(child, md.li, this.elements);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'ol') {
                return this.wzLoadToChildColl(child, md.ol, this.elements);
            }
        }
        if (_l == 2 && _ch == 'p') {
            if (name === 'py') {
                return this.wzLoadToChildColl(child, md.py, this.elements);
            }
        }
        if (_l == 2 && _ch == 'r') {
            if (name === 'ra') {
                return this.wzLoadToChildColl(child, md.aRef, this.elements);
            }
        }
        if (_l == 2 && _ch == 't') {
            if (name === 'tr') {
                return this.wzLoadToChildColl(child, md.tr, this.elements);
            }
            else if (name === 'td') {
                return this.wzLoadToChildColl(child, md.td, this.elements);
            }
            else if (name === 'th') {
                return this.wzLoadToChildColl(child, md.th, this.elements);
            }
        }
        if (_l == 2 && _ch == 'u') {
            if (name === 'ul') {
                return this.wzLoadToChildColl(child, md.ul, this.elements);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'img') {
                return this.wzLoadToChildColl(child, md.img, this.elements);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'r-a') {
                return this.wzLoadToChildColl(child, md.aRef, this.elements);
            }
            else if (name === 'ref') {
                return this.wzLoadToChildColl(child, md.ref, this.elements);
            }
        }
        if (_l == 4 && _ch == 'b') {
            if (name === 'bash') {
                return this.wzLoadToChildColl(child, md.bash, this.elements);
            }
        }
        if (_l == 4 && _ch == 'r') {
            if (name === 'rimg') {
                return this.wzLoadToChildColl(child, md.imgRef, this.elements);
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'span') {
                return this.wzLoadToChildColl(child, md.span, this.elements);
            }
        }
        if (_l == 5 && _ch == 'q') {
            if (name === 'quote') {
                return this.wzLoadToChildColl(child, md.quote, this.elements);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'r-img') {
                return this.wzLoadToChildColl(child, md.imgRef, this.elements);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'table') {
                return this.wzLoadToChildColl(child, md.table, this.elements);
            }
            else if (name === 'tbody') {
                return this.wzLoadToChildColl(child, md.tbody, this.elements);
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'video') {
                return this.wzLoadToChildColl(child, md.video, this.elements);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, md.element, this.elements);
            }
        }
        return ok;
    }
    mdx.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    mdx.prototype.wzVerify = function(ctx) {
        var i, i_len=this.elements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.elements[i];
            item.wzVerify(ctx);
        }
        md.mdBase.prototype.wzVerify.call(this, ctx);
    }
    mdx.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.elements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.elements[i];
            item.wzInitialize(ctx);
        }
        md.mdBase.prototype.wzInitialize.call(this, ctx);
    }
    return mdx;
})(mdBase);


md.mdx = mdx;
// element element
var element = (function (mdBase) {
    _inherits(element, mdBase);
    function element(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(element.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, element);
        this.wzElement = "element";
        // relation element
        this.elements = [];
    }
    element.prototype.addElement = function(name,sourceLineInfo) {
        var retval = new md.element(name, sourceLineInfo);
        retval.wzParent = this;
        this.elements.push(retval);
        return retval;
    }
    element.prototype.getElement = function(name) {
        var found = null;
        this.elements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    element.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 1 && _ch == '+') {
            if (name === '+') {
                return this.wzLoadToChildColl(child, md.code, this.elements);
            }
        }
        if (_l == 1 && _ch == 'a') {
            if (name === 'a') {
                return this.wzLoadToChildColl(child, md.a, this.elements);
            }
        }
        if (_l == 1 && _ch == 'b') {
            if (name === 'b') {
                return this.wzLoadToChildColl(child, md.b, this.elements);
            }
        }
        if (_l == 1 && _ch == 'i') {
            if (name === 'i') {
                return this.wzLoadToChildColl(child, md.i, this.elements);
            }
        }
        if (_l == 1 && _ch == 'p') {
            if (name === 'p') {
                return this.wzLoadToChildColl(child, md.p, this.elements);
            }
        }
        if (_l == 2 && _ch == 'b') {
            if (name === 'br') {
                return this.wzLoadToChildColl(child, md.br, this.elements);
            }
        }
        if (_l == 2 && _ch == 'h') {
            if (name === 'h1') {
                return this.wzLoadToChildColl(child, md.h1, this.elements);
            }
            else if (name === 'h2') {
                return this.wzLoadToChildColl(child, md.h2, this.elements);
            }
            else if (name === 'h3') {
                return this.wzLoadToChildColl(child, md.h3, this.elements);
            }
            else if (name === 'h4') {
                return this.wzLoadToChildColl(child, md.h4, this.elements);
            }
            else if (name === 'h5') {
                return this.wzLoadToChildColl(child, md.h5, this.elements);
            }
            else if (name === 'h6') {
                return this.wzLoadToChildColl(child, md.h6, this.elements);
            }
            else if (name === 'hr') {
                return this.wzLoadToChildColl(child, md.hr, this.elements);
            }
        }
        if (_l == 2 && _ch == 'j') {
            if (name === 'js') {
                return this.wzLoadToChildColl(child, md.js, this.elements);
            }
        }
        if (_l == 2 && _ch == 'l') {
            if (name === 'li') {
                return this.wzLoadToChildColl(child, md.li, this.elements);
            }
        }
        if (_l == 2 && _ch == 'o') {
            if (name === 'ol') {
                return this.wzLoadToChildColl(child, md.ol, this.elements);
            }
        }
        if (_l == 2 && _ch == 'p') {
            if (name === 'py') {
                return this.wzLoadToChildColl(child, md.py, this.elements);
            }
        }
        if (_l == 2 && _ch == 'r') {
            if (name === 'ra') {
                return this.wzLoadToChildColl(child, md.aRef, this.elements);
            }
        }
        if (_l == 2 && _ch == 't') {
            if (name === 'tr') {
                return this.wzLoadToChildColl(child, md.tr, this.elements);
            }
            else if (name === 'td') {
                return this.wzLoadToChildColl(child, md.td, this.elements);
            }
            else if (name === 'th') {
                return this.wzLoadToChildColl(child, md.th, this.elements);
            }
        }
        if (_l == 2 && _ch == 'u') {
            if (name === 'ul') {
                return this.wzLoadToChildColl(child, md.ul, this.elements);
            }
        }
        if (_l == 3 && _ch == 'i') {
            if (name === 'img') {
                return this.wzLoadToChildColl(child, md.img, this.elements);
            }
        }
        if (_l == 3 && _ch == 'r') {
            if (name === 'r-a') {
                return this.wzLoadToChildColl(child, md.aRef, this.elements);
            }
            else if (name === 'ref') {
                return this.wzLoadToChildColl(child, md.ref, this.elements);
            }
        }
        if (_l == 4 && _ch == 'b') {
            if (name === 'bash') {
                return this.wzLoadToChildColl(child, md.bash, this.elements);
            }
        }
        if (_l == 4 && _ch == 'r') {
            if (name === 'rimg') {
                return this.wzLoadToChildColl(child, md.imgRef, this.elements);
            }
        }
        if (_l == 4 && _ch == 's') {
            if (name === 'span') {
                return this.wzLoadToChildColl(child, md.span, this.elements);
            }
        }
        if (_l == 5 && _ch == 'q') {
            if (name === 'quote') {
                return this.wzLoadToChildColl(child, md.quote, this.elements);
            }
        }
        if (_l == 5 && _ch == 'r') {
            if (name === 'r-img') {
                return this.wzLoadToChildColl(child, md.imgRef, this.elements);
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'table') {
                return this.wzLoadToChildColl(child, md.table, this.elements);
            }
            else if (name === 'tbody') {
                return this.wzLoadToChildColl(child, md.tbody, this.elements);
            }
        }
        if (_l == 5 && _ch == 'v') {
            if (name === 'video') {
                return this.wzLoadToChildColl(child, md.video, this.elements);
            }
        }
        if (_l == 7 && _ch == 'e') {
            if (name === 'element') {
                return this.wzLoadToChildColl(child, md.element, this.elements);
            }
        }
        return ok;
    }
    element.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    element.prototype.wzVerify = function(ctx) {
        var i, i_len=this.elements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.elements[i];
            item.wzVerify(ctx);
        }
        md.mdBase.prototype.wzVerify.call(this, ctx);
    }
    element.prototype.wzInitialize = function(ctx) {
        var i, i_len=this.elements.length, item;
        for (i=0; i<i_len; i++) {
            item = this.elements[i];
            item.wzInitialize(ctx);
        }
        md.mdBase.prototype.wzInitialize.call(this, ctx);
    }
    return element;
})(mdBase);


md.element = element;
// element h1
var h1 = (function (element) {
    _inherits(h1, element);
    function h1(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h1);
        this.wzElement = "h1";
    }
    return h1;
})(element);


md.h1 = h1;
// element h2
var h2 = (function (element) {
    _inherits(h2, element);
    function h2(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h2);
        this.wzElement = "h2";
    }
    return h2;
})(element);


md.h2 = h2;
// element h3
var h3 = (function (element) {
    _inherits(h3, element);
    function h3(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h3.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h3);
        this.wzElement = "h3";
    }
    return h3;
})(element);


md.h3 = h3;
// element h4
var h4 = (function (element) {
    _inherits(h4, element);
    function h4(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h4.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h4);
        this.wzElement = "h4";
    }
    return h4;
})(element);


md.h4 = h4;
// element h5
var h5 = (function (element) {
    _inherits(h5, element);
    function h5(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h5.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h5);
        this.wzElement = "h5";
    }
    return h5;
})(element);


md.h5 = h5;
// element h6
var h6 = (function (element) {
    _inherits(h6, element);
    function h6(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(h6.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h6);
        this.wzElement = "h6";
    }
    return h6;
})(element);


md.h6 = h6;
// element a
var a = (function (element) {
    _inherits(a, element);
    function a(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(a.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, a);
        this.wzElement = "a";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.href = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.title = null
    }
    a.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'h') {
            if (name === 'href') {
                this.href = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    a.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return a;
})(element);


md.a = a;
// element i
var i = (function (element) {
    _inherits(i, element);
    function i(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(i.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, i);
        this.wzElement = "i";
    }
    return i;
})(element);


md.i = i;
// element b
var b = (function (element) {
    _inherits(b, element);
    function b(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(b.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, b);
        this.wzElement = "b";
    }
    return b;
})(element);


md.b = b;
// element p
var p = (function (element) {
    _inherits(p, element);
    function p(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(p.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, p);
        this.wzElement = "p";
    }
    return p;
})(element);


md.p = p;
// element span
var span = (function (element) {
    _inherits(span, element);
    function span(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(span.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, span);
        this.wzElement = "span";
    }
    return span;
})(element);


md.span = span;
// element ul
var ul = (function (element) {
    _inherits(ul, element);
    function ul(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ul.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ul);
        this.wzElement = "ul";
    }
    return ul;
})(element);


md.ul = ul;
// element ol
var ol = (function (element) {
    _inherits(ol, element);
    function ol(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ol);
        this.wzElement = "ol";
    }
    return ol;
})(element);


md.ol = ol;
// element li
var li = (function (element) {
    _inherits(li, element);
    function li(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(li.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, li);
        this.wzElement = "li";
    }
    return li;
})(element);


md.li = li;
// element img
var img = (function (element) {
    _inherits(img, element);
    function img(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(img.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, img);
        this.wzElement = "img";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.src = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.title = null
    }
    img.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 's') {
            if (name === 'src') {
                this.src = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    img.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return img;
})(element);


md.img = img;
// element codeBlock
var codeBlock = (function (element) {
    _inherits(codeBlock, element);
    function codeBlock(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(codeBlock.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, codeBlock);
        this.wzElement = "codeBlock";
    }
    codeBlock.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    codeBlock.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return codeBlock;
})(element);


md.codeBlock = codeBlock;
// element js
var js = (function (codeBlock) {
    _inherits(js, codeBlock);
    function js(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(js.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, js);
        this.wzElement = "js";
    }
    return js;
})(codeBlock);


md.js = js;
// element bash
var bash = (function (codeBlock) {
    _inherits(bash, codeBlock);
    function bash(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(bash.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bash);
        this.wzElement = "bash";
    }
    return bash;
})(codeBlock);


md.bash = bash;
// element py
var py = (function (codeBlock) {
    _inherits(py, codeBlock);
    function py(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(py.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, py);
        this.wzElement = "py";
    }
    return py;
})(codeBlock);


md.py = py;
// element code
var code = (function (element) {
    _inherits(code, element);
    function code(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(code.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, code);
        this.wzElement = "code";
    }
    return code;
})(element);


md.code = code;
// element table
var table = (function (element) {
    _inherits(table, element);
    function table(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(element);


md.table = table;
// element tbody
var tbody = (function (element) {
    _inherits(tbody, element);
    function tbody(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tbody.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tbody);
        this.wzElement = "tbody";
    }
    return tbody;
})(element);


md.tbody = tbody;
// element tr
var tr = (function (element) {
    _inherits(tr, element);
    function tr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(tr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tr);
        this.wzElement = "tr";
    }
    return tr;
})(element);


md.tr = tr;
// element td
var td = (function (element) {
    _inherits(td, element);
    function td(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(td.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, td);
        this.wzElement = "td";
    }
    return td;
})(element);


md.td = td;
// element th
var th = (function (element) {
    _inherits(th, element);
    function th(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(th.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, th);
        this.wzElement = "th";
    }
    return th;
})(element);


md.th = th;
// element quote
var quote = (function (element) {
    _inherits(quote, element);
    function quote(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(quote.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, quote);
        this.wzElement = "quote";
    }
    return quote;
})(element);


md.quote = quote;
// element hr
var hr = (function (element) {
    _inherits(hr, element);
    function hr(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(hr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hr);
        this.wzElement = "hr";
    }
    return hr;
})(element);


md.hr = hr;
// element br
var br = (function (element) {
    _inherits(br, element);
    function br(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(br.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, br);
        this.wzElement = "br";
    }
    return br;
})(element);


md.br = br;
// element video
var video = (function (element) {
    _inherits(video, element);
    function video(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(video.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, video);
        this.wzElement = "video";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.id = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.alt = null
    }
    video.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 2 && _ch == 'i') {
            if (name === 'id') {
                this.id = child.v; return true;
            }
        }
        if (_l == 3 && _ch == 'a') {
            if (name === 'alt') {
                this.alt = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    video.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return video;
})(element);


md.video = video;
// element aRef
var aRef = (function (element) {
    _inherits(aRef, element);
    function aRef(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(aRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, aRef);
        this.wzElement = "aRef";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.alt = null
    }
    aRef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 'a') {
            if (name === 'alt') {
                this.alt = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    aRef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return aRef;
})(element);


md.aRef = aRef;
// element imgRef
var imgRef = (function (element) {
    _inherits(imgRef, element);
    function imgRef(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(imgRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imgRef);
        this.wzElement = "imgRef";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.alt = null
    }
    imgRef.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 3 && _ch == 'a') {
            if (name === 'alt') {
                this.alt = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    imgRef.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return imgRef;
})(element);


md.imgRef = imgRef;
// element ref
var ref = (function (element) {
    _inherits(ref, element);
    function ref(name,sourceLineInfo) {
        _get(Object.getPrototypeOf(ref.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ref);
        this.wzElement = "ref";
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.href = null
        // TODO avoid this declaration, attributes should be tested for undefined not null
        // set this.title = null
    }
    ref.prototype.loadChild = function(child) {
        // Make test case insensitive
        var item,
            ok = false,
            name = child.n.toLowerCase(),
            _l = name.length,
            _ch = name[0];
        if (_l == 4 && _ch == 'h') {
            if (name === 'href') {
                this.href = child.v; return true;
            }
        }
        if (_l == 5 && _ch == 't') {
            if (name === 'title') {
                this.title = child.v; return true;
            }
        }
        ok = md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    ref.prototype.loadFromNode = function(node) {
        var loaded = false;
        // TODO VIA after transition to node.children
        var children = {}.toString.call(node.children) === '[object Array]' ? node.children : node.childs;
        var i, i_len=children.length, item;
        for (i=0; i<i_len; i++) {
            item = children[i];
            loaded = this.loadChild(item);
            if (!loaded) {
                throw new md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        }
    }
    return ref;
})(element);


md.ref = ref;
md.__tagElementMapping = { '+': 'code', 'r-a': 'aRef', 'ra': 'aRef', 'r-img': 'imgRef', 'rimg': 'imgRef' };
var mdModelException = (function () {
    function mdModelException(message,node,instance) {
        _classCallCheck(this, mdModelException);
        // TODO node seems superflous
        if (node && instance) {
            this.message = message + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        this.stack = new Error().stack;
        this.node = node;
    }
    return mdModelException;
})();


md.mdModelException = mdModelException;
var mdContext = (function () {
    function mdContext() {
        _classCallCheck(this, mdContext);
        this.validationErrors = [];
    }
    mdContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    mdContext.prototype.addError = function(message,node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return mdContext;
})();


md.mdContext = mdContext;
function parsestring(value,defaultValue,node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}

function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}

function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}

function isBoolean(value) {
    return value === 'true' || value === 'false';
}


