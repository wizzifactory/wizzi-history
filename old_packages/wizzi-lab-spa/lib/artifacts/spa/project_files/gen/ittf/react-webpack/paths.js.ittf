module
    kind jsfile
	+
    var path = require('path')
    var fs = require('fs')
    var url = require('url')
    +
	var appDirectory = fs.realpathSync(process.cwd())
    +
	function resolveApp
        param relativePath
        return path.resolve(appDirectory, relativePath)
    +
	var nodePaths
		[
	var folders = (process.env.NODE_PATH || '').split(process.platform === 'win32' ? ';' : ':')
	foreach folder in folders
		if Boolean(folder) && path.isAbsolute(folder) === false
			_ nodePaths.push(resolveApp(folder))
    +
	log 'react-webpack.paths.nodePaths', nodePaths
	+
	var envPublicUrl = process.env.PUBLIC_URL
	+
    function ensureSlash
        param path
        param needsSlash
        var hasSlash = path.endsWith('/')
        if hasSlash && !needsSlash
            return path.substr(path, (path.length - 1))
        elif !(hasSlash) && needsSlash
            return path + '/'
        else 
            return path
    +
	function getPublicUrl
        param appPackageJson
        return (envPublicUrl || require(appPackageJson).homepage)
    +
	function getServedPath
        param appPackageJson
        var publicUrl = getPublicUrl(appPackageJson)
        var servedUrl = (envPublicUrl || (publicUrl ? url.parse(publicUrl).pathname : '/'))
        return ensureSlash(servedUrl, true)
    +
	set module.exports =
        { 
            @ appBuild resolveApp('build')
            @ appPublic resolveApp('public')
            @ appHtml resolveApp('public/index.html')
            @ appIndexJs resolveApp('src/index.js')
            @ appPackageJson resolveApp('package.json')
            @ appSrc resolveApp('src')
            @ yarnLockFile resolveApp('yarn.lock')
            @ testsSetup resolveApp('src/setupTests.js')
            @ appNodeModules resolveApp('node_modules')
            @ nodePaths nodePaths
            @ publicUrl getPublicUrl(resolveApp('package.json'))
            @ servedPath getServedPath(resolveApp('package.json'))
